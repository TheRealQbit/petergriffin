
lab2_DEFINITIVO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000035fc  0800013c  0800013c  0001013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08003738  08003738  00013738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800375c  0800375c  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  0800375c  0800375c  0001375c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003764  08003764  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003764  08003764  00013764  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003768  08003768  00013768  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  0800376c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000188  2000000c  08003778  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000194  08003778  00020194  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020035  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000c462  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001e1b  00000000  00000000  0002c4da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000c38  00000000  00000000  0002e2f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000973  00000000  00000000  0002ef30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00014622  00000000  00000000  0002f8a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000de6c  00000000  00000000  00043ec5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00082e75  00000000  00000000  00051d31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000032cc  00000000  00000000  000d4ba8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000078  00000000  00000000  000d7e74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	; (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	; (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	2000000c 	.word	0x2000000c
 8000158:	00000000 	.word	0x00000000
 800015c:	08003720 	.word	0x08003720

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	; (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	; (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	; (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	20000010 	.word	0x20000010
 8000178:	08003720 	.word	0x08003720

0800017c <__aeabi_uldivmod>:
 800017c:	b953      	cbnz	r3, 8000194 <__aeabi_uldivmod+0x18>
 800017e:	b94a      	cbnz	r2, 8000194 <__aeabi_uldivmod+0x18>
 8000180:	2900      	cmp	r1, #0
 8000182:	bf08      	it	eq
 8000184:	2800      	cmpeq	r0, #0
 8000186:	bf1c      	itt	ne
 8000188:	f04f 31ff 	movne.w	r1, #4294967295
 800018c:	f04f 30ff 	movne.w	r0, #4294967295
 8000190:	f000 b972 	b.w	8000478 <__aeabi_idiv0>
 8000194:	f1ad 0c08 	sub.w	ip, sp, #8
 8000198:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800019c:	f000 f806 	bl	80001ac <__udivmoddi4>
 80001a0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001a8:	b004      	add	sp, #16
 80001aa:	4770      	bx	lr

080001ac <__udivmoddi4>:
 80001ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001b0:	9e08      	ldr	r6, [sp, #32]
 80001b2:	460d      	mov	r5, r1
 80001b4:	4604      	mov	r4, r0
 80001b6:	468e      	mov	lr, r1
 80001b8:	2b00      	cmp	r3, #0
 80001ba:	d14c      	bne.n	8000256 <__udivmoddi4+0xaa>
 80001bc:	428a      	cmp	r2, r1
 80001be:	4694      	mov	ip, r2
 80001c0:	d967      	bls.n	8000292 <__udivmoddi4+0xe6>
 80001c2:	fab2 f382 	clz	r3, r2
 80001c6:	b153      	cbz	r3, 80001de <__udivmoddi4+0x32>
 80001c8:	fa02 fc03 	lsl.w	ip, r2, r3
 80001cc:	f1c3 0220 	rsb	r2, r3, #32
 80001d0:	fa01 fe03 	lsl.w	lr, r1, r3
 80001d4:	fa20 f202 	lsr.w	r2, r0, r2
 80001d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80001dc:	409c      	lsls	r4, r3
 80001de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80001e2:	fbbe f1f7 	udiv	r1, lr, r7
 80001e6:	fa1f f58c 	uxth.w	r5, ip
 80001ea:	fb07 ee11 	mls	lr, r7, r1, lr
 80001ee:	fb01 f005 	mul.w	r0, r1, r5
 80001f2:	0c22      	lsrs	r2, r4, #16
 80001f4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80001f8:	4290      	cmp	r0, r2
 80001fa:	d90a      	bls.n	8000212 <__udivmoddi4+0x66>
 80001fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000200:	f101 3eff 	add.w	lr, r1, #4294967295
 8000204:	f080 8119 	bcs.w	800043a <__udivmoddi4+0x28e>
 8000208:	4290      	cmp	r0, r2
 800020a:	f240 8116 	bls.w	800043a <__udivmoddi4+0x28e>
 800020e:	3902      	subs	r1, #2
 8000210:	4462      	add	r2, ip
 8000212:	1a12      	subs	r2, r2, r0
 8000214:	fbb2 f0f7 	udiv	r0, r2, r7
 8000218:	fb07 2210 	mls	r2, r7, r0, r2
 800021c:	fb00 f505 	mul.w	r5, r0, r5
 8000220:	b2a4      	uxth	r4, r4
 8000222:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000226:	42a5      	cmp	r5, r4
 8000228:	d90a      	bls.n	8000240 <__udivmoddi4+0x94>
 800022a:	eb1c 0404 	adds.w	r4, ip, r4
 800022e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000232:	f080 8104 	bcs.w	800043e <__udivmoddi4+0x292>
 8000236:	42a5      	cmp	r5, r4
 8000238:	f240 8101 	bls.w	800043e <__udivmoddi4+0x292>
 800023c:	4464      	add	r4, ip
 800023e:	3802      	subs	r0, #2
 8000240:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000244:	2100      	movs	r1, #0
 8000246:	1b64      	subs	r4, r4, r5
 8000248:	b11e      	cbz	r6, 8000252 <__udivmoddi4+0xa6>
 800024a:	40dc      	lsrs	r4, r3
 800024c:	2300      	movs	r3, #0
 800024e:	e9c6 4300 	strd	r4, r3, [r6]
 8000252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000256:	428b      	cmp	r3, r1
 8000258:	d908      	bls.n	800026c <__udivmoddi4+0xc0>
 800025a:	2e00      	cmp	r6, #0
 800025c:	f000 80ea 	beq.w	8000434 <__udivmoddi4+0x288>
 8000260:	2100      	movs	r1, #0
 8000262:	e9c6 0500 	strd	r0, r5, [r6]
 8000266:	4608      	mov	r0, r1
 8000268:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800026c:	fab3 f183 	clz	r1, r3
 8000270:	2900      	cmp	r1, #0
 8000272:	d148      	bne.n	8000306 <__udivmoddi4+0x15a>
 8000274:	42ab      	cmp	r3, r5
 8000276:	d302      	bcc.n	800027e <__udivmoddi4+0xd2>
 8000278:	4282      	cmp	r2, r0
 800027a:	f200 80f8 	bhi.w	800046e <__udivmoddi4+0x2c2>
 800027e:	1a84      	subs	r4, r0, r2
 8000280:	eb65 0203 	sbc.w	r2, r5, r3
 8000284:	2001      	movs	r0, #1
 8000286:	4696      	mov	lr, r2
 8000288:	2e00      	cmp	r6, #0
 800028a:	d0e2      	beq.n	8000252 <__udivmoddi4+0xa6>
 800028c:	e9c6 4e00 	strd	r4, lr, [r6]
 8000290:	e7df      	b.n	8000252 <__udivmoddi4+0xa6>
 8000292:	b902      	cbnz	r2, 8000296 <__udivmoddi4+0xea>
 8000294:	deff      	udf	#255	; 0xff
 8000296:	fab2 f382 	clz	r3, r2
 800029a:	2b00      	cmp	r3, #0
 800029c:	f040 808e 	bne.w	80003bc <__udivmoddi4+0x210>
 80002a0:	1a88      	subs	r0, r1, r2
 80002a2:	2101      	movs	r1, #1
 80002a4:	0c17      	lsrs	r7, r2, #16
 80002a6:	fa1f fe82 	uxth.w	lr, r2
 80002aa:	fbb0 f5f7 	udiv	r5, r0, r7
 80002ae:	fb07 0015 	mls	r0, r7, r5, r0
 80002b2:	0c22      	lsrs	r2, r4, #16
 80002b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80002b8:	fb0e f005 	mul.w	r0, lr, r5
 80002bc:	4290      	cmp	r0, r2
 80002be:	d908      	bls.n	80002d2 <__udivmoddi4+0x126>
 80002c0:	eb1c 0202 	adds.w	r2, ip, r2
 80002c4:	f105 38ff 	add.w	r8, r5, #4294967295
 80002c8:	d202      	bcs.n	80002d0 <__udivmoddi4+0x124>
 80002ca:	4290      	cmp	r0, r2
 80002cc:	f200 80cc 	bhi.w	8000468 <__udivmoddi4+0x2bc>
 80002d0:	4645      	mov	r5, r8
 80002d2:	1a12      	subs	r2, r2, r0
 80002d4:	fbb2 f0f7 	udiv	r0, r2, r7
 80002d8:	fb07 2210 	mls	r2, r7, r0, r2
 80002dc:	fb0e fe00 	mul.w	lr, lr, r0
 80002e0:	b2a4      	uxth	r4, r4
 80002e2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80002e6:	45a6      	cmp	lr, r4
 80002e8:	d908      	bls.n	80002fc <__udivmoddi4+0x150>
 80002ea:	eb1c 0404 	adds.w	r4, ip, r4
 80002ee:	f100 32ff 	add.w	r2, r0, #4294967295
 80002f2:	d202      	bcs.n	80002fa <__udivmoddi4+0x14e>
 80002f4:	45a6      	cmp	lr, r4
 80002f6:	f200 80b4 	bhi.w	8000462 <__udivmoddi4+0x2b6>
 80002fa:	4610      	mov	r0, r2
 80002fc:	eba4 040e 	sub.w	r4, r4, lr
 8000300:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000304:	e7a0      	b.n	8000248 <__udivmoddi4+0x9c>
 8000306:	f1c1 0720 	rsb	r7, r1, #32
 800030a:	408b      	lsls	r3, r1
 800030c:	fa22 fc07 	lsr.w	ip, r2, r7
 8000310:	ea4c 0c03 	orr.w	ip, ip, r3
 8000314:	fa25 fa07 	lsr.w	sl, r5, r7
 8000318:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800031c:	fbba f8f9 	udiv	r8, sl, r9
 8000320:	408d      	lsls	r5, r1
 8000322:	fa20 f307 	lsr.w	r3, r0, r7
 8000326:	fb09 aa18 	mls	sl, r9, r8, sl
 800032a:	fa1f fe8c 	uxth.w	lr, ip
 800032e:	432b      	orrs	r3, r5
 8000330:	fa00 f501 	lsl.w	r5, r0, r1
 8000334:	fb08 f00e 	mul.w	r0, r8, lr
 8000338:	0c1c      	lsrs	r4, r3, #16
 800033a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800033e:	42a0      	cmp	r0, r4
 8000340:	fa02 f201 	lsl.w	r2, r2, r1
 8000344:	d90b      	bls.n	800035e <__udivmoddi4+0x1b2>
 8000346:	eb1c 0404 	adds.w	r4, ip, r4
 800034a:	f108 3aff 	add.w	sl, r8, #4294967295
 800034e:	f080 8086 	bcs.w	800045e <__udivmoddi4+0x2b2>
 8000352:	42a0      	cmp	r0, r4
 8000354:	f240 8083 	bls.w	800045e <__udivmoddi4+0x2b2>
 8000358:	f1a8 0802 	sub.w	r8, r8, #2
 800035c:	4464      	add	r4, ip
 800035e:	1a24      	subs	r4, r4, r0
 8000360:	b298      	uxth	r0, r3
 8000362:	fbb4 f3f9 	udiv	r3, r4, r9
 8000366:	fb09 4413 	mls	r4, r9, r3, r4
 800036a:	fb03 fe0e 	mul.w	lr, r3, lr
 800036e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8000372:	45a6      	cmp	lr, r4
 8000374:	d908      	bls.n	8000388 <__udivmoddi4+0x1dc>
 8000376:	eb1c 0404 	adds.w	r4, ip, r4
 800037a:	f103 30ff 	add.w	r0, r3, #4294967295
 800037e:	d26a      	bcs.n	8000456 <__udivmoddi4+0x2aa>
 8000380:	45a6      	cmp	lr, r4
 8000382:	d968      	bls.n	8000456 <__udivmoddi4+0x2aa>
 8000384:	3b02      	subs	r3, #2
 8000386:	4464      	add	r4, ip
 8000388:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800038c:	fba0 9302 	umull	r9, r3, r0, r2
 8000390:	eba4 040e 	sub.w	r4, r4, lr
 8000394:	429c      	cmp	r4, r3
 8000396:	46c8      	mov	r8, r9
 8000398:	469e      	mov	lr, r3
 800039a:	d354      	bcc.n	8000446 <__udivmoddi4+0x29a>
 800039c:	d051      	beq.n	8000442 <__udivmoddi4+0x296>
 800039e:	2e00      	cmp	r6, #0
 80003a0:	d067      	beq.n	8000472 <__udivmoddi4+0x2c6>
 80003a2:	ebb5 0308 	subs.w	r3, r5, r8
 80003a6:	eb64 040e 	sbc.w	r4, r4, lr
 80003aa:	40cb      	lsrs	r3, r1
 80003ac:	fa04 f707 	lsl.w	r7, r4, r7
 80003b0:	431f      	orrs	r7, r3
 80003b2:	40cc      	lsrs	r4, r1
 80003b4:	e9c6 7400 	strd	r7, r4, [r6]
 80003b8:	2100      	movs	r1, #0
 80003ba:	e74a      	b.n	8000252 <__udivmoddi4+0xa6>
 80003bc:	fa02 fc03 	lsl.w	ip, r2, r3
 80003c0:	f1c3 0020 	rsb	r0, r3, #32
 80003c4:	40c1      	lsrs	r1, r0
 80003c6:	409d      	lsls	r5, r3
 80003c8:	fa24 f000 	lsr.w	r0, r4, r0
 80003cc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003d0:	4328      	orrs	r0, r5
 80003d2:	fbb1 f5f7 	udiv	r5, r1, r7
 80003d6:	fb07 1115 	mls	r1, r7, r5, r1
 80003da:	fa1f fe8c 	uxth.w	lr, ip
 80003de:	0c02      	lsrs	r2, r0, #16
 80003e0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80003e4:	fb05 f10e 	mul.w	r1, r5, lr
 80003e8:	4291      	cmp	r1, r2
 80003ea:	fa04 f403 	lsl.w	r4, r4, r3
 80003ee:	d908      	bls.n	8000402 <__udivmoddi4+0x256>
 80003f0:	eb1c 0202 	adds.w	r2, ip, r2
 80003f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80003f8:	d22f      	bcs.n	800045a <__udivmoddi4+0x2ae>
 80003fa:	4291      	cmp	r1, r2
 80003fc:	d92d      	bls.n	800045a <__udivmoddi4+0x2ae>
 80003fe:	3d02      	subs	r5, #2
 8000400:	4462      	add	r2, ip
 8000402:	1a52      	subs	r2, r2, r1
 8000404:	fbb2 f1f7 	udiv	r1, r2, r7
 8000408:	fb07 2211 	mls	r2, r7, r1, r2
 800040c:	b280      	uxth	r0, r0
 800040e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8000412:	fb01 f20e 	mul.w	r2, r1, lr
 8000416:	4282      	cmp	r2, r0
 8000418:	d908      	bls.n	800042c <__udivmoddi4+0x280>
 800041a:	eb1c 0000 	adds.w	r0, ip, r0
 800041e:	f101 38ff 	add.w	r8, r1, #4294967295
 8000422:	d216      	bcs.n	8000452 <__udivmoddi4+0x2a6>
 8000424:	4282      	cmp	r2, r0
 8000426:	d914      	bls.n	8000452 <__udivmoddi4+0x2a6>
 8000428:	3902      	subs	r1, #2
 800042a:	4460      	add	r0, ip
 800042c:	1a80      	subs	r0, r0, r2
 800042e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000432:	e73a      	b.n	80002aa <__udivmoddi4+0xfe>
 8000434:	4631      	mov	r1, r6
 8000436:	4630      	mov	r0, r6
 8000438:	e70b      	b.n	8000252 <__udivmoddi4+0xa6>
 800043a:	4671      	mov	r1, lr
 800043c:	e6e9      	b.n	8000212 <__udivmoddi4+0x66>
 800043e:	4610      	mov	r0, r2
 8000440:	e6fe      	b.n	8000240 <__udivmoddi4+0x94>
 8000442:	454d      	cmp	r5, r9
 8000444:	d2ab      	bcs.n	800039e <__udivmoddi4+0x1f2>
 8000446:	ebb9 0802 	subs.w	r8, r9, r2
 800044a:	eb63 0e0c 	sbc.w	lr, r3, ip
 800044e:	3801      	subs	r0, #1
 8000450:	e7a5      	b.n	800039e <__udivmoddi4+0x1f2>
 8000452:	4641      	mov	r1, r8
 8000454:	e7ea      	b.n	800042c <__udivmoddi4+0x280>
 8000456:	4603      	mov	r3, r0
 8000458:	e796      	b.n	8000388 <__udivmoddi4+0x1dc>
 800045a:	4645      	mov	r5, r8
 800045c:	e7d1      	b.n	8000402 <__udivmoddi4+0x256>
 800045e:	46d0      	mov	r8, sl
 8000460:	e77d      	b.n	800035e <__udivmoddi4+0x1b2>
 8000462:	4464      	add	r4, ip
 8000464:	3802      	subs	r0, #2
 8000466:	e749      	b.n	80002fc <__udivmoddi4+0x150>
 8000468:	3d02      	subs	r5, #2
 800046a:	4462      	add	r2, ip
 800046c:	e731      	b.n	80002d2 <__udivmoddi4+0x126>
 800046e:	4608      	mov	r0, r1
 8000470:	e70a      	b.n	8000288 <__udivmoddi4+0xdc>
 8000472:	4631      	mov	r1, r6
 8000474:	e6ed      	b.n	8000252 <__udivmoddi4+0xa6>
 8000476:	bf00      	nop

08000478 <__aeabi_idiv0>:
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop

0800047c <stopWheels>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void stopWheels(void) {
 800047c:	b480      	push	{r7}
 800047e:	af00      	add	r7, sp, #0
    // Stop both motors
    GPIOC->BSRR = (GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9) << 16;
 8000480:	4b03      	ldr	r3, [pc, #12]	; (8000490 <stopWheels+0x14>)
 8000482:	f04f 7270 	mov.w	r2, #62914560	; 0x3c00000
 8000486:	619a      	str	r2, [r3, #24]
}
 8000488:	bf00      	nop
 800048a:	46bd      	mov	sp, r7
 800048c:	bc80      	pop	{r7}
 800048e:	4770      	bx	lr
 8000490:	40020800 	.word	0x40020800

08000494 <moveForward>:

void moveForward(void) {
 8000494:	b480      	push	{r7}
 8000496:	af00      	add	r7, sp, #0
    // Move both motors forward
    GPIOC->BSRR = GPIO_PIN_8;  // Activar el pin de dirección del motor izquierdo hacia adelante
 8000498:	4b07      	ldr	r3, [pc, #28]	; (80004b8 <moveForward+0x24>)
 800049a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800049e:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = GPIO_PIN_6;  // Activar el pin de dirección del motor derecho hacia adelante
 80004a0:	4b05      	ldr	r3, [pc, #20]	; (80004b8 <moveForward+0x24>)
 80004a2:	2240      	movs	r2, #64	; 0x40
 80004a4:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = (GPIO_PIN_7 | GPIO_PIN_9) << 16; // Desactivar los pines de dirección opuestos
 80004a6:	4b04      	ldr	r3, [pc, #16]	; (80004b8 <moveForward+0x24>)
 80004a8:	f04f 7220 	mov.w	r2, #41943040	; 0x2800000
 80004ac:	619a      	str	r2, [r3, #24]
}
 80004ae:	bf00      	nop
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bc80      	pop	{r7}
 80004b4:	4770      	bx	lr
 80004b6:	bf00      	nop
 80004b8:	40020800 	.word	0x40020800

080004bc <rightWheel>:

void rightWheel(void) {
 80004bc:	b480      	push	{r7}
 80004be:	af00      	add	r7, sp, #0
    // Turn right by moving right motor forward and left motor backward
    GPIOC->BSRR = GPIO_PIN_6;  // Activar el pin de dirección del motor izquierdo hacia adelante
 80004c0:	4b07      	ldr	r3, [pc, #28]	; (80004e0 <rightWheel+0x24>)
 80004c2:	2240      	movs	r2, #64	; 0x40
 80004c4:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = GPIO_PIN_9;  // Activar el pin de dirección del motor derecho hacia atrás
 80004c6:	4b06      	ldr	r3, [pc, #24]	; (80004e0 <rightWheel+0x24>)
 80004c8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80004cc:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = (GPIO_PIN_7 | GPIO_PIN_8) << 16; // Desactivar los pines de dirección opuestos
 80004ce:	4b04      	ldr	r3, [pc, #16]	; (80004e0 <rightWheel+0x24>)
 80004d0:	f04f 72c0 	mov.w	r2, #25165824	; 0x1800000
 80004d4:	619a      	str	r2, [r3, #24]
}
 80004d6:	bf00      	nop
 80004d8:	46bd      	mov	sp, r7
 80004da:	bc80      	pop	{r7}
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	40020800 	.word	0x40020800

080004e4 <leftWheel>:

void leftWheel(void) {
 80004e4:	b480      	push	{r7}
 80004e6:	af00      	add	r7, sp, #0
    // Turn left by moving left motor forward and right motor backward
    GPIOC->BSRR = GPIO_PIN_7;  // Activar el pin de dirección del motor izquierdo hacia adelante
 80004e8:	4b07      	ldr	r3, [pc, #28]	; (8000508 <leftWheel+0x24>)
 80004ea:	2280      	movs	r2, #128	; 0x80
 80004ec:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = GPIO_PIN_8;  // Activar el pin de dirección del motor derecho hacia atrás
 80004ee:	4b06      	ldr	r3, [pc, #24]	; (8000508 <leftWheel+0x24>)
 80004f0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80004f4:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = (GPIO_PIN_6 | GPIO_PIN_9) << 16; // Desactivar los pines de dirección opuestos
 80004f6:	4b04      	ldr	r3, [pc, #16]	; (8000508 <leftWheel+0x24>)
 80004f8:	f04f 7210 	mov.w	r2, #37748736	; 0x2400000
 80004fc:	619a      	str	r2, [r3, #24]
}
 80004fe:	bf00      	nop
 8000500:	46bd      	mov	sp, r7
 8000502:	bc80      	pop	{r7}
 8000504:	4770      	bx	lr
 8000506:	bf00      	nop
 8000508:	40020800 	.word	0x40020800

0800050c <moveBackward>:

void moveBackward(void) {
 800050c:	b480      	push	{r7}
 800050e:	af00      	add	r7, sp, #0
    // Move both motors backward by reversing the direction logic
    GPIOC->BSRR = GPIO_PIN_7 | GPIO_PIN_9;  // Activar los pines de dirección opuestos
 8000510:	4b05      	ldr	r3, [pc, #20]	; (8000528 <moveBackward+0x1c>)
 8000512:	f44f 7220 	mov.w	r2, #640	; 0x280
 8000516:	619a      	str	r2, [r3, #24]
    GPIOC->BSRR = (GPIO_PIN_6 | GPIO_PIN_8) << 16;  // Desactivar los pines de dirección hacia adelante
 8000518:	4b03      	ldr	r3, [pc, #12]	; (8000528 <moveBackward+0x1c>)
 800051a:	f04f 72a0 	mov.w	r2, #20971520	; 0x1400000
 800051e:	619a      	str	r2, [r3, #24]
}
 8000520:	bf00      	nop
 8000522:	46bd      	mov	sp, r7
 8000524:	bc80      	pop	{r7}
 8000526:	4770      	bx	lr
 8000528:	40020800 	.word	0x40020800

0800052c <EXTI1_IRQHandler>:
		  			            	 	 	  		GPIOB->MODER = ~(1<<(8*2));
		  			            	 	 	  	  }
		  			            	 	 	  SENSOR_1=0;
		  			            	 	 	  SENSOR_2=0;
}
void EXTI1_IRQHandler(void){  //for the right sensor
 800052c:	b480      	push	{r7}
 800052e:	af00      	add	r7, sp, #0
	if(EXTI -> PR == (1<<1) && carState == 5){
 8000530:	4b0a      	ldr	r3, [pc, #40]	; (800055c <EXTI1_IRQHandler+0x30>)
 8000532:	695b      	ldr	r3, [r3, #20]
 8000534:	2b02      	cmp	r3, #2
 8000536:	d10c      	bne.n	8000552 <EXTI1_IRQHandler+0x26>
 8000538:	4b09      	ldr	r3, [pc, #36]	; (8000560 <EXTI1_IRQHandler+0x34>)
 800053a:	781b      	ldrb	r3, [r3, #0]
 800053c:	2b05      	cmp	r3, #5
 800053e:	d108      	bne.n	8000552 <EXTI1_IRQHandler+0x26>
		SENSOR_1 = 1;
 8000540:	4b08      	ldr	r3, [pc, #32]	; (8000564 <EXTI1_IRQHandler+0x38>)
 8000542:	2201      	movs	r2, #1
 8000544:	701a      	strb	r2, [r3, #0]
		EXTI -> PR |= (1<<1); // clean the flags with a 1
 8000546:	4b05      	ldr	r3, [pc, #20]	; (800055c <EXTI1_IRQHandler+0x30>)
 8000548:	695b      	ldr	r3, [r3, #20]
 800054a:	4a04      	ldr	r2, [pc, #16]	; (800055c <EXTI1_IRQHandler+0x30>)
 800054c:	f043 0302 	orr.w	r3, r3, #2
 8000550:	6153      	str	r3, [r2, #20]
	}

}
 8000552:	bf00      	nop
 8000554:	46bd      	mov	sp, r7
 8000556:	bc80      	pop	{r7}
 8000558:	4770      	bx	lr
 800055a:	bf00      	nop
 800055c:	40010400 	.word	0x40010400
 8000560:	20000183 	.word	0x20000183
 8000564:	20000180 	.word	0x20000180

08000568 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){  //for the left sensor
 8000568:	b480      	push	{r7}
 800056a:	af00      	add	r7, sp, #0
	if(EXTI -> PR == (1<<2) && carState == 5){
 800056c:	4b0a      	ldr	r3, [pc, #40]	; (8000598 <EXTI2_IRQHandler+0x30>)
 800056e:	695b      	ldr	r3, [r3, #20]
 8000570:	2b04      	cmp	r3, #4
 8000572:	d10c      	bne.n	800058e <EXTI2_IRQHandler+0x26>
 8000574:	4b09      	ldr	r3, [pc, #36]	; (800059c <EXTI2_IRQHandler+0x34>)
 8000576:	781b      	ldrb	r3, [r3, #0]
 8000578:	2b05      	cmp	r3, #5
 800057a:	d108      	bne.n	800058e <EXTI2_IRQHandler+0x26>
		SENSOR_2 = 1;
 800057c:	4b08      	ldr	r3, [pc, #32]	; (80005a0 <EXTI2_IRQHandler+0x38>)
 800057e:	2201      	movs	r2, #1
 8000580:	701a      	strb	r2, [r3, #0]
			EXTI -> PR |= (1<<2); //clean the flags with a 1
 8000582:	4b05      	ldr	r3, [pc, #20]	; (8000598 <EXTI2_IRQHandler+0x30>)
 8000584:	695b      	ldr	r3, [r3, #20]
 8000586:	4a04      	ldr	r2, [pc, #16]	; (8000598 <EXTI2_IRQHandler+0x30>)
 8000588:	f043 0304 	orr.w	r3, r3, #4
 800058c:	6153      	str	r3, [r2, #20]
		}

}
 800058e:	bf00      	nop
 8000590:	46bd      	mov	sp, r7
 8000592:	bc80      	pop	{r7}
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop
 8000598:	40010400 	.word	0x40010400
 800059c:	20000183 	.word	0x20000183
 80005a0:	20000181 	.word	0x20000181

080005a4 <TIM4_IRQHandler>:

void TIM4_IRQHandler(void){
 80005a4:	b480      	push	{r7}
 80005a6:	af00      	add	r7, sp, #0
	if((TIM4->SR & (1<<1))!=0){
 80005a8:	4b0f      	ldr	r3, [pc, #60]	; (80005e8 <TIM4_IRQHandler+0x44>)
 80005aa:	691b      	ldr	r3, [r3, #16]
 80005ac:	f003 0302 	and.w	r3, r3, #2
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d015      	beq.n	80005e0 <TIM4_IRQHandler+0x3c>
	if(state == 0){
 80005b4:	4b0d      	ldr	r3, [pc, #52]	; (80005ec <TIM4_IRQHandler+0x48>)
 80005b6:	781b      	ldrb	r3, [r3, #0]
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d103      	bne.n	80005c4 <TIM4_IRQHandler+0x20>
		state = 1;
 80005bc:	4b0b      	ldr	r3, [pc, #44]	; (80005ec <TIM4_IRQHandler+0x48>)
 80005be:	2201      	movs	r2, #1
 80005c0:	701a      	strb	r2, [r3, #0]
 80005c2:	e002      	b.n	80005ca <TIM4_IRQHandler+0x26>
	}
	else{
		state = 0;
 80005c4:	4b09      	ldr	r3, [pc, #36]	; (80005ec <TIM4_IRQHandler+0x48>)
 80005c6:	2200      	movs	r2, #0
 80005c8:	701a      	strb	r2, [r3, #0]
	}

	TIM4->CCR1 += 250;
 80005ca:	4b07      	ldr	r3, [pc, #28]	; (80005e8 <TIM4_IRQHandler+0x44>)
 80005cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80005ce:	4a06      	ldr	r2, [pc, #24]	; (80005e8 <TIM4_IRQHandler+0x44>)
 80005d0:	33fa      	adds	r3, #250	; 0xfa
 80005d2:	6353      	str	r3, [r2, #52]	; 0x34

	TIM4->SR &= ~(1<<1);
 80005d4:	4b04      	ldr	r3, [pc, #16]	; (80005e8 <TIM4_IRQHandler+0x44>)
 80005d6:	691b      	ldr	r3, [r3, #16]
 80005d8:	4a03      	ldr	r2, [pc, #12]	; (80005e8 <TIM4_IRQHandler+0x44>)
 80005da:	f023 0302 	bic.w	r3, r3, #2
 80005de:	6113      	str	r3, [r2, #16]
    }
}
 80005e0:	bf00      	nop
 80005e2:	46bd      	mov	sp, r7
 80005e4:	bc80      	pop	{r7}
 80005e6:	4770      	bx	lr
 80005e8:	40000800 	.word	0x40000800
 80005ec:	20000182 	.word	0x20000182

080005f0 <ADC1_IRQHandler>:
void ADC1_IRQHandler(void) {
 80005f0:	b480      	push	{r7}
 80005f2:	af00      	add	r7, sp, #0
    if ((ADC1->SR & (1<<1)) != 0) {
 80005f4:	4b07      	ldr	r3, [pc, #28]	; (8000614 <ADC1_IRQHandler+0x24>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	f003 0302 	and.w	r3, r3, #2
 80005fc:	2b00      	cmp	r3, #0
 80005fe:	d004      	beq.n	800060a <ADC1_IRQHandler+0x1a>
        valor = ADC1->DR; // Lee el valor del ADC
 8000600:	4b04      	ldr	r3, [pc, #16]	; (8000614 <ADC1_IRQHandler+0x24>)
 8000602:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000604:	b29a      	uxth	r2, r3
 8000606:	4b04      	ldr	r3, [pc, #16]	; (8000618 <ADC1_IRQHandler+0x28>)
 8000608:	801a      	strh	r2, [r3, #0]

    }
}
 800060a:	bf00      	nop
 800060c:	46bd      	mov	sp, r7
 800060e:	bc80      	pop	{r7}
 8000610:	4770      	bx	lr
 8000612:	bf00      	nop
 8000614:	40012400 	.word	0x40012400
 8000618:	20000184 	.word	0x20000184

0800061c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800061c:	b580      	push	{r7, lr}
 800061e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000620:	f000 fdf5 	bl	800120e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000624:	f000 fa2c 	bl	8000a80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000628:	f000 fbec 	bl	8000e04 <MX_GPIO_Init>
  MX_ADC_Init();
 800062c:	f000 fa90 	bl	8000b50 <MX_ADC_Init>
  MX_LCD_Init();
 8000630:	f000 fae8 	bl	8000c04 <MX_LCD_Init>
  MX_TS_Init();
 8000634:	f000 fbb6 	bl	8000da4 <MX_TS_Init>
  MX_TIM4_Init();
 8000638:	f000 fb66 	bl	8000d08 <MX_TIM4_Init>
  MX_USART1_UART_Init();
 800063c:	f000 fbb8 	bl	8000db0 <MX_USART1_UART_Init>
  MX_TIM3_Init();
 8000640:	f000 fb14 	bl	8000c6c <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  // PC6, PC7, PC8, and PC9 as digital outputs (01)
    GPIOC->MODER &= ~(1 << (6*2+1));
 8000644:	4b98      	ldr	r3, [pc, #608]	; (80008a8 <main+0x28c>)
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	4a97      	ldr	r2, [pc, #604]	; (80008a8 <main+0x28c>)
 800064a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800064e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (1 << (6*2));
 8000650:	4b95      	ldr	r3, [pc, #596]	; (80008a8 <main+0x28c>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	4a94      	ldr	r2, [pc, #592]	; (80008a8 <main+0x28c>)
 8000656:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800065a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1 << (7*2+1));
 800065c:	4b92      	ldr	r3, [pc, #584]	; (80008a8 <main+0x28c>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	4a91      	ldr	r2, [pc, #580]	; (80008a8 <main+0x28c>)
 8000662:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000666:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (1 << (7*2));
 8000668:	4b8f      	ldr	r3, [pc, #572]	; (80008a8 <main+0x28c>)
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	4a8e      	ldr	r2, [pc, #568]	; (80008a8 <main+0x28c>)
 800066e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000672:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1 << (8*2+1));
 8000674:	4b8c      	ldr	r3, [pc, #560]	; (80008a8 <main+0x28c>)
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	4a8b      	ldr	r2, [pc, #556]	; (80008a8 <main+0x28c>)
 800067a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800067e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (1 << (8*2));
 8000680:	4b89      	ldr	r3, [pc, #548]	; (80008a8 <main+0x28c>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	4a88      	ldr	r2, [pc, #544]	; (80008a8 <main+0x28c>)
 8000686:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800068a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1 << (9*2+1));
 800068c:	4b86      	ldr	r3, [pc, #536]	; (80008a8 <main+0x28c>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	4a85      	ldr	r2, [pc, #532]	; (80008a8 <main+0x28c>)
 8000692:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8000696:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (1 << (9*2));
 8000698:	4b83      	ldr	r3, [pc, #524]	; (80008a8 <main+0x28c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a82      	ldr	r2, [pc, #520]	; (80008a8 <main+0x28c>)
 800069e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80006a2:	6013      	str	r3, [r2, #0]

    // PC1 & PC2 as digital input (00)
    GPIOC->MODER &= ~(1 << (1*2+1));
 80006a4:	4b80      	ldr	r3, [pc, #512]	; (80008a8 <main+0x28c>)
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	4a7f      	ldr	r2, [pc, #508]	; (80008a8 <main+0x28c>)
 80006aa:	f023 0308 	bic.w	r3, r3, #8
 80006ae:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1 << (1*2));
 80006b0:	4b7d      	ldr	r3, [pc, #500]	; (80008a8 <main+0x28c>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	4a7c      	ldr	r2, [pc, #496]	; (80008a8 <main+0x28c>)
 80006b6:	f023 0304 	bic.w	r3, r3, #4
 80006ba:	6013      	str	r3, [r2, #0]

    GPIOC->MODER &= ~(1 << (2*2+1));
 80006bc:	4b7a      	ldr	r3, [pc, #488]	; (80008a8 <main+0x28c>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	4a79      	ldr	r2, [pc, #484]	; (80008a8 <main+0x28c>)
 80006c2:	f023 0320 	bic.w	r3, r3, #32
 80006c6:	6013      	str	r3, [r2, #0]
    GPIOC->MODER &= ~(1 << (2*2));
 80006c8:	4b77      	ldr	r3, [pc, #476]	; (80008a8 <main+0x28c>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	4a76      	ldr	r2, [pc, #472]	; (80008a8 <main+0x28c>)
 80006ce:	f023 0310 	bic.w	r3, r3, #16
 80006d2:	6013      	str	r3, [r2, #0]

    //Configure the EXTI1
    //Hacemos la interrupcion del primer infrarrojo
    SYSCFG -> EXTICR[0] = 0;
 80006d4:	4b75      	ldr	r3, [pc, #468]	; (80008ac <main+0x290>)
 80006d6:	2200      	movs	r2, #0
 80006d8:	609a      	str	r2, [r3, #8]
    EXTI -> IMR |= (1<<1);
 80006da:	4b75      	ldr	r3, [pc, #468]	; (80008b0 <main+0x294>)
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	4a74      	ldr	r2, [pc, #464]	; (80008b0 <main+0x294>)
 80006e0:	f043 0302 	orr.w	r3, r3, #2
 80006e4:	6013      	str	r3, [r2, #0]
    EXTI -> RTSR |= (1<<1);
 80006e6:	4b72      	ldr	r3, [pc, #456]	; (80008b0 <main+0x294>)
 80006e8:	689b      	ldr	r3, [r3, #8]
 80006ea:	4a71      	ldr	r2, [pc, #452]	; (80008b0 <main+0x294>)
 80006ec:	f043 0302 	orr.w	r3, r3, #2
 80006f0:	6093      	str	r3, [r2, #8]
    EXTI -> FTSR |= (1<<1);
 80006f2:	4b6f      	ldr	r3, [pc, #444]	; (80008b0 <main+0x294>)
 80006f4:	68db      	ldr	r3, [r3, #12]
 80006f6:	4a6e      	ldr	r2, [pc, #440]	; (80008b0 <main+0x294>)
 80006f8:	f043 0302 	orr.w	r3, r3, #2
 80006fc:	60d3      	str	r3, [r2, #12]
    NVIC->ISER[0] |= (1 << 7);  //EXTI1 posicion 7
 80006fe:	4b6d      	ldr	r3, [pc, #436]	; (80008b4 <main+0x298>)
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	4a6c      	ldr	r2, [pc, #432]	; (80008b4 <main+0x298>)
 8000704:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000708:	6013      	str	r3, [r2, #0]


     //Configure the EXTI2
    SYSCFG -> EXTICR[0] = 0;
 800070a:	4b68      	ldr	r3, [pc, #416]	; (80008ac <main+0x290>)
 800070c:	2200      	movs	r2, #0
 800070e:	609a      	str	r2, [r3, #8]
    EXTI -> IMR |= (1<<2);
 8000710:	4b67      	ldr	r3, [pc, #412]	; (80008b0 <main+0x294>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	4a66      	ldr	r2, [pc, #408]	; (80008b0 <main+0x294>)
 8000716:	f043 0304 	orr.w	r3, r3, #4
 800071a:	6013      	str	r3, [r2, #0]
    EXTI -> RTSR |= (1<<2);
 800071c:	4b64      	ldr	r3, [pc, #400]	; (80008b0 <main+0x294>)
 800071e:	689b      	ldr	r3, [r3, #8]
 8000720:	4a63      	ldr	r2, [pc, #396]	; (80008b0 <main+0x294>)
 8000722:	f043 0304 	orr.w	r3, r3, #4
 8000726:	6093      	str	r3, [r2, #8]
    EXTI -> FTSR |= (1<<2);
 8000728:	4b61      	ldr	r3, [pc, #388]	; (80008b0 <main+0x294>)
 800072a:	68db      	ldr	r3, [r3, #12]
 800072c:	4a60      	ldr	r2, [pc, #384]	; (80008b0 <main+0x294>)
 800072e:	f043 0304 	orr.w	r3, r3, #4
 8000732:	60d3      	str	r3, [r2, #12]
    NVIC->ISER[0] |= (1 << 8); //EXTI2 posicion 8
 8000734:	4b5f      	ldr	r3, [pc, #380]	; (80008b4 <main+0x298>)
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	4a5e      	ldr	r2, [pc, #376]	; (80008b4 <main+0x298>)
 800073a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800073e:	6013      	str	r3, [r2, #0]

    //Configure buzzer
    GPIOB->MODER &= ~(1 << (8 * 2));
 8000740:	4b5d      	ldr	r3, [pc, #372]	; (80008b8 <main+0x29c>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	4a5c      	ldr	r2, [pc, #368]	; (80008b8 <main+0x29c>)
 8000746:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800074a:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= (1 << (8 * 2+1));
 800074c:	4b5a      	ldr	r3, [pc, #360]	; (80008b8 <main+0x29c>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	4a59      	ldr	r2, [pc, #356]	; (80008b8 <main+0x29c>)
 8000752:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000756:	6013      	str	r3, [r2, #0]


       //Configure buzzer
       GPIOB->MODER &= ~(1 << (8 * 2));
 8000758:	4b57      	ldr	r3, [pc, #348]	; (80008b8 <main+0x29c>)
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	4a56      	ldr	r2, [pc, #344]	; (80008b8 <main+0x29c>)
 800075e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000762:	6013      	str	r3, [r2, #0]
       GPIOB->MODER |= (1 << (8 * 2+1));
 8000764:	4b54      	ldr	r3, [pc, #336]	; (80008b8 <main+0x29c>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	4a53      	ldr	r2, [pc, #332]	; (80008b8 <main+0x29c>)
 800076a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800076e:	6013      	str	r3, [r2, #0]
       //Configuration TIM4
       TIM4->CR1 = 0;
 8000770:	4b52      	ldr	r3, [pc, #328]	; (80008bc <main+0x2a0>)
 8000772:	2200      	movs	r2, #0
 8000774:	601a      	str	r2, [r3, #0]
       TIM4->CR2 = 0;
 8000776:	4b51      	ldr	r3, [pc, #324]	; (80008bc <main+0x2a0>)
 8000778:	2200      	movs	r2, #0
 800077a:	605a      	str	r2, [r3, #4]
       TIM4->SMCR = 0;
 800077c:	4b4f      	ldr	r3, [pc, #316]	; (80008bc <main+0x2a0>)
 800077e:	2200      	movs	r2, #0
 8000780:	609a      	str	r2, [r3, #8]

       TIM4->CNT = 0;
 8000782:	4b4e      	ldr	r3, [pc, #312]	; (80008bc <main+0x2a0>)
 8000784:	2200      	movs	r2, #0
 8000786:	625a      	str	r2, [r3, #36]	; 0x24
       TIM4->PSC = 31999;
 8000788:	4b4c      	ldr	r3, [pc, #304]	; (80008bc <main+0x2a0>)
 800078a:	f647 42ff 	movw	r2, #31999	; 0x7cff
 800078e:	629a      	str	r2, [r3, #40]	; 0x28
       TIM4->ARR = 0xFFFF;
 8000790:	4b4a      	ldr	r3, [pc, #296]	; (80008bc <main+0x2a0>)
 8000792:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000796:	62da      	str	r2, [r3, #44]	; 0x2c
       TIM4->CCR1 = 250;
 8000798:	4b48      	ldr	r3, [pc, #288]	; (80008bc <main+0x2a0>)
 800079a:	22fa      	movs	r2, #250	; 0xfa
 800079c:	635a      	str	r2, [r3, #52]	; 0x34

       TIM4->CCMR1 = 0;
 800079e:	4b47      	ldr	r3, [pc, #284]	; (80008bc <main+0x2a0>)
 80007a0:	2200      	movs	r2, #0
 80007a2:	619a      	str	r2, [r3, #24]
       TIM4->CCMR2 = 0;
 80007a4:	4b45      	ldr	r3, [pc, #276]	; (80008bc <main+0x2a0>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	61da      	str	r2, [r3, #28]
       TIM4->CCER = 0;
 80007aa:	4b44      	ldr	r3, [pc, #272]	; (80008bc <main+0x2a0>)
 80007ac:	2200      	movs	r2, #0
 80007ae:	621a      	str	r2, [r3, #32]

       TIM4->DIER = (1<<1);
 80007b0:	4b42      	ldr	r3, [pc, #264]	; (80008bc <main+0x2a0>)
 80007b2:	2202      	movs	r2, #2
 80007b4:	60da      	str	r2, [r3, #12]

       TIM4->EGR |= 0x0001;
 80007b6:	4b41      	ldr	r3, [pc, #260]	; (80008bc <main+0x2a0>)
 80007b8:	695b      	ldr	r3, [r3, #20]
 80007ba:	4a40      	ldr	r2, [pc, #256]	; (80008bc <main+0x2a0>)
 80007bc:	f043 0301 	orr.w	r3, r3, #1
 80007c0:	6153      	str	r3, [r2, #20]
       TIM4->SR = 0;
 80007c2:	4b3e      	ldr	r3, [pc, #248]	; (80008bc <main+0x2a0>)
 80007c4:	2200      	movs	r2, #0
 80007c6:	611a      	str	r2, [r3, #16]
       TIM4->CR1 |= 0x0001;
 80007c8:	4b3c      	ldr	r3, [pc, #240]	; (80008bc <main+0x2a0>)
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	4a3b      	ldr	r2, [pc, #236]	; (80008bc <main+0x2a0>)
 80007ce:	f043 0301 	orr.w	r3, r3, #1
 80007d2:	6013      	str	r3, [r2, #0]

       NVIC->ISER[0] |= (1 << 30);
 80007d4:	4b37      	ldr	r3, [pc, #220]	; (80008b4 <main+0x298>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	4a36      	ldr	r2, [pc, #216]	; (80008b4 <main+0x298>)
 80007da:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80007de:	6013      	str	r3, [r2, #0]

       //PA5 as an input(00)
       GPIOA->MODER |= 0x00000C00;
 80007e0:	4b37      	ldr	r3, [pc, #220]	; (80008c0 <main+0x2a4>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	4a36      	ldr	r2, [pc, #216]	; (80008c0 <main+0x2a4>)
 80007e6:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 80007ea:	6013      	str	r3, [r2, #0]


    	ADC1 -> CR2 &= ~(0x00000001);//MAKE SURE THE POWER IS OFF
 80007ec:	4b35      	ldr	r3, [pc, #212]	; (80008c4 <main+0x2a8>)
 80007ee:	689b      	ldr	r3, [r3, #8]
 80007f0:	4a34      	ldr	r2, [pc, #208]	; (80008c4 <main+0x2a8>)
 80007f2:	f023 0301 	bic.w	r3, r3, #1
 80007f6:	6093      	str	r3, [r2, #8]
      	ADC1 -> CR1 = 0x00000020;
 80007f8:	4b32      	ldr	r3, [pc, #200]	; (80008c4 <main+0x2a8>)
 80007fa:	2220      	movs	r2, #32
 80007fc:	605a      	str	r2, [r3, #4]
       	ADC1 -> CR2 = 0x00000412;
 80007fe:	4b31      	ldr	r3, [pc, #196]	; (80008c4 <main+0x2a8>)
 8000800:	f240 4212 	movw	r2, #1042	; 0x412
 8000804:	609a      	str	r2, [r3, #8]
       	ADC1 -> SQR1 = 0x00000000;//I JUST WANT ONE CONVERSION
 8000806:	4b2f      	ldr	r3, [pc, #188]	; (80008c4 <main+0x2a8>)
 8000808:	2200      	movs	r2, #0
 800080a:	631a      	str	r2, [r3, #48]	; 0x30
       	ADC1 -> SQR5 = 0x00000005;
 800080c:	4b2d      	ldr	r3, [pc, #180]	; (80008c4 <main+0x2a8>)
 800080e:	2205      	movs	r2, #5
 8000810:	641a      	str	r2, [r3, #64]	; 0x40
       	ADC1 -> CR2 |= 0x00000001;//POWER ON
 8000812:	4b2c      	ldr	r3, [pc, #176]	; (80008c4 <main+0x2a8>)
 8000814:	689b      	ldr	r3, [r3, #8]
 8000816:	4a2b      	ldr	r2, [pc, #172]	; (80008c4 <main+0x2a8>)
 8000818:	f043 0301 	orr.w	r3, r3, #1
 800081c:	6093      	str	r3, [r2, #8]
       	 while ((ADC1->SR&0x0040)==0); // If ADCONS = 0, I wait till converter is ready
 800081e:	bf00      	nop
 8000820:	4b28      	ldr	r3, [pc, #160]	; (80008c4 <main+0x2a8>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000828:	2b00      	cmp	r3, #0
 800082a:	d0f9      	beq.n	8000820 <main+0x204>
        ADC1->CR2 |= 0x40000000;
 800082c:	4b25      	ldr	r3, [pc, #148]	; (80008c4 <main+0x2a8>)
 800082e:	689b      	ldr	r3, [r3, #8]
 8000830:	4a24      	ldr	r2, [pc, #144]	; (80008c4 <main+0x2a8>)
 8000832:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000836:	6093      	str	r3, [r2, #8]
        NVIC->ISER[0] |= (1<<18);
 8000838:	4b1e      	ldr	r3, [pc, #120]	; (80008b4 <main+0x298>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	4a1d      	ldr	r2, [pc, #116]	; (80008b4 <main+0x298>)
 800083e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000842:	6013      	str	r3, [r2, #0]
         	// PWM Configuration for pin PC6 and channel 1 of TIM3
        TIM3->CR1 = 0x0000; // Disable TIM3
 8000844:	4b20      	ldr	r3, [pc, #128]	; (80008c8 <main+0x2ac>)
 8000846:	2200      	movs	r2, #0
 8000848:	601a      	str	r2, [r3, #0]
       	TIM3->CR2 = 0x0000; // Trigger mode configuration
 800084a:	4b1f      	ldr	r3, [pc, #124]	; (80008c8 <main+0x2ac>)
 800084c:	2200      	movs	r2, #0
 800084e:	605a      	str	r2, [r3, #4]
       	TIM3->SMCR = 0; // Synchronization control configuration
 8000850:	4b1d      	ldr	r3, [pc, #116]	; (80008c8 <main+0x2ac>)
 8000852:	2200      	movs	r2, #0
 8000854:	609a      	str	r2, [r3, #8]

       	TIM3->PSC = 319; // Prescaler configuration
 8000856:	4b1c      	ldr	r3, [pc, #112]	; (80008c8 <main+0x2ac>)
 8000858:	f240 123f 	movw	r2, #319	; 0x13f
 800085c:	629a      	str	r2, [r3, #40]	; 0x28
       	TIM3->CNT = 0; // Initialize counter
 800085e:	4b1a      	ldr	r3, [pc, #104]	; (80008c8 <main+0x2ac>)
 8000860:	2200      	movs	r2, #0
 8000862:	625a      	str	r2, [r3, #36]	; 0x24
       	TIM3->ARR = 99; // Auto-reload value configuration
 8000864:	4b18      	ldr	r3, [pc, #96]	; (80008c8 <main+0x2ac>)
 8000866:	2263      	movs	r2, #99	; 0x63
 8000868:	62da      	str	r2, [r3, #44]	; 0x2c
       	TIM3->CCR2 = 1; // Duty cycle configuration (DC debe estar definido previamente)
 800086a:	4b17      	ldr	r3, [pc, #92]	; (80008c8 <main+0x2ac>)
 800086c:	2201      	movs	r2, #1
 800086e:	639a      	str	r2, [r3, #56]	; 0x38
       	TIM3->CCR4 = 1;
 8000870:	4b15      	ldr	r3, [pc, #84]	; (80008c8 <main+0x2ac>)
 8000872:	2201      	movs	r2, #1
 8000874:	641a      	str	r2, [r3, #64]	; 0x40

       	TIM3->DIER = 0x0000; // Disable interrupts
 8000876:	4b14      	ldr	r3, [pc, #80]	; (80008c8 <main+0x2ac>)
 8000878:	2200      	movs	r2, #0
 800087a:	60da      	str	r2, [r3, #12]
       	TIM3->DCR = 0;
 800087c:	4b12      	ldr	r3, [pc, #72]	; (80008c8 <main+0x2ac>)
 800087e:	2200      	movs	r2, #0
 8000880:	649a      	str	r2, [r3, #72]	; 0x48
         	//PC7 ch2

       	TIM3->CCMR1 |= (1<<(5*2+1)); // Clear channel 1 configuration bits
 8000882:	4b11      	ldr	r3, [pc, #68]	; (80008c8 <main+0x2ac>)
 8000884:	699b      	ldr	r3, [r3, #24]
 8000886:	4a10      	ldr	r2, [pc, #64]	; (80008c8 <main+0x2ac>)
 8000888:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800088c:	6193      	str	r3, [r2, #24]
       	TIM3->CCMR1 |= (1<<(7*2));	//1
 800088e:	4b0e      	ldr	r3, [pc, #56]	; (80008c8 <main+0x2ac>)
 8000890:	699b      	ldr	r3, [r3, #24]
 8000892:	4a0d      	ldr	r2, [pc, #52]	; (80008c8 <main+0x2ac>)
 8000894:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000898:	6193      	str	r3, [r2, #24]
       	TIM3->CCMR1 |= (1<<(6*2+1));	//1
 800089a:	4b0b      	ldr	r3, [pc, #44]	; (80008c8 <main+0x2ac>)
 800089c:	699b      	ldr	r3, [r3, #24]
 800089e:	4a0a      	ldr	r2, [pc, #40]	; (80008c8 <main+0x2ac>)
 80008a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80008a4:	6193      	str	r3, [r2, #24]
 80008a6:	e011      	b.n	80008cc <main+0x2b0>
 80008a8:	40020800 	.word	0x40020800
 80008ac:	40010000 	.word	0x40010000
 80008b0:	40010400 	.word	0x40010400
 80008b4:	e000e100 	.word	0xe000e100
 80008b8:	40020400 	.word	0x40020400
 80008bc:	40000800 	.word	0x40000800
 80008c0:	40020000 	.word	0x40020000
 80008c4:	40012400 	.word	0x40012400
 80008c8:	40000400 	.word	0x40000400
       	TIM3->CCMR1 &= ~(1<<(6*2));	//0
 80008cc:	4b67      	ldr	r3, [pc, #412]	; (8000a6c <main+0x450>)
 80008ce:	699b      	ldr	r3, [r3, #24]
 80008d0:	4a66      	ldr	r2, [pc, #408]	; (8000a6c <main+0x450>)
 80008d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80008d6:	6193      	str	r3, [r2, #24]
       	//PC9 ch4
       	TIM3->CCMR2 |= (1<<(5*2+1));	//PE
 80008d8:	4b64      	ldr	r3, [pc, #400]	; (8000a6c <main+0x450>)
 80008da:	69db      	ldr	r3, [r3, #28]
 80008dc:	4a63      	ldr	r2, [pc, #396]	; (8000a6c <main+0x450>)
 80008de:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80008e2:	61d3      	str	r3, [r2, #28]
       	//Los 3 siguientes para PWM (ver manual)
       	TIM3->CCMR2 |= (1<<(7*2));	//1
 80008e4:	4b61      	ldr	r3, [pc, #388]	; (8000a6c <main+0x450>)
 80008e6:	69db      	ldr	r3, [r3, #28]
 80008e8:	4a60      	ldr	r2, [pc, #384]	; (8000a6c <main+0x450>)
 80008ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80008ee:	61d3      	str	r3, [r2, #28]
       	TIM3->CCMR2 |= (1<<(6*2+1));	//1
 80008f0:	4b5e      	ldr	r3, [pc, #376]	; (8000a6c <main+0x450>)
 80008f2:	69db      	ldr	r3, [r3, #28]
 80008f4:	4a5d      	ldr	r2, [pc, #372]	; (8000a6c <main+0x450>)
 80008f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80008fa:	61d3      	str	r3, [r2, #28]
       	TIM3->CCMR2 &= ~(1<<(6*2));	//0
 80008fc:	4b5b      	ldr	r3, [pc, #364]	; (8000a6c <main+0x450>)
 80008fe:	69db      	ldr	r3, [r3, #28]
 8000900:	4a5a      	ldr	r2, [pc, #360]	; (8000a6c <main+0x450>)
 8000902:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000906:	61d3      	str	r3, [r2, #28]



       	TIM3->CCER |= (1<<(2*2));		//CC1E
 8000908:	4b58      	ldr	r3, [pc, #352]	; (8000a6c <main+0x450>)
 800090a:	6a1b      	ldr	r3, [r3, #32]
 800090c:	4a57      	ldr	r2, [pc, #348]	; (8000a6c <main+0x450>)
 800090e:	f043 0310 	orr.w	r3, r3, #16
 8000912:	6213      	str	r3, [r2, #32]
       	TIM3->CCER |= (1<<(6*2));		//CC1E
 8000914:	4b55      	ldr	r3, [pc, #340]	; (8000a6c <main+0x450>)
 8000916:	6a1b      	ldr	r3, [r3, #32]
 8000918:	4a54      	ldr	r2, [pc, #336]	; (8000a6c <main+0x450>)
 800091a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800091e:	6213      	str	r3, [r2, #32]
       	TIM3->CR1 |= (1<<(3*2+1));		//HW (bit ARPE)
 8000920:	4b52      	ldr	r3, [pc, #328]	; (8000a6c <main+0x450>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	4a51      	ldr	r2, [pc, #324]	; (8000a6c <main+0x450>)
 8000926:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800092a:	6013      	str	r3, [r2, #0]
       	TIM3->EGR |= (1<<0);		//UG
 800092c:	4b4f      	ldr	r3, [pc, #316]	; (8000a6c <main+0x450>)
 800092e:	695b      	ldr	r3, [r3, #20]
 8000930:	4a4e      	ldr	r2, [pc, #312]	; (8000a6c <main+0x450>)
 8000932:	f043 0301 	orr.w	r3, r3, #1
 8000936:	6153      	str	r3, [r2, #20]
       	TIM3->CR1 |= (1<<0);		//ON
 8000938:	4b4c      	ldr	r3, [pc, #304]	; (8000a6c <main+0x450>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	4a4b      	ldr	r2, [pc, #300]	; (8000a6c <main+0x450>)
 800093e:	f043 0301 	orr.w	r3, r3, #1
 8000942:	6013      	str	r3, [r2, #0]
       	TIM3->SR = 0;				//FLAG
 8000944:	4b49      	ldr	r3, [pc, #292]	; (8000a6c <main+0x450>)
 8000946:	2200      	movs	r2, #0
 8000948:	611a      	str	r2, [r3, #16]


       	TIM3->CCR2 = 20;
 800094a:	4b48      	ldr	r3, [pc, #288]	; (8000a6c <main+0x450>)
 800094c:	2214      	movs	r2, #20
 800094e:	639a      	str	r2, [r3, #56]	; 0x38
      	TIM3->CCR4 = 20;
 8000950:	4b46      	ldr	r3, [pc, #280]	; (8000a6c <main+0x450>)
 8000952:	2214      	movs	r2, #20
 8000954:	641a      	str	r2, [r3, #64]	; 0x40


        NVIC->ISER[0] |= (1 << 29);
 8000956:	4b46      	ldr	r3, [pc, #280]	; (8000a70 <main+0x454>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	4a45      	ldr	r2, [pc, #276]	; (8000a70 <main+0x454>)
 800095c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000960:	6013      	str	r3, [r2, #0]

     HAL_UART_Transmit(&huart1, &data[0], 1, 10000);
 8000962:	f242 7310 	movw	r3, #10000	; 0x2710
 8000966:	2201      	movs	r2, #1
 8000968:	4942      	ldr	r1, [pc, #264]	; (8000a74 <main+0x458>)
 800096a:	4843      	ldr	r0, [pc, #268]	; (8000a78 <main+0x45c>)
 800096c:	f002 fc44 	bl	80031f8 <HAL_UART_Transmit>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if (HAL_UART_Receive(&huart1, data, 1, 10000) == HAL_OK) {
 8000970:	f242 7310 	movw	r3, #10000	; 0x2710
 8000974:	2201      	movs	r2, #1
 8000976:	493f      	ldr	r1, [pc, #252]	; (8000a74 <main+0x458>)
 8000978:	483f      	ldr	r0, [pc, #252]	; (8000a78 <main+0x45c>)
 800097a:	f002 fcc0 	bl	80032fe <HAL_UART_Receive>
 800097e:	4603      	mov	r3, r0
 8000980:	2b00      	cmp	r3, #0
 8000982:	d14b      	bne.n	8000a1c <main+0x400>
		  moveForward();
 8000984:	f7ff fd86 	bl	8000494 <moveForward>
		  //ajustarVelocidad(valor);
	  		  switch (data[0]) {
 8000988:	4b3a      	ldr	r3, [pc, #232]	; (8000a74 <main+0x458>)
 800098a:	781b      	ldrb	r3, [r3, #0]
 800098c:	3b41      	subs	r3, #65	; 0x41
 800098e:	2b12      	cmp	r3, #18
 8000990:	d840      	bhi.n	8000a14 <main+0x3f8>
 8000992:	a201      	add	r2, pc, #4	; (adr r2, 8000998 <main+0x37c>)
 8000994:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000998:	08000a0d 	.word	0x08000a0d
 800099c:	08000a05 	.word	0x08000a05
 80009a0:	08000a15 	.word	0x08000a15
 80009a4:	08000a15 	.word	0x08000a15
 80009a8:	08000a15 	.word	0x08000a15
 80009ac:	080009e5 	.word	0x080009e5
 80009b0:	08000a15 	.word	0x08000a15
 80009b4:	08000a15 	.word	0x08000a15
 80009b8:	08000a15 	.word	0x08000a15
 80009bc:	08000a15 	.word	0x08000a15
 80009c0:	08000a15 	.word	0x08000a15
 80009c4:	080009fd 	.word	0x080009fd
 80009c8:	08000a15 	.word	0x08000a15
 80009cc:	08000a15 	.word	0x08000a15
 80009d0:	08000a15 	.word	0x08000a15
 80009d4:	08000a15 	.word	0x08000a15
 80009d8:	08000a15 	.word	0x08000a15
 80009dc:	080009f5 	.word	0x080009f5
 80009e0:	080009ed 	.word	0x080009ed
	  			              case 'F':
	  			                  carState = 1;
 80009e4:	4b25      	ldr	r3, [pc, #148]	; (8000a7c <main+0x460>)
 80009e6:	2201      	movs	r2, #1
 80009e8:	701a      	strb	r2, [r3, #0]
	  			                  break;
 80009ea:	e017      	b.n	8000a1c <main+0x400>
	  			              case 'S':
	  			            	carState = 0;
 80009ec:	4b23      	ldr	r3, [pc, #140]	; (8000a7c <main+0x460>)
 80009ee:	2200      	movs	r2, #0
 80009f0:	701a      	strb	r2, [r3, #0]
	  			                  break;
 80009f2:	e013      	b.n	8000a1c <main+0x400>
	  			              case 'R':
	  			            	carState = 2;
 80009f4:	4b21      	ldr	r3, [pc, #132]	; (8000a7c <main+0x460>)
 80009f6:	2202      	movs	r2, #2
 80009f8:	701a      	strb	r2, [r3, #0]
	  			            	 break;
 80009fa:	e00f      	b.n	8000a1c <main+0x400>
	  			              case 'L':
	  			            	carState = 3;
 80009fc:	4b1f      	ldr	r3, [pc, #124]	; (8000a7c <main+0x460>)
 80009fe:	2203      	movs	r2, #3
 8000a00:	701a      	strb	r2, [r3, #0]
	  			            	  break;
 8000a02:	e00b      	b.n	8000a1c <main+0x400>
	  			              case 'B':
	  			            	carState = 4;
 8000a04:	4b1d      	ldr	r3, [pc, #116]	; (8000a7c <main+0x460>)
 8000a06:	2204      	movs	r2, #4
 8000a08:	701a      	strb	r2, [r3, #0]
	  			            	  break;
 8000a0a:	e007      	b.n	8000a1c <main+0x400>
	  			              case 'A':
	  			            	carState = 5;
 8000a0c:	4b1b      	ldr	r3, [pc, #108]	; (8000a7c <main+0x460>)
 8000a0e:	2205      	movs	r2, #5
 8000a10:	701a      	strb	r2, [r3, #0]
	  			            	  break;
 8000a12:	e003      	b.n	8000a1c <main+0x400>
	  			              default:
	  			            	carState = 0;
 8000a14:	4b19      	ldr	r3, [pc, #100]	; (8000a7c <main+0x460>)
 8000a16:	2200      	movs	r2, #0
 8000a18:	701a      	strb	r2, [r3, #0]
	  			                  break;
 8000a1a:	bf00      	nop
	  			    }


	  	   }
    /* USER CODE END WHILE */
      switch (carState) {
 8000a1c:	4b17      	ldr	r3, [pc, #92]	; (8000a7c <main+0x460>)
 8000a1e:	781b      	ldrb	r3, [r3, #0]
 8000a20:	2b05      	cmp	r3, #5
 8000a22:	d81e      	bhi.n	8000a62 <main+0x446>
 8000a24:	a201      	add	r2, pc, #4	; (adr r2, 8000a2c <main+0x410>)
 8000a26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a2a:	bf00      	nop
 8000a2c:	08000a45 	.word	0x08000a45
 8000a30:	08000a4b 	.word	0x08000a4b
 8000a34:	08000a51 	.word	0x08000a51
 8000a38:	08000a57 	.word	0x08000a57
 8000a3c:	08000a5d 	.word	0x08000a5d
 8000a40:	08000a69 	.word	0x08000a69
          case 0:
              stopWheels();
 8000a44:	f7ff fd1a 	bl	800047c <stopWheels>
              break;
 8000a48:	e00f      	b.n	8000a6a <main+0x44e>
          case 1:
              moveForward();
 8000a4a:	f7ff fd23 	bl	8000494 <moveForward>
              break;
 8000a4e:	e00c      	b.n	8000a6a <main+0x44e>
          case 2:
              rightWheel();
 8000a50:	f7ff fd34 	bl	80004bc <rightWheel>
              break;
 8000a54:	e009      	b.n	8000a6a <main+0x44e>
          case 3:
              leftWheel();
 8000a56:	f7ff fd45 	bl	80004e4 <leftWheel>
              break;
 8000a5a:	e006      	b.n	8000a6a <main+0x44e>
          case 4:
              moveBackward();
 8000a5c:	f7ff fd56 	bl	800050c <moveBackward>
              break;
 8000a60:	e003      	b.n	8000a6a <main+0x44e>
          case 5:
              //autonomousMode();
              break;
          default:
              stopWheels();
 8000a62:	f7ff fd0b 	bl	800047c <stopWheels>
              break;
 8000a66:	e000      	b.n	8000a6a <main+0x44e>
              break;
 8000a68:	bf00      	nop
	  if (HAL_UART_Receive(&huart1, data, 1, 10000) == HAL_OK) {
 8000a6a:	e781      	b.n	8000970 <main+0x354>
 8000a6c:	40000400 	.word	0x40000400
 8000a70:	e000e100 	.word	0xe000e100
 8000a74:	20000188 	.word	0x20000188
 8000a78:	20000138 	.word	0x20000138
 8000a7c:	20000183 	.word	0x20000183

08000a80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a80:	b580      	push	{r7, lr}
 8000a82:	b096      	sub	sp, #88	; 0x58
 8000a84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a8a:	2234      	movs	r2, #52	; 0x34
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	4618      	mov	r0, r3
 8000a90:	f002 fe1a 	bl	80036c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a94:	f107 0310 	add.w	r3, r7, #16
 8000a98:	2200      	movs	r2, #0
 8000a9a:	601a      	str	r2, [r3, #0]
 8000a9c:	605a      	str	r2, [r3, #4]
 8000a9e:	609a      	str	r2, [r3, #8]
 8000aa0:	60da      	str	r2, [r3, #12]
 8000aa2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000aa4:	1d3b      	adds	r3, r7, #4
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	601a      	str	r2, [r3, #0]
 8000aaa:	605a      	str	r2, [r3, #4]
 8000aac:	609a      	str	r2, [r3, #8]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000aae:	4b27      	ldr	r3, [pc, #156]	; (8000b4c <SystemClock_Config+0xcc>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 8000ab6:	4a25      	ldr	r2, [pc, #148]	; (8000b4c <SystemClock_Config+0xcc>)
 8000ab8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000abc:	6013      	str	r3, [r2, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSE;
 8000abe:	2306      	movs	r3, #6
 8000ac0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8000ac2:	2301      	movs	r3, #1
 8000ac4:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ac6:	2301      	movs	r3, #1
 8000ac8:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000aca:	2310      	movs	r3, #16
 8000acc:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000ace:	2302      	movs	r3, #2
 8000ad0:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 8000ad6:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8000ada:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 8000adc:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8000ae0:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ae2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ae6:	4618      	mov	r0, r3
 8000ae8:	f001 f9da 	bl	8001ea0 <HAL_RCC_OscConfig>
 8000aec:	4603      	mov	r3, r0
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d001      	beq.n	8000af6 <SystemClock_Config+0x76>
  {
    Error_Handler();
 8000af2:	f000 f9cb 	bl	8000e8c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000af6:	230f      	movs	r3, #15
 8000af8:	613b      	str	r3, [r7, #16]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000afa:	2303      	movs	r3, #3
 8000afc:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000afe:	2300      	movs	r3, #0
 8000b00:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000b02:	2300      	movs	r3, #0
 8000b04:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000b06:	2300      	movs	r3, #0
 8000b08:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8000b0a:	f107 0310 	add.w	r3, r7, #16
 8000b0e:	2101      	movs	r1, #1
 8000b10:	4618      	mov	r0, r3
 8000b12:	f001 fcf5 	bl	8002500 <HAL_RCC_ClockConfig>
 8000b16:	4603      	mov	r3, r0
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d001      	beq.n	8000b20 <SystemClock_Config+0xa0>
  {
    Error_Handler();
 8000b1c:	f000 f9b6 	bl	8000e8c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_LCD;
 8000b20:	2303      	movs	r3, #3
 8000b22:	607b      	str	r3, [r7, #4]
  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 8000b24:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b28:	60bb      	str	r3, [r7, #8]
  PeriphClkInit.LCDClockSelection = RCC_RTCCLKSOURCE_LSE;
 8000b2a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b2e:	60fb      	str	r3, [r7, #12]

  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000b30:	1d3b      	adds	r3, r7, #4
 8000b32:	4618      	mov	r0, r3
 8000b34:	f001 ffaa 	bl	8002a8c <HAL_RCCEx_PeriphCLKConfig>
 8000b38:	4603      	mov	r3, r0
 8000b3a:	2b00      	cmp	r3, #0
 8000b3c:	d001      	beq.n	8000b42 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000b3e:	f000 f9a5 	bl	8000e8c <Error_Handler>
  }
}
 8000b42:	bf00      	nop
 8000b44:	3758      	adds	r7, #88	; 0x58
 8000b46:	46bd      	mov	sp, r7
 8000b48:	bd80      	pop	{r7, pc}
 8000b4a:	bf00      	nop
 8000b4c:	40007000 	.word	0x40007000

08000b50 <MX_ADC_Init>:
  * @brief ADC Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC_Init(void)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b084      	sub	sp, #16
 8000b54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC_Init 0 */

  /* USER CODE END ADC_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000b56:	1d3b      	adds	r3, r7, #4
 8000b58:	2200      	movs	r2, #0
 8000b5a:	601a      	str	r2, [r3, #0]
 8000b5c:	605a      	str	r2, [r3, #4]
 8000b5e:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc.Instance = ADC1;
 8000b60:	4b26      	ldr	r3, [pc, #152]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b62:	4a27      	ldr	r2, [pc, #156]	; (8000c00 <MX_ADC_Init+0xb0>)
 8000b64:	601a      	str	r2, [r3, #0]
  hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8000b66:	4b25      	ldr	r3, [pc, #148]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b68:	2200      	movs	r2, #0
 8000b6a:	605a      	str	r2, [r3, #4]
  hadc.Init.Resolution = ADC_RESOLUTION_12B;
 8000b6c:	4b23      	ldr	r3, [pc, #140]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b6e:	2200      	movs	r2, #0
 8000b70:	609a      	str	r2, [r3, #8]
  hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000b72:	4b22      	ldr	r3, [pc, #136]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b74:	2200      	movs	r2, #0
 8000b76:	60da      	str	r2, [r3, #12]
  hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000b78:	4b20      	ldr	r3, [pc, #128]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	611a      	str	r2, [r3, #16]
  hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8000b7e:	4b1f      	ldr	r3, [pc, #124]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b80:	2200      	movs	r2, #0
 8000b82:	615a      	str	r2, [r3, #20]
  hadc.Init.LowPowerAutoWait = ADC_AUTOWAIT_DISABLE;
 8000b84:	4b1d      	ldr	r3, [pc, #116]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b86:	2200      	movs	r2, #0
 8000b88:	619a      	str	r2, [r3, #24]
  hadc.Init.LowPowerAutoPowerOff = ADC_AUTOPOWEROFF_DISABLE;
 8000b8a:	4b1c      	ldr	r3, [pc, #112]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	61da      	str	r2, [r3, #28]
  hadc.Init.ChannelsBank = ADC_CHANNELS_BANK_A;
 8000b90:	4b1a      	ldr	r3, [pc, #104]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b92:	2200      	movs	r2, #0
 8000b94:	621a      	str	r2, [r3, #32]
  hadc.Init.ContinuousConvMode = DISABLE;
 8000b96:	4b19      	ldr	r3, [pc, #100]	; (8000bfc <MX_ADC_Init+0xac>)
 8000b98:	2200      	movs	r2, #0
 8000b9a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
  hadc.Init.NbrOfConversion = 1;
 8000b9e:	4b17      	ldr	r3, [pc, #92]	; (8000bfc <MX_ADC_Init+0xac>)
 8000ba0:	2201      	movs	r2, #1
 8000ba2:	629a      	str	r2, [r3, #40]	; 0x28
  hadc.Init.DiscontinuousConvMode = DISABLE;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <MX_ADC_Init+0xac>)
 8000ba6:	2200      	movs	r2, #0
 8000ba8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_CC3;
 8000bac:	4b13      	ldr	r3, [pc, #76]	; (8000bfc <MX_ADC_Init+0xac>)
 8000bae:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8000bb2:	635a      	str	r2, [r3, #52]	; 0x34
  hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000bb4:	4b11      	ldr	r3, [pc, #68]	; (8000bfc <MX_ADC_Init+0xac>)
 8000bb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000bba:	639a      	str	r2, [r3, #56]	; 0x38
  hadc.Init.DMAContinuousRequests = DISABLE;
 8000bbc:	4b0f      	ldr	r3, [pc, #60]	; (8000bfc <MX_ADC_Init+0xac>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  if (HAL_ADC_Init(&hadc) != HAL_OK)
 8000bc4:	480d      	ldr	r0, [pc, #52]	; (8000bfc <MX_ADC_Init+0xac>)
 8000bc6:	f000 fb91 	bl	80012ec <HAL_ADC_Init>
 8000bca:	4603      	mov	r3, r0
 8000bcc:	2b00      	cmp	r3, #0
 8000bce:	d001      	beq.n	8000bd4 <MX_ADC_Init+0x84>
  {
    Error_Handler();
 8000bd0:	f000 f95c 	bl	8000e8c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_4;
 8000bd4:	2304      	movs	r3, #4
 8000bd6:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000bd8:	2301      	movs	r3, #1
 8000bda:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_4CYCLES;
 8000bdc:	2300      	movs	r3, #0
 8000bde:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8000be0:	1d3b      	adds	r3, r7, #4
 8000be2:	4619      	mov	r1, r3
 8000be4:	4805      	ldr	r0, [pc, #20]	; (8000bfc <MX_ADC_Init+0xac>)
 8000be6:	f000 fcc7 	bl	8001578 <HAL_ADC_ConfigChannel>
 8000bea:	4603      	mov	r3, r0
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d001      	beq.n	8000bf4 <MX_ADC_Init+0xa4>
  {
    Error_Handler();
 8000bf0:	f000 f94c 	bl	8000e8c <Error_Handler>
  }
  /* USER CODE BEGIN ADC_Init 2 */

  /* USER CODE END ADC_Init 2 */

}
 8000bf4:	bf00      	nop
 8000bf6:	3710      	adds	r7, #16
 8000bf8:	46bd      	mov	sp, r7
 8000bfa:	bd80      	pop	{r7, pc}
 8000bfc:	20000028 	.word	0x20000028
 8000c00:	40012400 	.word	0x40012400

08000c04 <MX_LCD_Init>:
  * @brief LCD Initialization Function
  * @param None
  * @retval None
  */
static void MX_LCD_Init(void)
{
 8000c04:	b580      	push	{r7, lr}
 8000c06:	af00      	add	r7, sp, #0
  /* USER CODE END LCD_Init 0 */

  /* USER CODE BEGIN LCD_Init 1 */

  /* USER CODE END LCD_Init 1 */
  hlcd.Instance = LCD;
 8000c08:	4b16      	ldr	r3, [pc, #88]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c0a:	4a17      	ldr	r2, [pc, #92]	; (8000c68 <MX_LCD_Init+0x64>)
 8000c0c:	601a      	str	r2, [r3, #0]
  hlcd.Init.Prescaler = LCD_PRESCALER_1;
 8000c0e:	4b15      	ldr	r3, [pc, #84]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c10:	2200      	movs	r2, #0
 8000c12:	605a      	str	r2, [r3, #4]
  hlcd.Init.Divider = LCD_DIVIDER_16;
 8000c14:	4b13      	ldr	r3, [pc, #76]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c16:	2200      	movs	r2, #0
 8000c18:	609a      	str	r2, [r3, #8]
  hlcd.Init.Duty = LCD_DUTY_1_4;
 8000c1a:	4b12      	ldr	r3, [pc, #72]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c1c:	220c      	movs	r2, #12
 8000c1e:	60da      	str	r2, [r3, #12]
  hlcd.Init.Bias = LCD_BIAS_1_4;
 8000c20:	4b10      	ldr	r3, [pc, #64]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c22:	2200      	movs	r2, #0
 8000c24:	611a      	str	r2, [r3, #16]
  hlcd.Init.VoltageSource = LCD_VOLTAGESOURCE_INTERNAL;
 8000c26:	4b0f      	ldr	r3, [pc, #60]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c28:	2200      	movs	r2, #0
 8000c2a:	615a      	str	r2, [r3, #20]
  hlcd.Init.Contrast = LCD_CONTRASTLEVEL_0;
 8000c2c:	4b0d      	ldr	r3, [pc, #52]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c2e:	2200      	movs	r2, #0
 8000c30:	619a      	str	r2, [r3, #24]
  hlcd.Init.DeadTime = LCD_DEADTIME_0;
 8000c32:	4b0c      	ldr	r3, [pc, #48]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	61da      	str	r2, [r3, #28]
  hlcd.Init.PulseOnDuration = LCD_PULSEONDURATION_0;
 8000c38:	4b0a      	ldr	r3, [pc, #40]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	621a      	str	r2, [r3, #32]
  hlcd.Init.MuxSegment = LCD_MUXSEGMENT_DISABLE;
 8000c3e:	4b09      	ldr	r3, [pc, #36]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c40:	2200      	movs	r2, #0
 8000c42:	631a      	str	r2, [r3, #48]	; 0x30
  hlcd.Init.BlinkMode = LCD_BLINKMODE_OFF;
 8000c44:	4b07      	ldr	r3, [pc, #28]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c46:	2200      	movs	r2, #0
 8000c48:	629a      	str	r2, [r3, #40]	; 0x28
  hlcd.Init.BlinkFrequency = LCD_BLINKFREQUENCY_DIV8;
 8000c4a:	4b06      	ldr	r3, [pc, #24]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_LCD_Init(&hlcd) != HAL_OK)
 8000c50:	4804      	ldr	r0, [pc, #16]	; (8000c64 <MX_LCD_Init+0x60>)
 8000c52:	f001 f845 	bl	8001ce0 <HAL_LCD_Init>
 8000c56:	4603      	mov	r3, r0
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	d001      	beq.n	8000c60 <MX_LCD_Init+0x5c>
  {
    Error_Handler();
 8000c5c:	f000 f916 	bl	8000e8c <Error_Handler>
  }
  /* USER CODE BEGIN LCD_Init 2 */

  /* USER CODE END LCD_Init 2 */

}
 8000c60:	bf00      	nop
 8000c62:	bd80      	pop	{r7, pc}
 8000c64:	2000007c 	.word	0x2000007c
 8000c68:	40002400 	.word	0x40002400

08000c6c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b086      	sub	sp, #24
 8000c70:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c72:	f107 0308 	add.w	r3, r7, #8
 8000c76:	2200      	movs	r2, #0
 8000c78:	601a      	str	r2, [r3, #0]
 8000c7a:	605a      	str	r2, [r3, #4]
 8000c7c:	609a      	str	r2, [r3, #8]
 8000c7e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c80:	463b      	mov	r3, r7
 8000c82:	2200      	movs	r2, #0
 8000c84:	601a      	str	r2, [r3, #0]
 8000c86:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000c88:	4b1d      	ldr	r3, [pc, #116]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000c8a:	4a1e      	ldr	r2, [pc, #120]	; (8000d04 <MX_TIM3_Init+0x98>)
 8000c8c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8000c8e:	4b1c      	ldr	r3, [pc, #112]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000c90:	2200      	movs	r2, #0
 8000c92:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c94:	4b1a      	ldr	r3, [pc, #104]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000c96:	2200      	movs	r2, #0
 8000c98:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8000c9a:	4b19      	ldr	r3, [pc, #100]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000c9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000ca0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000ca2:	4b17      	ldr	r3, [pc, #92]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000ca4:	2200      	movs	r2, #0
 8000ca6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000ca8:	4b15      	ldr	r3, [pc, #84]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000caa:	2200      	movs	r2, #0
 8000cac:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000cae:	4814      	ldr	r0, [pc, #80]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000cb0:	f001 fff6 	bl	8002ca0 <HAL_TIM_Base_Init>
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	d001      	beq.n	8000cbe <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 8000cba:	f000 f8e7 	bl	8000e8c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000cbe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000cc2:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000cc4:	f107 0308 	add.w	r3, r7, #8
 8000cc8:	4619      	mov	r1, r3
 8000cca:	480d      	ldr	r0, [pc, #52]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000ccc:	f002 f827 	bl	8002d1e <HAL_TIM_ConfigClockSource>
 8000cd0:	4603      	mov	r3, r0
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	d001      	beq.n	8000cda <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 8000cd6:	f000 f8d9 	bl	8000e8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000cda:	2300      	movs	r3, #0
 8000cdc:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000cde:	2300      	movs	r3, #0
 8000ce0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000ce2:	463b      	mov	r3, r7
 8000ce4:	4619      	mov	r1, r3
 8000ce6:	4806      	ldr	r0, [pc, #24]	; (8000d00 <MX_TIM3_Init+0x94>)
 8000ce8:	f002 f9d8 	bl	800309c <HAL_TIMEx_MasterConfigSynchronization>
 8000cec:	4603      	mov	r3, r0
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d001      	beq.n	8000cf6 <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 8000cf2:	f000 f8cb 	bl	8000e8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000cf6:	bf00      	nop
 8000cf8:	3718      	adds	r7, #24
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	bd80      	pop	{r7, pc}
 8000cfe:	bf00      	nop
 8000d00:	200000b8 	.word	0x200000b8
 8000d04:	40000400 	.word	0x40000400

08000d08 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000d08:	b580      	push	{r7, lr}
 8000d0a:	b086      	sub	sp, #24
 8000d0c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000d0e:	f107 0308 	add.w	r3, r7, #8
 8000d12:	2200      	movs	r2, #0
 8000d14:	601a      	str	r2, [r3, #0]
 8000d16:	605a      	str	r2, [r3, #4]
 8000d18:	609a      	str	r2, [r3, #8]
 8000d1a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d1c:	463b      	mov	r3, r7
 8000d1e:	2200      	movs	r2, #0
 8000d20:	601a      	str	r2, [r3, #0]
 8000d22:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d24:	4b1d      	ldr	r3, [pc, #116]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d26:	4a1e      	ldr	r2, [pc, #120]	; (8000da0 <MX_TIM4_Init+0x98>)
 8000d28:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8000d2a:	4b1c      	ldr	r3, [pc, #112]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d30:	4b1a      	ldr	r3, [pc, #104]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d32:	2200      	movs	r2, #0
 8000d34:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8000d36:	4b19      	ldr	r3, [pc, #100]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d38:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d3c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d3e:	4b17      	ldr	r3, [pc, #92]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d40:	2200      	movs	r2, #0
 8000d42:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d44:	4b15      	ldr	r3, [pc, #84]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d46:	2200      	movs	r2, #0
 8000d48:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8000d4a:	4814      	ldr	r0, [pc, #80]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d4c:	f001 ffa8 	bl	8002ca0 <HAL_TIM_Base_Init>
 8000d50:	4603      	mov	r3, r0
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d001      	beq.n	8000d5a <MX_TIM4_Init+0x52>
  {
    Error_Handler();
 8000d56:	f000 f899 	bl	8000e8c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000d5a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000d5e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8000d60:	f107 0308 	add.w	r3, r7, #8
 8000d64:	4619      	mov	r1, r3
 8000d66:	480d      	ldr	r0, [pc, #52]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d68:	f001 ffd9 	bl	8002d1e <HAL_TIM_ConfigClockSource>
 8000d6c:	4603      	mov	r3, r0
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d001      	beq.n	8000d76 <MX_TIM4_Init+0x6e>
  {
    Error_Handler();
 8000d72:	f000 f88b 	bl	8000e8c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d76:	2300      	movs	r3, #0
 8000d78:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000d7e:	463b      	mov	r3, r7
 8000d80:	4619      	mov	r1, r3
 8000d82:	4806      	ldr	r0, [pc, #24]	; (8000d9c <MX_TIM4_Init+0x94>)
 8000d84:	f002 f98a 	bl	800309c <HAL_TIMEx_MasterConfigSynchronization>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d001      	beq.n	8000d92 <MX_TIM4_Init+0x8a>
  {
    Error_Handler();
 8000d8e:	f000 f87d 	bl	8000e8c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8000d92:	bf00      	nop
 8000d94:	3718      	adds	r7, #24
 8000d96:	46bd      	mov	sp, r7
 8000d98:	bd80      	pop	{r7, pc}
 8000d9a:	bf00      	nop
 8000d9c:	200000f8 	.word	0x200000f8
 8000da0:	40000800 	.word	0x40000800

08000da4 <MX_TS_Init>:
  * @brief TS Initialization Function
  * @param None
  * @retval None
  */
static void MX_TS_Init(void)
{
 8000da4:	b480      	push	{r7}
 8000da6:	af00      	add	r7, sp, #0
  /* USER CODE END TS_Init 1 */
  /* USER CODE BEGIN TS_Init 2 */

  /* USER CODE END TS_Init 2 */

}
 8000da8:	bf00      	nop
 8000daa:	46bd      	mov	sp, r7
 8000dac:	bc80      	pop	{r7}
 8000dae:	4770      	bx	lr

08000db0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000db0:	b580      	push	{r7, lr}
 8000db2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000db4:	4b11      	ldr	r3, [pc, #68]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000db6:	4a12      	ldr	r2, [pc, #72]	; (8000e00 <MX_USART1_UART_Init+0x50>)
 8000db8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8000dba:	4b10      	ldr	r3, [pc, #64]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000dbc:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000dc0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000dc2:	4b0e      	ldr	r3, [pc, #56]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000dc8:	4b0c      	ldr	r3, [pc, #48]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000dca:	2200      	movs	r2, #0
 8000dcc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000dce:	4b0b      	ldr	r3, [pc, #44]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000dd4:	4b09      	ldr	r3, [pc, #36]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000dd6:	220c      	movs	r2, #12
 8000dd8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000dda:	4b08      	ldr	r3, [pc, #32]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000ddc:	2200      	movs	r2, #0
 8000dde:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000de0:	4b06      	ldr	r3, [pc, #24]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000de2:	2200      	movs	r2, #0
 8000de4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000de6:	4805      	ldr	r0, [pc, #20]	; (8000dfc <MX_USART1_UART_Init+0x4c>)
 8000de8:	f002 f9b6 	bl	8003158 <HAL_UART_Init>
 8000dec:	4603      	mov	r3, r0
 8000dee:	2b00      	cmp	r3, #0
 8000df0:	d001      	beq.n	8000df6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000df2:	f000 f84b 	bl	8000e8c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000df6:	bf00      	nop
 8000df8:	bd80      	pop	{r7, pc}
 8000dfa:	bf00      	nop
 8000dfc:	20000138 	.word	0x20000138
 8000e00:	40013800 	.word	0x40013800

08000e04 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000e04:	b580      	push	{r7, lr}
 8000e06:	b088      	sub	sp, #32
 8000e08:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e0a:	f107 030c 	add.w	r3, r7, #12
 8000e0e:	2200      	movs	r2, #0
 8000e10:	601a      	str	r2, [r3, #0]
 8000e12:	605a      	str	r2, [r3, #4]
 8000e14:	609a      	str	r2, [r3, #8]
 8000e16:	60da      	str	r2, [r3, #12]
 8000e18:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e1a:	4b1a      	ldr	r3, [pc, #104]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e1c:	69db      	ldr	r3, [r3, #28]
 8000e1e:	4a19      	ldr	r2, [pc, #100]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e20:	f043 0304 	orr.w	r3, r3, #4
 8000e24:	61d3      	str	r3, [r2, #28]
 8000e26:	4b17      	ldr	r3, [pc, #92]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e28:	69db      	ldr	r3, [r3, #28]
 8000e2a:	f003 0304 	and.w	r3, r3, #4
 8000e2e:	60bb      	str	r3, [r7, #8]
 8000e30:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e32:	4b14      	ldr	r3, [pc, #80]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e34:	69db      	ldr	r3, [r3, #28]
 8000e36:	4a13      	ldr	r2, [pc, #76]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e38:	f043 0301 	orr.w	r3, r3, #1
 8000e3c:	61d3      	str	r3, [r2, #28]
 8000e3e:	4b11      	ldr	r3, [pc, #68]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e40:	69db      	ldr	r3, [r3, #28]
 8000e42:	f003 0301 	and.w	r3, r3, #1
 8000e46:	607b      	str	r3, [r7, #4]
 8000e48:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e4a:	4b0e      	ldr	r3, [pc, #56]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e4c:	69db      	ldr	r3, [r3, #28]
 8000e4e:	4a0d      	ldr	r2, [pc, #52]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e50:	f043 0302 	orr.w	r3, r3, #2
 8000e54:	61d3      	str	r3, [r2, #28]
 8000e56:	4b0b      	ldr	r3, [pc, #44]	; (8000e84 <MX_GPIO_Init+0x80>)
 8000e58:	69db      	ldr	r3, [r3, #28]
 8000e5a:	f003 0302 	and.w	r3, r3, #2
 8000e5e:	603b      	str	r3, [r7, #0]
 8000e60:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000e62:	2301      	movs	r3, #1
 8000e64:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8000e66:	f44f 1390 	mov.w	r3, #1179648	; 0x120000
 8000e6a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000e70:	f107 030c 	add.w	r3, r7, #12
 8000e74:	4619      	mov	r1, r3
 8000e76:	4804      	ldr	r0, [pc, #16]	; (8000e88 <MX_GPIO_Init+0x84>)
 8000e78:	f000 fdb2 	bl	80019e0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000e7c:	bf00      	nop
 8000e7e:	3720      	adds	r7, #32
 8000e80:	46bd      	mov	sp, r7
 8000e82:	bd80      	pop	{r7, pc}
 8000e84:	40023800 	.word	0x40023800
 8000e88:	40020000 	.word	0x40020000

08000e8c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e8c:	b480      	push	{r7}
 8000e8e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e90:	b672      	cpsid	i
}
 8000e92:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e94:	e7fe      	b.n	8000e94 <Error_Handler+0x8>
	...

08000e98 <HAL_MspInit>:
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	b084      	sub	sp, #16
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	4b15      	ldr	r3, [pc, #84]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ea0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ea2:	4a14      	ldr	r2, [pc, #80]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ea8:	6253      	str	r3, [r2, #36]	; 0x24
 8000eaa:	4b12      	ldr	r3, [pc, #72]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000eac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000eae:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8000eb2:	60fb      	str	r3, [r7, #12]
 8000eb4:	68fb      	ldr	r3, [r7, #12]
 8000eb6:	4b0f      	ldr	r3, [pc, #60]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000eb8:	6a1b      	ldr	r3, [r3, #32]
 8000eba:	4a0e      	ldr	r2, [pc, #56]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ebc:	f043 0301 	orr.w	r3, r3, #1
 8000ec0:	6213      	str	r3, [r2, #32]
 8000ec2:	4b0c      	ldr	r3, [pc, #48]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ec4:	6a1b      	ldr	r3, [r3, #32]
 8000ec6:	f003 0301 	and.w	r3, r3, #1
 8000eca:	60bb      	str	r3, [r7, #8]
 8000ecc:	68bb      	ldr	r3, [r7, #8]
 8000ece:	4b09      	ldr	r3, [pc, #36]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ed0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ed2:	4a08      	ldr	r2, [pc, #32]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000ed4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ed8:	6253      	str	r3, [r2, #36]	; 0x24
 8000eda:	4b06      	ldr	r3, [pc, #24]	; (8000ef4 <HAL_MspInit+0x5c>)
 8000edc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ede:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000ee2:	607b      	str	r3, [r7, #4]
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	2007      	movs	r0, #7
 8000ee8:	f000 fd46 	bl	8001978 <HAL_NVIC_SetPriorityGrouping>
 8000eec:	bf00      	nop
 8000eee:	3710      	adds	r7, #16
 8000ef0:	46bd      	mov	sp, r7
 8000ef2:	bd80      	pop	{r7, pc}
 8000ef4:	40023800 	.word	0x40023800

08000ef8 <HAL_ADC_MspInit>:
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b08a      	sub	sp, #40	; 0x28
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
 8000f00:	f107 0314 	add.w	r3, r7, #20
 8000f04:	2200      	movs	r2, #0
 8000f06:	601a      	str	r2, [r3, #0]
 8000f08:	605a      	str	r2, [r3, #4]
 8000f0a:	609a      	str	r2, [r3, #8]
 8000f0c:	60da      	str	r2, [r3, #12]
 8000f0e:	611a      	str	r2, [r3, #16]
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	4a15      	ldr	r2, [pc, #84]	; (8000f6c <HAL_ADC_MspInit+0x74>)
 8000f16:	4293      	cmp	r3, r2
 8000f18:	d123      	bne.n	8000f62 <HAL_ADC_MspInit+0x6a>
 8000f1a:	4b15      	ldr	r3, [pc, #84]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f1c:	6a1b      	ldr	r3, [r3, #32]
 8000f1e:	4a14      	ldr	r2, [pc, #80]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f20:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000f24:	6213      	str	r3, [r2, #32]
 8000f26:	4b12      	ldr	r3, [pc, #72]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f28:	6a1b      	ldr	r3, [r3, #32]
 8000f2a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000f2e:	613b      	str	r3, [r7, #16]
 8000f30:	693b      	ldr	r3, [r7, #16]
 8000f32:	4b0f      	ldr	r3, [pc, #60]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f34:	69db      	ldr	r3, [r3, #28]
 8000f36:	4a0e      	ldr	r2, [pc, #56]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f38:	f043 0301 	orr.w	r3, r3, #1
 8000f3c:	61d3      	str	r3, [r2, #28]
 8000f3e:	4b0c      	ldr	r3, [pc, #48]	; (8000f70 <HAL_ADC_MspInit+0x78>)
 8000f40:	69db      	ldr	r3, [r3, #28]
 8000f42:	f003 0301 	and.w	r3, r3, #1
 8000f46:	60fb      	str	r3, [r7, #12]
 8000f48:	68fb      	ldr	r3, [r7, #12]
 8000f4a:	2310      	movs	r3, #16
 8000f4c:	617b      	str	r3, [r7, #20]
 8000f4e:	2303      	movs	r3, #3
 8000f50:	61bb      	str	r3, [r7, #24]
 8000f52:	2300      	movs	r3, #0
 8000f54:	61fb      	str	r3, [r7, #28]
 8000f56:	f107 0314 	add.w	r3, r7, #20
 8000f5a:	4619      	mov	r1, r3
 8000f5c:	4805      	ldr	r0, [pc, #20]	; (8000f74 <HAL_ADC_MspInit+0x7c>)
 8000f5e:	f000 fd3f 	bl	80019e0 <HAL_GPIO_Init>
 8000f62:	bf00      	nop
 8000f64:	3728      	adds	r7, #40	; 0x28
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bd80      	pop	{r7, pc}
 8000f6a:	bf00      	nop
 8000f6c:	40012400 	.word	0x40012400
 8000f70:	40023800 	.word	0x40023800
 8000f74:	40020000 	.word	0x40020000

08000f78 <HAL_LCD_MspInit>:
 8000f78:	b580      	push	{r7, lr}
 8000f7a:	b08c      	sub	sp, #48	; 0x30
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	6078      	str	r0, [r7, #4]
 8000f80:	f107 031c 	add.w	r3, r7, #28
 8000f84:	2200      	movs	r2, #0
 8000f86:	601a      	str	r2, [r3, #0]
 8000f88:	605a      	str	r2, [r3, #4]
 8000f8a:	609a      	str	r2, [r3, #8]
 8000f8c:	60da      	str	r2, [r3, #12]
 8000f8e:	611a      	str	r2, [r3, #16]
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	4a34      	ldr	r2, [pc, #208]	; (8001068 <HAL_LCD_MspInit+0xf0>)
 8000f96:	4293      	cmp	r3, r2
 8000f98:	d162      	bne.n	8001060 <HAL_LCD_MspInit+0xe8>
 8000f9a:	4b34      	ldr	r3, [pc, #208]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000f9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f9e:	4a33      	ldr	r2, [pc, #204]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fa0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000fa4:	6253      	str	r3, [r2, #36]	; 0x24
 8000fa6:	4b31      	ldr	r3, [pc, #196]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000faa:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000fae:	61bb      	str	r3, [r7, #24]
 8000fb0:	69bb      	ldr	r3, [r7, #24]
 8000fb2:	4b2e      	ldr	r3, [pc, #184]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fb4:	69db      	ldr	r3, [r3, #28]
 8000fb6:	4a2d      	ldr	r2, [pc, #180]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fb8:	f043 0304 	orr.w	r3, r3, #4
 8000fbc:	61d3      	str	r3, [r2, #28]
 8000fbe:	4b2b      	ldr	r3, [pc, #172]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fc0:	69db      	ldr	r3, [r3, #28]
 8000fc2:	f003 0304 	and.w	r3, r3, #4
 8000fc6:	617b      	str	r3, [r7, #20]
 8000fc8:	697b      	ldr	r3, [r7, #20]
 8000fca:	4b28      	ldr	r3, [pc, #160]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fcc:	69db      	ldr	r3, [r3, #28]
 8000fce:	4a27      	ldr	r2, [pc, #156]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fd0:	f043 0301 	orr.w	r3, r3, #1
 8000fd4:	61d3      	str	r3, [r2, #28]
 8000fd6:	4b25      	ldr	r3, [pc, #148]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fd8:	69db      	ldr	r3, [r3, #28]
 8000fda:	f003 0301 	and.w	r3, r3, #1
 8000fde:	613b      	str	r3, [r7, #16]
 8000fe0:	693b      	ldr	r3, [r7, #16]
 8000fe2:	4b22      	ldr	r3, [pc, #136]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fe4:	69db      	ldr	r3, [r3, #28]
 8000fe6:	4a21      	ldr	r2, [pc, #132]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000fe8:	f043 0302 	orr.w	r3, r3, #2
 8000fec:	61d3      	str	r3, [r2, #28]
 8000fee:	4b1f      	ldr	r3, [pc, #124]	; (800106c <HAL_LCD_MspInit+0xf4>)
 8000ff0:	69db      	ldr	r3, [r3, #28]
 8000ff2:	f003 0302 	and.w	r3, r3, #2
 8000ff6:	60fb      	str	r3, [r7, #12]
 8000ff8:	68fb      	ldr	r3, [r7, #12]
 8000ffa:	f640 73cf 	movw	r3, #4047	; 0xfcf
 8000ffe:	61fb      	str	r3, [r7, #28]
 8001000:	2302      	movs	r3, #2
 8001002:	623b      	str	r3, [r7, #32]
 8001004:	2300      	movs	r3, #0
 8001006:	627b      	str	r3, [r7, #36]	; 0x24
 8001008:	2300      	movs	r3, #0
 800100a:	62bb      	str	r3, [r7, #40]	; 0x28
 800100c:	230b      	movs	r3, #11
 800100e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001010:	f107 031c 	add.w	r3, r7, #28
 8001014:	4619      	mov	r1, r3
 8001016:	4816      	ldr	r0, [pc, #88]	; (8001070 <HAL_LCD_MspInit+0xf8>)
 8001018:	f000 fce2 	bl	80019e0 <HAL_GPIO_Init>
 800101c:	f248 730e 	movw	r3, #34574	; 0x870e
 8001020:	61fb      	str	r3, [r7, #28]
 8001022:	2302      	movs	r3, #2
 8001024:	623b      	str	r3, [r7, #32]
 8001026:	2300      	movs	r3, #0
 8001028:	627b      	str	r3, [r7, #36]	; 0x24
 800102a:	2300      	movs	r3, #0
 800102c:	62bb      	str	r3, [r7, #40]	; 0x28
 800102e:	230b      	movs	r3, #11
 8001030:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001032:	f107 031c 	add.w	r3, r7, #28
 8001036:	4619      	mov	r1, r3
 8001038:	480e      	ldr	r0, [pc, #56]	; (8001074 <HAL_LCD_MspInit+0xfc>)
 800103a:	f000 fcd1 	bl	80019e0 <HAL_GPIO_Init>
 800103e:	f64f 7338 	movw	r3, #65336	; 0xff38
 8001042:	61fb      	str	r3, [r7, #28]
 8001044:	2302      	movs	r3, #2
 8001046:	623b      	str	r3, [r7, #32]
 8001048:	2300      	movs	r3, #0
 800104a:	627b      	str	r3, [r7, #36]	; 0x24
 800104c:	2300      	movs	r3, #0
 800104e:	62bb      	str	r3, [r7, #40]	; 0x28
 8001050:	230b      	movs	r3, #11
 8001052:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001054:	f107 031c 	add.w	r3, r7, #28
 8001058:	4619      	mov	r1, r3
 800105a:	4807      	ldr	r0, [pc, #28]	; (8001078 <HAL_LCD_MspInit+0x100>)
 800105c:	f000 fcc0 	bl	80019e0 <HAL_GPIO_Init>
 8001060:	bf00      	nop
 8001062:	3730      	adds	r7, #48	; 0x30
 8001064:	46bd      	mov	sp, r7
 8001066:	bd80      	pop	{r7, pc}
 8001068:	40002400 	.word	0x40002400
 800106c:	40023800 	.word	0x40023800
 8001070:	40020800 	.word	0x40020800
 8001074:	40020000 	.word	0x40020000
 8001078:	40020400 	.word	0x40020400

0800107c <HAL_TIM_Base_MspInit>:
 800107c:	b480      	push	{r7}
 800107e:	b085      	sub	sp, #20
 8001080:	af00      	add	r7, sp, #0
 8001082:	6078      	str	r0, [r7, #4]
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4a12      	ldr	r2, [pc, #72]	; (80010d4 <HAL_TIM_Base_MspInit+0x58>)
 800108a:	4293      	cmp	r3, r2
 800108c:	d10c      	bne.n	80010a8 <HAL_TIM_Base_MspInit+0x2c>
 800108e:	4b12      	ldr	r3, [pc, #72]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 8001090:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001092:	4a11      	ldr	r2, [pc, #68]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 8001094:	f043 0302 	orr.w	r3, r3, #2
 8001098:	6253      	str	r3, [r2, #36]	; 0x24
 800109a:	4b0f      	ldr	r3, [pc, #60]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 800109c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800109e:	f003 0302 	and.w	r3, r3, #2
 80010a2:	60fb      	str	r3, [r7, #12]
 80010a4:	68fb      	ldr	r3, [r7, #12]
 80010a6:	e010      	b.n	80010ca <HAL_TIM_Base_MspInit+0x4e>
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	4a0b      	ldr	r2, [pc, #44]	; (80010dc <HAL_TIM_Base_MspInit+0x60>)
 80010ae:	4293      	cmp	r3, r2
 80010b0:	d10b      	bne.n	80010ca <HAL_TIM_Base_MspInit+0x4e>
 80010b2:	4b09      	ldr	r3, [pc, #36]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 80010b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80010b6:	4a08      	ldr	r2, [pc, #32]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 80010b8:	f043 0304 	orr.w	r3, r3, #4
 80010bc:	6253      	str	r3, [r2, #36]	; 0x24
 80010be:	4b06      	ldr	r3, [pc, #24]	; (80010d8 <HAL_TIM_Base_MspInit+0x5c>)
 80010c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80010c2:	f003 0304 	and.w	r3, r3, #4
 80010c6:	60bb      	str	r3, [r7, #8]
 80010c8:	68bb      	ldr	r3, [r7, #8]
 80010ca:	bf00      	nop
 80010cc:	3714      	adds	r7, #20
 80010ce:	46bd      	mov	sp, r7
 80010d0:	bc80      	pop	{r7}
 80010d2:	4770      	bx	lr
 80010d4:	40000400 	.word	0x40000400
 80010d8:	40023800 	.word	0x40023800
 80010dc:	40000800 	.word	0x40000800

080010e0 <HAL_UART_MspInit>:
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b08a      	sub	sp, #40	; 0x28
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
 80010e8:	f107 0314 	add.w	r3, r7, #20
 80010ec:	2200      	movs	r2, #0
 80010ee:	601a      	str	r2, [r3, #0]
 80010f0:	605a      	str	r2, [r3, #4]
 80010f2:	609a      	str	r2, [r3, #8]
 80010f4:	60da      	str	r2, [r3, #12]
 80010f6:	611a      	str	r2, [r3, #16]
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	4a17      	ldr	r2, [pc, #92]	; (800115c <HAL_UART_MspInit+0x7c>)
 80010fe:	4293      	cmp	r3, r2
 8001100:	d127      	bne.n	8001152 <HAL_UART_MspInit+0x72>
 8001102:	4b17      	ldr	r3, [pc, #92]	; (8001160 <HAL_UART_MspInit+0x80>)
 8001104:	6a1b      	ldr	r3, [r3, #32]
 8001106:	4a16      	ldr	r2, [pc, #88]	; (8001160 <HAL_UART_MspInit+0x80>)
 8001108:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800110c:	6213      	str	r3, [r2, #32]
 800110e:	4b14      	ldr	r3, [pc, #80]	; (8001160 <HAL_UART_MspInit+0x80>)
 8001110:	6a1b      	ldr	r3, [r3, #32]
 8001112:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001116:	613b      	str	r3, [r7, #16]
 8001118:	693b      	ldr	r3, [r7, #16]
 800111a:	4b11      	ldr	r3, [pc, #68]	; (8001160 <HAL_UART_MspInit+0x80>)
 800111c:	69db      	ldr	r3, [r3, #28]
 800111e:	4a10      	ldr	r2, [pc, #64]	; (8001160 <HAL_UART_MspInit+0x80>)
 8001120:	f043 0302 	orr.w	r3, r3, #2
 8001124:	61d3      	str	r3, [r2, #28]
 8001126:	4b0e      	ldr	r3, [pc, #56]	; (8001160 <HAL_UART_MspInit+0x80>)
 8001128:	69db      	ldr	r3, [r3, #28]
 800112a:	f003 0302 	and.w	r3, r3, #2
 800112e:	60fb      	str	r3, [r7, #12]
 8001130:	68fb      	ldr	r3, [r7, #12]
 8001132:	23c0      	movs	r3, #192	; 0xc0
 8001134:	617b      	str	r3, [r7, #20]
 8001136:	2302      	movs	r3, #2
 8001138:	61bb      	str	r3, [r7, #24]
 800113a:	2300      	movs	r3, #0
 800113c:	61fb      	str	r3, [r7, #28]
 800113e:	2303      	movs	r3, #3
 8001140:	623b      	str	r3, [r7, #32]
 8001142:	2307      	movs	r3, #7
 8001144:	627b      	str	r3, [r7, #36]	; 0x24
 8001146:	f107 0314 	add.w	r3, r7, #20
 800114a:	4619      	mov	r1, r3
 800114c:	4805      	ldr	r0, [pc, #20]	; (8001164 <HAL_UART_MspInit+0x84>)
 800114e:	f000 fc47 	bl	80019e0 <HAL_GPIO_Init>
 8001152:	bf00      	nop
 8001154:	3728      	adds	r7, #40	; 0x28
 8001156:	46bd      	mov	sp, r7
 8001158:	bd80      	pop	{r7, pc}
 800115a:	bf00      	nop
 800115c:	40013800 	.word	0x40013800
 8001160:	40023800 	.word	0x40023800
 8001164:	40020400 	.word	0x40020400

08001168 <NMI_Handler>:
 8001168:	b480      	push	{r7}
 800116a:	af00      	add	r7, sp, #0
 800116c:	e7fe      	b.n	800116c <NMI_Handler+0x4>

0800116e <HardFault_Handler>:
 800116e:	b480      	push	{r7}
 8001170:	af00      	add	r7, sp, #0
 8001172:	e7fe      	b.n	8001172 <HardFault_Handler+0x4>

08001174 <MemManage_Handler>:
 8001174:	b480      	push	{r7}
 8001176:	af00      	add	r7, sp, #0
 8001178:	e7fe      	b.n	8001178 <MemManage_Handler+0x4>

0800117a <BusFault_Handler>:
 800117a:	b480      	push	{r7}
 800117c:	af00      	add	r7, sp, #0
 800117e:	e7fe      	b.n	800117e <BusFault_Handler+0x4>

08001180 <UsageFault_Handler>:
 8001180:	b480      	push	{r7}
 8001182:	af00      	add	r7, sp, #0
 8001184:	e7fe      	b.n	8001184 <UsageFault_Handler+0x4>

08001186 <SVC_Handler>:
 8001186:	b480      	push	{r7}
 8001188:	af00      	add	r7, sp, #0
 800118a:	bf00      	nop
 800118c:	46bd      	mov	sp, r7
 800118e:	bc80      	pop	{r7}
 8001190:	4770      	bx	lr

08001192 <DebugMon_Handler>:
 8001192:	b480      	push	{r7}
 8001194:	af00      	add	r7, sp, #0
 8001196:	bf00      	nop
 8001198:	46bd      	mov	sp, r7
 800119a:	bc80      	pop	{r7}
 800119c:	4770      	bx	lr

0800119e <PendSV_Handler>:
 800119e:	b480      	push	{r7}
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	bf00      	nop
 80011a4:	46bd      	mov	sp, r7
 80011a6:	bc80      	pop	{r7}
 80011a8:	4770      	bx	lr

080011aa <SysTick_Handler>:
 80011aa:	b580      	push	{r7, lr}
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	f000 f881 	bl	80012b4 <HAL_IncTick>
 80011b2:	bf00      	nop
 80011b4:	bd80      	pop	{r7, pc}

080011b6 <SystemInit>:
 80011b6:	b480      	push	{r7}
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	bf00      	nop
 80011bc:	46bd      	mov	sp, r7
 80011be:	bc80      	pop	{r7}
 80011c0:	4770      	bx	lr
	...

080011c4 <Reset_Handler>:
 80011c4:	f7ff fff7 	bl	80011b6 <SystemInit>
 80011c8:	480b      	ldr	r0, [pc, #44]	; (80011f8 <LoopFillZerobss+0xe>)
 80011ca:	490c      	ldr	r1, [pc, #48]	; (80011fc <LoopFillZerobss+0x12>)
 80011cc:	4a0c      	ldr	r2, [pc, #48]	; (8001200 <LoopFillZerobss+0x16>)
 80011ce:	2300      	movs	r3, #0
 80011d0:	e002      	b.n	80011d8 <LoopCopyDataInit>

080011d2 <CopyDataInit>:
 80011d2:	58d4      	ldr	r4, [r2, r3]
 80011d4:	50c4      	str	r4, [r0, r3]
 80011d6:	3304      	adds	r3, #4

080011d8 <LoopCopyDataInit>:
 80011d8:	18c4      	adds	r4, r0, r3
 80011da:	428c      	cmp	r4, r1
 80011dc:	d3f9      	bcc.n	80011d2 <CopyDataInit>
 80011de:	4a09      	ldr	r2, [pc, #36]	; (8001204 <LoopFillZerobss+0x1a>)
 80011e0:	4c09      	ldr	r4, [pc, #36]	; (8001208 <LoopFillZerobss+0x1e>)
 80011e2:	2300      	movs	r3, #0
 80011e4:	e001      	b.n	80011ea <LoopFillZerobss>

080011e6 <FillZerobss>:
 80011e6:	6013      	str	r3, [r2, #0]
 80011e8:	3204      	adds	r2, #4

080011ea <LoopFillZerobss>:
 80011ea:	42a2      	cmp	r2, r4
 80011ec:	d3fb      	bcc.n	80011e6 <FillZerobss>
 80011ee:	f002 fa73 	bl	80036d8 <__libc_init_array>
 80011f2:	f7ff fa13 	bl	800061c <main>
 80011f6:	4770      	bx	lr
 80011f8:	20000000 	.word	0x20000000
 80011fc:	2000000c 	.word	0x2000000c
 8001200:	0800376c 	.word	0x0800376c
 8001204:	2000000c 	.word	0x2000000c
 8001208:	20000194 	.word	0x20000194

0800120c <COMP_IRQHandler>:
 800120c:	e7fe      	b.n	800120c <COMP_IRQHandler>

0800120e <HAL_Init>:
 800120e:	b580      	push	{r7, lr}
 8001210:	b082      	sub	sp, #8
 8001212:	af00      	add	r7, sp, #0
 8001214:	2300      	movs	r3, #0
 8001216:	71fb      	strb	r3, [r7, #7]
 8001218:	2003      	movs	r0, #3
 800121a:	f000 fbad 	bl	8001978 <HAL_NVIC_SetPriorityGrouping>
 800121e:	2000      	movs	r0, #0
 8001220:	f000 f80e 	bl	8001240 <HAL_InitTick>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d002      	beq.n	8001230 <HAL_Init+0x22>
 800122a:	2301      	movs	r3, #1
 800122c:	71fb      	strb	r3, [r7, #7]
 800122e:	e001      	b.n	8001234 <HAL_Init+0x26>
 8001230:	f7ff fe32 	bl	8000e98 <HAL_MspInit>
 8001234:	79fb      	ldrb	r3, [r7, #7]
 8001236:	4618      	mov	r0, r3
 8001238:	3708      	adds	r7, #8
 800123a:	46bd      	mov	sp, r7
 800123c:	bd80      	pop	{r7, pc}
	...

08001240 <HAL_InitTick>:
 8001240:	b580      	push	{r7, lr}
 8001242:	b084      	sub	sp, #16
 8001244:	af00      	add	r7, sp, #0
 8001246:	6078      	str	r0, [r7, #4]
 8001248:	2300      	movs	r3, #0
 800124a:	73fb      	strb	r3, [r7, #15]
 800124c:	4b16      	ldr	r3, [pc, #88]	; (80012a8 <HAL_InitTick+0x68>)
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	2b00      	cmp	r3, #0
 8001252:	d022      	beq.n	800129a <HAL_InitTick+0x5a>
 8001254:	4b15      	ldr	r3, [pc, #84]	; (80012ac <HAL_InitTick+0x6c>)
 8001256:	681a      	ldr	r2, [r3, #0]
 8001258:	4b13      	ldr	r3, [pc, #76]	; (80012a8 <HAL_InitTick+0x68>)
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001260:	fbb1 f3f3 	udiv	r3, r1, r3
 8001264:	fbb2 f3f3 	udiv	r3, r2, r3
 8001268:	4618      	mov	r0, r3
 800126a:	f000 fbac 	bl	80019c6 <HAL_SYSTICK_Config>
 800126e:	4603      	mov	r3, r0
 8001270:	2b00      	cmp	r3, #0
 8001272:	d10f      	bne.n	8001294 <HAL_InitTick+0x54>
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	2b0f      	cmp	r3, #15
 8001278:	d809      	bhi.n	800128e <HAL_InitTick+0x4e>
 800127a:	2200      	movs	r2, #0
 800127c:	6879      	ldr	r1, [r7, #4]
 800127e:	f04f 30ff 	mov.w	r0, #4294967295
 8001282:	f000 fb84 	bl	800198e <HAL_NVIC_SetPriority>
 8001286:	4a0a      	ldr	r2, [pc, #40]	; (80012b0 <HAL_InitTick+0x70>)
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	6013      	str	r3, [r2, #0]
 800128c:	e007      	b.n	800129e <HAL_InitTick+0x5e>
 800128e:	2301      	movs	r3, #1
 8001290:	73fb      	strb	r3, [r7, #15]
 8001292:	e004      	b.n	800129e <HAL_InitTick+0x5e>
 8001294:	2301      	movs	r3, #1
 8001296:	73fb      	strb	r3, [r7, #15]
 8001298:	e001      	b.n	800129e <HAL_InitTick+0x5e>
 800129a:	2301      	movs	r3, #1
 800129c:	73fb      	strb	r3, [r7, #15]
 800129e:	7bfb      	ldrb	r3, [r7, #15]
 80012a0:	4618      	mov	r0, r3
 80012a2:	3710      	adds	r7, #16
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}
 80012a8:	20000008 	.word	0x20000008
 80012ac:	20000000 	.word	0x20000000
 80012b0:	20000004 	.word	0x20000004

080012b4 <HAL_IncTick>:
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
 80012b8:	4b05      	ldr	r3, [pc, #20]	; (80012d0 <HAL_IncTick+0x1c>)
 80012ba:	681a      	ldr	r2, [r3, #0]
 80012bc:	4b05      	ldr	r3, [pc, #20]	; (80012d4 <HAL_IncTick+0x20>)
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	4413      	add	r3, r2
 80012c2:	4a03      	ldr	r2, [pc, #12]	; (80012d0 <HAL_IncTick+0x1c>)
 80012c4:	6013      	str	r3, [r2, #0]
 80012c6:	bf00      	nop
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bc80      	pop	{r7}
 80012cc:	4770      	bx	lr
 80012ce:	bf00      	nop
 80012d0:	20000190 	.word	0x20000190
 80012d4:	20000008 	.word	0x20000008

080012d8 <HAL_GetTick>:
 80012d8:	b480      	push	{r7}
 80012da:	af00      	add	r7, sp, #0
 80012dc:	4b02      	ldr	r3, [pc, #8]	; (80012e8 <HAL_GetTick+0x10>)
 80012de:	681b      	ldr	r3, [r3, #0]
 80012e0:	4618      	mov	r0, r3
 80012e2:	46bd      	mov	sp, r7
 80012e4:	bc80      	pop	{r7}
 80012e6:	4770      	bx	lr
 80012e8:	20000190 	.word	0x20000190

080012ec <HAL_ADC_Init>:
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b08e      	sub	sp, #56	; 0x38
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	6078      	str	r0, [r7, #4]
 80012f4:	2300      	movs	r3, #0
 80012f6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80012fa:	2300      	movs	r3, #0
 80012fc:	633b      	str	r3, [r7, #48]	; 0x30
 80012fe:	2300      	movs	r3, #0
 8001300:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	2b00      	cmp	r3, #0
 8001306:	d101      	bne.n	800130c <HAL_ADC_Init+0x20>
 8001308:	2301      	movs	r3, #1
 800130a:	e127      	b.n	800155c <HAL_ADC_Init+0x270>
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	691b      	ldr	r3, [r3, #16]
 8001310:	2b00      	cmp	r3, #0
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001316:	2b00      	cmp	r3, #0
 8001318:	d115      	bne.n	8001346 <HAL_ADC_Init+0x5a>
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	2200      	movs	r2, #0
 800131e:	651a      	str	r2, [r3, #80]	; 0x50
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	2200      	movs	r2, #0
 8001324:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001328:	4b8e      	ldr	r3, [pc, #568]	; (8001564 <HAL_ADC_Init+0x278>)
 800132a:	6a1b      	ldr	r3, [r3, #32]
 800132c:	4a8d      	ldr	r2, [pc, #564]	; (8001564 <HAL_ADC_Init+0x278>)
 800132e:	f043 0301 	orr.w	r3, r3, #1
 8001332:	6213      	str	r3, [r2, #32]
 8001334:	4b8b      	ldr	r3, [pc, #556]	; (8001564 <HAL_ADC_Init+0x278>)
 8001336:	6a1b      	ldr	r3, [r3, #32]
 8001338:	f003 0301 	and.w	r3, r3, #1
 800133c:	60bb      	str	r3, [r7, #8]
 800133e:	68bb      	ldr	r3, [r7, #8]
 8001340:	6878      	ldr	r0, [r7, #4]
 8001342:	f7ff fdd9 	bl	8000ef8 <HAL_ADC_MspInit>
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800134a:	f003 0310 	and.w	r3, r3, #16
 800134e:	2b00      	cmp	r3, #0
 8001350:	f040 80ff 	bne.w	8001552 <HAL_ADC_Init+0x266>
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001358:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800135c:	f023 0302 	bic.w	r3, r3, #2
 8001360:	f043 0202 	orr.w	r2, r3, #2
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	64da      	str	r2, [r3, #76]	; 0x4c
 8001368:	4b7f      	ldr	r3, [pc, #508]	; (8001568 <HAL_ADC_Init+0x27c>)
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	685b      	ldr	r3, [r3, #4]
 8001374:	497c      	ldr	r1, [pc, #496]	; (8001568 <HAL_ADC_Init+0x27c>)
 8001376:	4313      	orrs	r3, r2
 8001378:	604b      	str	r3, [r1, #4]
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	68da      	ldr	r2, [r3, #12]
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	695b      	ldr	r3, [r3, #20]
 8001382:	431a      	orrs	r2, r3
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800138a:	4619      	mov	r1, r3
 800138c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001390:	623b      	str	r3, [r7, #32]
 8001392:	6a3b      	ldr	r3, [r7, #32]
 8001394:	fa93 f3a3 	rbit	r3, r3
 8001398:	61fb      	str	r3, [r7, #28]
 800139a:	69fb      	ldr	r3, [r7, #28]
 800139c:	fab3 f383 	clz	r3, r3
 80013a0:	b2db      	uxtb	r3, r3
 80013a2:	fa01 f303 	lsl.w	r3, r1, r3
 80013a6:	431a      	orrs	r2, r3
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	6a1b      	ldr	r3, [r3, #32]
 80013ac:	431a      	orrs	r2, r3
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80013b4:	4619      	mov	r1, r3
 80013b6:	2302      	movs	r3, #2
 80013b8:	62bb      	str	r3, [r7, #40]	; 0x28
 80013ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013bc:	fa93 f3a3 	rbit	r3, r3
 80013c0:	627b      	str	r3, [r7, #36]	; 0x24
 80013c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013c4:	fab3 f383 	clz	r3, r3
 80013c8:	b2db      	uxtb	r3, r3
 80013ca:	fa01 f303 	lsl.w	r3, r1, r3
 80013ce:	4313      	orrs	r3, r2
 80013d0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80013d2:	4313      	orrs	r3, r2
 80013d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80013da:	2b10      	cmp	r3, #16
 80013dc:	d007      	beq.n	80013ee <HAL_ADC_Init+0x102>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80013e6:	4313      	orrs	r3, r2
 80013e8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80013ea:	4313      	orrs	r3, r2
 80013ec:	62fb      	str	r3, [r7, #44]	; 0x2c
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80013f8:	2b40      	cmp	r3, #64	; 0x40
 80013fa:	d04f      	beq.n	800149c <HAL_ADC_Init+0x1b0>
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	699b      	ldr	r3, [r3, #24]
 8001400:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001402:	4313      	orrs	r3, r2
 8001404:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	689a      	ldr	r2, [r3, #8]
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	69db      	ldr	r3, [r3, #28]
 800140e:	4313      	orrs	r3, r2
 8001410:	687a      	ldr	r2, [r7, #4]
 8001412:	6912      	ldr	r2, [r2, #16]
 8001414:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8001418:	d003      	beq.n	8001422 <HAL_ADC_Init+0x136>
 800141a:	687a      	ldr	r2, [r7, #4]
 800141c:	6912      	ldr	r2, [r2, #16]
 800141e:	2a01      	cmp	r2, #1
 8001420:	d102      	bne.n	8001428 <HAL_ADC_Init+0x13c>
 8001422:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001426:	e000      	b.n	800142a <HAL_ADC_Init+0x13e>
 8001428:	2200      	movs	r2, #0
 800142a:	4313      	orrs	r3, r2
 800142c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800142e:	4313      	orrs	r3, r2
 8001430:	633b      	str	r3, [r7, #48]	; 0x30
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8001438:	2b01      	cmp	r3, #1
 800143a:	d125      	bne.n	8001488 <HAL_ADC_Init+0x19c>
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001442:	2b00      	cmp	r3, #0
 8001444:	d114      	bne.n	8001470 <HAL_ADC_Init+0x184>
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800144a:	3b01      	subs	r3, #1
 800144c:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8001450:	61ba      	str	r2, [r7, #24]
 8001452:	69ba      	ldr	r2, [r7, #24]
 8001454:	fa92 f2a2 	rbit	r2, r2
 8001458:	617a      	str	r2, [r7, #20]
 800145a:	697a      	ldr	r2, [r7, #20]
 800145c:	fab2 f282 	clz	r2, r2
 8001460:	b2d2      	uxtb	r2, r2
 8001462:	4093      	lsls	r3, r2
 8001464:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001468:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800146a:	4313      	orrs	r3, r2
 800146c:	633b      	str	r3, [r7, #48]	; 0x30
 800146e:	e00b      	b.n	8001488 <HAL_ADC_Init+0x19c>
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001474:	f043 0220 	orr.w	r2, r3, #32
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	64da      	str	r2, [r3, #76]	; 0x4c
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001480:	f043 0201 	orr.w	r2, r3, #1
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	651a      	str	r2, [r3, #80]	; 0x50
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	685a      	ldr	r2, [r3, #4]
 800148e:	4b37      	ldr	r3, [pc, #220]	; (800156c <HAL_ADC_Init+0x280>)
 8001490:	4013      	ands	r3, r2
 8001492:	687a      	ldr	r2, [r7, #4]
 8001494:	6812      	ldr	r2, [r2, #0]
 8001496:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001498:	430b      	orrs	r3, r1
 800149a:	6053      	str	r3, [r2, #4]
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	689a      	ldr	r2, [r3, #8]
 80014a2:	4b33      	ldr	r3, [pc, #204]	; (8001570 <HAL_ADC_Init+0x284>)
 80014a4:	4013      	ands	r3, r2
 80014a6:	687a      	ldr	r2, [r7, #4]
 80014a8:	6812      	ldr	r2, [r2, #0]
 80014aa:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80014ac:	430b      	orrs	r3, r1
 80014ae:	6093      	str	r3, [r2, #8]
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	691b      	ldr	r3, [r3, #16]
 80014b4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80014b8:	d003      	beq.n	80014c2 <HAL_ADC_Init+0x1d6>
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	691b      	ldr	r3, [r3, #16]
 80014be:	2b01      	cmp	r3, #1
 80014c0:	d119      	bne.n	80014f6 <HAL_ADC_Init+0x20a>
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014c8:	f023 71f8 	bic.w	r1, r3, #32505856	; 0x1f00000
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80014d0:	3b01      	subs	r3, #1
 80014d2:	f04f 72f8 	mov.w	r2, #32505856	; 0x1f00000
 80014d6:	613a      	str	r2, [r7, #16]
 80014d8:	693a      	ldr	r2, [r7, #16]
 80014da:	fa92 f2a2 	rbit	r2, r2
 80014de:	60fa      	str	r2, [r7, #12]
 80014e0:	68fa      	ldr	r2, [r7, #12]
 80014e2:	fab2 f282 	clz	r2, r2
 80014e6:	b2d2      	uxtb	r2, r2
 80014e8:	fa03 f202 	lsl.w	r2, r3, r2
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	681b      	ldr	r3, [r3, #0]
 80014f0:	430a      	orrs	r2, r1
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	e007      	b.n	8001506 <HAL_ADC_Init+0x21a>
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	f022 72f8 	bic.w	r2, r2, #32505856	; 0x1f00000
 8001504:	631a      	str	r2, [r3, #48]	; 0x30
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	681b      	ldr	r3, [r3, #0]
 800150a:	689a      	ldr	r2, [r3, #8]
 800150c:	4b19      	ldr	r3, [pc, #100]	; (8001574 <HAL_ADC_Init+0x288>)
 800150e:	4013      	ands	r3, r2
 8001510:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001512:	429a      	cmp	r2, r3
 8001514:	d10b      	bne.n	800152e <HAL_ADC_Init+0x242>
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	2200      	movs	r2, #0
 800151a:	651a      	str	r2, [r3, #80]	; 0x50
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001520:	f023 0303 	bic.w	r3, r3, #3
 8001524:	f043 0201 	orr.w	r2, r3, #1
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	64da      	str	r2, [r3, #76]	; 0x4c
 800152c:	e014      	b.n	8001558 <HAL_ADC_Init+0x26c>
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001532:	f023 0312 	bic.w	r3, r3, #18
 8001536:	f043 0210 	orr.w	r2, r3, #16
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	64da      	str	r2, [r3, #76]	; 0x4c
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001542:	f043 0201 	orr.w	r2, r3, #1
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	651a      	str	r2, [r3, #80]	; 0x50
 800154a:	2301      	movs	r3, #1
 800154c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8001550:	e002      	b.n	8001558 <HAL_ADC_Init+0x26c>
 8001552:	2301      	movs	r3, #1
 8001554:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8001558:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800155c:	4618      	mov	r0, r3
 800155e:	3738      	adds	r7, #56	; 0x38
 8001560:	46bd      	mov	sp, r7
 8001562:	bd80      	pop	{r7, pc}
 8001564:	40023800 	.word	0x40023800
 8001568:	40012700 	.word	0x40012700
 800156c:	fcfc16ff 	.word	0xfcfc16ff
 8001570:	c0fff18d 	.word	0xc0fff18d
 8001574:	bf80fffe 	.word	0xbf80fffe

08001578 <HAL_ADC_ConfigChannel>:
 8001578:	b480      	push	{r7}
 800157a:	b085      	sub	sp, #20
 800157c:	af00      	add	r7, sp, #0
 800157e:	6078      	str	r0, [r7, #4]
 8001580:	6039      	str	r1, [r7, #0]
 8001582:	2300      	movs	r3, #0
 8001584:	73fb      	strb	r3, [r7, #15]
 8001586:	2300      	movs	r3, #0
 8001588:	60bb      	str	r3, [r7, #8]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8001590:	2b01      	cmp	r3, #1
 8001592:	d101      	bne.n	8001598 <HAL_ADC_ConfigChannel+0x20>
 8001594:	2302      	movs	r3, #2
 8001596:	e134      	b.n	8001802 <HAL_ADC_ConfigChannel+0x28a>
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	2201      	movs	r2, #1
 800159c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	685b      	ldr	r3, [r3, #4]
 80015a4:	2b06      	cmp	r3, #6
 80015a6:	d81c      	bhi.n	80015e2 <HAL_ADC_ConfigChannel+0x6a>
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80015ae:	683b      	ldr	r3, [r7, #0]
 80015b0:	685a      	ldr	r2, [r3, #4]
 80015b2:	4613      	mov	r3, r2
 80015b4:	009b      	lsls	r3, r3, #2
 80015b6:	4413      	add	r3, r2
 80015b8:	3b05      	subs	r3, #5
 80015ba:	221f      	movs	r2, #31
 80015bc:	fa02 f303 	lsl.w	r3, r2, r3
 80015c0:	43db      	mvns	r3, r3
 80015c2:	4019      	ands	r1, r3
 80015c4:	683b      	ldr	r3, [r7, #0]
 80015c6:	6818      	ldr	r0, [r3, #0]
 80015c8:	683b      	ldr	r3, [r7, #0]
 80015ca:	685a      	ldr	r2, [r3, #4]
 80015cc:	4613      	mov	r3, r2
 80015ce:	009b      	lsls	r3, r3, #2
 80015d0:	4413      	add	r3, r2
 80015d2:	3b05      	subs	r3, #5
 80015d4:	fa00 f203 	lsl.w	r2, r0, r3
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	430a      	orrs	r2, r1
 80015de:	641a      	str	r2, [r3, #64]	; 0x40
 80015e0:	e07e      	b.n	80016e0 <HAL_ADC_ConfigChannel+0x168>
 80015e2:	683b      	ldr	r3, [r7, #0]
 80015e4:	685b      	ldr	r3, [r3, #4]
 80015e6:	2b0c      	cmp	r3, #12
 80015e8:	d81c      	bhi.n	8001624 <HAL_ADC_ConfigChannel+0xac>
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80015f0:	683b      	ldr	r3, [r7, #0]
 80015f2:	685a      	ldr	r2, [r3, #4]
 80015f4:	4613      	mov	r3, r2
 80015f6:	009b      	lsls	r3, r3, #2
 80015f8:	4413      	add	r3, r2
 80015fa:	3b23      	subs	r3, #35	; 0x23
 80015fc:	221f      	movs	r2, #31
 80015fe:	fa02 f303 	lsl.w	r3, r2, r3
 8001602:	43db      	mvns	r3, r3
 8001604:	4019      	ands	r1, r3
 8001606:	683b      	ldr	r3, [r7, #0]
 8001608:	6818      	ldr	r0, [r3, #0]
 800160a:	683b      	ldr	r3, [r7, #0]
 800160c:	685a      	ldr	r2, [r3, #4]
 800160e:	4613      	mov	r3, r2
 8001610:	009b      	lsls	r3, r3, #2
 8001612:	4413      	add	r3, r2
 8001614:	3b23      	subs	r3, #35	; 0x23
 8001616:	fa00 f203 	lsl.w	r2, r0, r3
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	430a      	orrs	r2, r1
 8001620:	63da      	str	r2, [r3, #60]	; 0x3c
 8001622:	e05d      	b.n	80016e0 <HAL_ADC_ConfigChannel+0x168>
 8001624:	683b      	ldr	r3, [r7, #0]
 8001626:	685b      	ldr	r3, [r3, #4]
 8001628:	2b12      	cmp	r3, #18
 800162a:	d81c      	bhi.n	8001666 <HAL_ADC_ConfigChannel+0xee>
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8001632:	683b      	ldr	r3, [r7, #0]
 8001634:	685a      	ldr	r2, [r3, #4]
 8001636:	4613      	mov	r3, r2
 8001638:	009b      	lsls	r3, r3, #2
 800163a:	4413      	add	r3, r2
 800163c:	3b41      	subs	r3, #65	; 0x41
 800163e:	221f      	movs	r2, #31
 8001640:	fa02 f303 	lsl.w	r3, r2, r3
 8001644:	43db      	mvns	r3, r3
 8001646:	4019      	ands	r1, r3
 8001648:	683b      	ldr	r3, [r7, #0]
 800164a:	6818      	ldr	r0, [r3, #0]
 800164c:	683b      	ldr	r3, [r7, #0]
 800164e:	685a      	ldr	r2, [r3, #4]
 8001650:	4613      	mov	r3, r2
 8001652:	009b      	lsls	r3, r3, #2
 8001654:	4413      	add	r3, r2
 8001656:	3b41      	subs	r3, #65	; 0x41
 8001658:	fa00 f203 	lsl.w	r2, r0, r3
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	430a      	orrs	r2, r1
 8001662:	639a      	str	r2, [r3, #56]	; 0x38
 8001664:	e03c      	b.n	80016e0 <HAL_ADC_ConfigChannel+0x168>
 8001666:	683b      	ldr	r3, [r7, #0]
 8001668:	685b      	ldr	r3, [r3, #4]
 800166a:	2b18      	cmp	r3, #24
 800166c:	d81c      	bhi.n	80016a8 <HAL_ADC_ConfigChannel+0x130>
 800166e:	687b      	ldr	r3, [r7, #4]
 8001670:	681b      	ldr	r3, [r3, #0]
 8001672:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001674:	683b      	ldr	r3, [r7, #0]
 8001676:	685a      	ldr	r2, [r3, #4]
 8001678:	4613      	mov	r3, r2
 800167a:	009b      	lsls	r3, r3, #2
 800167c:	4413      	add	r3, r2
 800167e:	3b5f      	subs	r3, #95	; 0x5f
 8001680:	221f      	movs	r2, #31
 8001682:	fa02 f303 	lsl.w	r3, r2, r3
 8001686:	43db      	mvns	r3, r3
 8001688:	4019      	ands	r1, r3
 800168a:	683b      	ldr	r3, [r7, #0]
 800168c:	6818      	ldr	r0, [r3, #0]
 800168e:	683b      	ldr	r3, [r7, #0]
 8001690:	685a      	ldr	r2, [r3, #4]
 8001692:	4613      	mov	r3, r2
 8001694:	009b      	lsls	r3, r3, #2
 8001696:	4413      	add	r3, r2
 8001698:	3b5f      	subs	r3, #95	; 0x5f
 800169a:	fa00 f203 	lsl.w	r2, r0, r3
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	430a      	orrs	r2, r1
 80016a4:	635a      	str	r2, [r3, #52]	; 0x34
 80016a6:	e01b      	b.n	80016e0 <HAL_ADC_ConfigChannel+0x168>
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016ae:	683b      	ldr	r3, [r7, #0]
 80016b0:	685a      	ldr	r2, [r3, #4]
 80016b2:	4613      	mov	r3, r2
 80016b4:	009b      	lsls	r3, r3, #2
 80016b6:	4413      	add	r3, r2
 80016b8:	3b7d      	subs	r3, #125	; 0x7d
 80016ba:	221f      	movs	r2, #31
 80016bc:	fa02 f303 	lsl.w	r3, r2, r3
 80016c0:	43db      	mvns	r3, r3
 80016c2:	4019      	ands	r1, r3
 80016c4:	683b      	ldr	r3, [r7, #0]
 80016c6:	6818      	ldr	r0, [r3, #0]
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	685a      	ldr	r2, [r3, #4]
 80016cc:	4613      	mov	r3, r2
 80016ce:	009b      	lsls	r3, r3, #2
 80016d0:	4413      	add	r3, r2
 80016d2:	3b7d      	subs	r3, #125	; 0x7d
 80016d4:	fa00 f203 	lsl.w	r2, r0, r3
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	430a      	orrs	r2, r1
 80016de:	631a      	str	r2, [r3, #48]	; 0x30
 80016e0:	683b      	ldr	r3, [r7, #0]
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	2b09      	cmp	r3, #9
 80016e6:	d81a      	bhi.n	800171e <HAL_ADC_ConfigChannel+0x1a6>
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	6959      	ldr	r1, [r3, #20]
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	681a      	ldr	r2, [r3, #0]
 80016f2:	4613      	mov	r3, r2
 80016f4:	005b      	lsls	r3, r3, #1
 80016f6:	4413      	add	r3, r2
 80016f8:	2207      	movs	r2, #7
 80016fa:	fa02 f303 	lsl.w	r3, r2, r3
 80016fe:	43db      	mvns	r3, r3
 8001700:	4019      	ands	r1, r3
 8001702:	683b      	ldr	r3, [r7, #0]
 8001704:	6898      	ldr	r0, [r3, #8]
 8001706:	683b      	ldr	r3, [r7, #0]
 8001708:	681a      	ldr	r2, [r3, #0]
 800170a:	4613      	mov	r3, r2
 800170c:	005b      	lsls	r3, r3, #1
 800170e:	4413      	add	r3, r2
 8001710:	fa00 f203 	lsl.w	r2, r0, r3
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	430a      	orrs	r2, r1
 800171a:	615a      	str	r2, [r3, #20]
 800171c:	e042      	b.n	80017a4 <HAL_ADC_ConfigChannel+0x22c>
 800171e:	683b      	ldr	r3, [r7, #0]
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	2b13      	cmp	r3, #19
 8001724:	d81c      	bhi.n	8001760 <HAL_ADC_ConfigChannel+0x1e8>
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	6919      	ldr	r1, [r3, #16]
 800172c:	683b      	ldr	r3, [r7, #0]
 800172e:	681a      	ldr	r2, [r3, #0]
 8001730:	4613      	mov	r3, r2
 8001732:	005b      	lsls	r3, r3, #1
 8001734:	4413      	add	r3, r2
 8001736:	3b1e      	subs	r3, #30
 8001738:	2207      	movs	r2, #7
 800173a:	fa02 f303 	lsl.w	r3, r2, r3
 800173e:	43db      	mvns	r3, r3
 8001740:	4019      	ands	r1, r3
 8001742:	683b      	ldr	r3, [r7, #0]
 8001744:	6898      	ldr	r0, [r3, #8]
 8001746:	683b      	ldr	r3, [r7, #0]
 8001748:	681a      	ldr	r2, [r3, #0]
 800174a:	4613      	mov	r3, r2
 800174c:	005b      	lsls	r3, r3, #1
 800174e:	4413      	add	r3, r2
 8001750:	3b1e      	subs	r3, #30
 8001752:	fa00 f203 	lsl.w	r2, r0, r3
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	430a      	orrs	r2, r1
 800175c:	611a      	str	r2, [r3, #16]
 800175e:	e021      	b.n	80017a4 <HAL_ADC_ConfigChannel+0x22c>
 8001760:	683b      	ldr	r3, [r7, #0]
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	2b1a      	cmp	r3, #26
 8001766:	d81c      	bhi.n	80017a2 <HAL_ADC_ConfigChannel+0x22a>
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	68d9      	ldr	r1, [r3, #12]
 800176e:	683b      	ldr	r3, [r7, #0]
 8001770:	681a      	ldr	r2, [r3, #0]
 8001772:	4613      	mov	r3, r2
 8001774:	005b      	lsls	r3, r3, #1
 8001776:	4413      	add	r3, r2
 8001778:	3b3c      	subs	r3, #60	; 0x3c
 800177a:	2207      	movs	r2, #7
 800177c:	fa02 f303 	lsl.w	r3, r2, r3
 8001780:	43db      	mvns	r3, r3
 8001782:	4019      	ands	r1, r3
 8001784:	683b      	ldr	r3, [r7, #0]
 8001786:	6898      	ldr	r0, [r3, #8]
 8001788:	683b      	ldr	r3, [r7, #0]
 800178a:	681a      	ldr	r2, [r3, #0]
 800178c:	4613      	mov	r3, r2
 800178e:	005b      	lsls	r3, r3, #1
 8001790:	4413      	add	r3, r2
 8001792:	3b3c      	subs	r3, #60	; 0x3c
 8001794:	fa00 f203 	lsl.w	r2, r0, r3
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	430a      	orrs	r2, r1
 800179e:	60da      	str	r2, [r3, #12]
 80017a0:	e000      	b.n	80017a4 <HAL_ADC_ConfigChannel+0x22c>
 80017a2:	bf00      	nop
 80017a4:	683b      	ldr	r3, [r7, #0]
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	2b10      	cmp	r3, #16
 80017aa:	d003      	beq.n	80017b4 <HAL_ADC_ConfigChannel+0x23c>
 80017ac:	683b      	ldr	r3, [r7, #0]
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	2b11      	cmp	r3, #17
 80017b2:	d121      	bne.n	80017f8 <HAL_ADC_ConfigChannel+0x280>
 80017b4:	4b15      	ldr	r3, [pc, #84]	; (800180c <HAL_ADC_ConfigChannel+0x294>)
 80017b6:	685b      	ldr	r3, [r3, #4]
 80017b8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d11b      	bne.n	80017f8 <HAL_ADC_ConfigChannel+0x280>
 80017c0:	4b12      	ldr	r3, [pc, #72]	; (800180c <HAL_ADC_ConfigChannel+0x294>)
 80017c2:	685b      	ldr	r3, [r3, #4]
 80017c4:	4a11      	ldr	r2, [pc, #68]	; (800180c <HAL_ADC_ConfigChannel+0x294>)
 80017c6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80017ca:	6053      	str	r3, [r2, #4]
 80017cc:	683b      	ldr	r3, [r7, #0]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	2b10      	cmp	r3, #16
 80017d2:	d111      	bne.n	80017f8 <HAL_ADC_ConfigChannel+0x280>
 80017d4:	4b0e      	ldr	r3, [pc, #56]	; (8001810 <HAL_ADC_ConfigChannel+0x298>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	4a0e      	ldr	r2, [pc, #56]	; (8001814 <HAL_ADC_ConfigChannel+0x29c>)
 80017da:	fba2 2303 	umull	r2, r3, r2, r3
 80017de:	0c9a      	lsrs	r2, r3, #18
 80017e0:	4613      	mov	r3, r2
 80017e2:	009b      	lsls	r3, r3, #2
 80017e4:	4413      	add	r3, r2
 80017e6:	005b      	lsls	r3, r3, #1
 80017e8:	60bb      	str	r3, [r7, #8]
 80017ea:	e002      	b.n	80017f2 <HAL_ADC_ConfigChannel+0x27a>
 80017ec:	68bb      	ldr	r3, [r7, #8]
 80017ee:	3b01      	subs	r3, #1
 80017f0:	60bb      	str	r3, [r7, #8]
 80017f2:	68bb      	ldr	r3, [r7, #8]
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d1f9      	bne.n	80017ec <HAL_ADC_ConfigChannel+0x274>
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001800:	7bfb      	ldrb	r3, [r7, #15]
 8001802:	4618      	mov	r0, r3
 8001804:	3714      	adds	r7, #20
 8001806:	46bd      	mov	sp, r7
 8001808:	bc80      	pop	{r7}
 800180a:	4770      	bx	lr
 800180c:	40012700 	.word	0x40012700
 8001810:	20000000 	.word	0x20000000
 8001814:	431bde83 	.word	0x431bde83

08001818 <__NVIC_SetPriorityGrouping>:
 8001818:	b480      	push	{r7}
 800181a:	b085      	sub	sp, #20
 800181c:	af00      	add	r7, sp, #0
 800181e:	6078      	str	r0, [r7, #4]
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	f003 0307 	and.w	r3, r3, #7
 8001826:	60fb      	str	r3, [r7, #12]
 8001828:	4b0c      	ldr	r3, [pc, #48]	; (800185c <__NVIC_SetPriorityGrouping+0x44>)
 800182a:	68db      	ldr	r3, [r3, #12]
 800182c:	60bb      	str	r3, [r7, #8]
 800182e:	68ba      	ldr	r2, [r7, #8]
 8001830:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001834:	4013      	ands	r3, r2
 8001836:	60bb      	str	r3, [r7, #8]
 8001838:	68fb      	ldr	r3, [r7, #12]
 800183a:	021a      	lsls	r2, r3, #8
 800183c:	68bb      	ldr	r3, [r7, #8]
 800183e:	4313      	orrs	r3, r2
 8001840:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001844:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001848:	60bb      	str	r3, [r7, #8]
 800184a:	4a04      	ldr	r2, [pc, #16]	; (800185c <__NVIC_SetPriorityGrouping+0x44>)
 800184c:	68bb      	ldr	r3, [r7, #8]
 800184e:	60d3      	str	r3, [r2, #12]
 8001850:	bf00      	nop
 8001852:	3714      	adds	r7, #20
 8001854:	46bd      	mov	sp, r7
 8001856:	bc80      	pop	{r7}
 8001858:	4770      	bx	lr
 800185a:	bf00      	nop
 800185c:	e000ed00 	.word	0xe000ed00

08001860 <__NVIC_GetPriorityGrouping>:
 8001860:	b480      	push	{r7}
 8001862:	af00      	add	r7, sp, #0
 8001864:	4b04      	ldr	r3, [pc, #16]	; (8001878 <__NVIC_GetPriorityGrouping+0x18>)
 8001866:	68db      	ldr	r3, [r3, #12]
 8001868:	0a1b      	lsrs	r3, r3, #8
 800186a:	f003 0307 	and.w	r3, r3, #7
 800186e:	4618      	mov	r0, r3
 8001870:	46bd      	mov	sp, r7
 8001872:	bc80      	pop	{r7}
 8001874:	4770      	bx	lr
 8001876:	bf00      	nop
 8001878:	e000ed00 	.word	0xe000ed00

0800187c <__NVIC_SetPriority>:
 800187c:	b480      	push	{r7}
 800187e:	b083      	sub	sp, #12
 8001880:	af00      	add	r7, sp, #0
 8001882:	4603      	mov	r3, r0
 8001884:	6039      	str	r1, [r7, #0]
 8001886:	71fb      	strb	r3, [r7, #7]
 8001888:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800188c:	2b00      	cmp	r3, #0
 800188e:	db0a      	blt.n	80018a6 <__NVIC_SetPriority+0x2a>
 8001890:	683b      	ldr	r3, [r7, #0]
 8001892:	b2da      	uxtb	r2, r3
 8001894:	490c      	ldr	r1, [pc, #48]	; (80018c8 <__NVIC_SetPriority+0x4c>)
 8001896:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800189a:	0112      	lsls	r2, r2, #4
 800189c:	b2d2      	uxtb	r2, r2
 800189e:	440b      	add	r3, r1
 80018a0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80018a4:	e00a      	b.n	80018bc <__NVIC_SetPriority+0x40>
 80018a6:	683b      	ldr	r3, [r7, #0]
 80018a8:	b2da      	uxtb	r2, r3
 80018aa:	4908      	ldr	r1, [pc, #32]	; (80018cc <__NVIC_SetPriority+0x50>)
 80018ac:	79fb      	ldrb	r3, [r7, #7]
 80018ae:	f003 030f 	and.w	r3, r3, #15
 80018b2:	3b04      	subs	r3, #4
 80018b4:	0112      	lsls	r2, r2, #4
 80018b6:	b2d2      	uxtb	r2, r2
 80018b8:	440b      	add	r3, r1
 80018ba:	761a      	strb	r2, [r3, #24]
 80018bc:	bf00      	nop
 80018be:	370c      	adds	r7, #12
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bc80      	pop	{r7}
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	e000e100 	.word	0xe000e100
 80018cc:	e000ed00 	.word	0xe000ed00

080018d0 <NVIC_EncodePriority>:
 80018d0:	b480      	push	{r7}
 80018d2:	b089      	sub	sp, #36	; 0x24
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	60f8      	str	r0, [r7, #12]
 80018d8:	60b9      	str	r1, [r7, #8]
 80018da:	607a      	str	r2, [r7, #4]
 80018dc:	68fb      	ldr	r3, [r7, #12]
 80018de:	f003 0307 	and.w	r3, r3, #7
 80018e2:	61fb      	str	r3, [r7, #28]
 80018e4:	69fb      	ldr	r3, [r7, #28]
 80018e6:	f1c3 0307 	rsb	r3, r3, #7
 80018ea:	2b04      	cmp	r3, #4
 80018ec:	bf28      	it	cs
 80018ee:	2304      	movcs	r3, #4
 80018f0:	61bb      	str	r3, [r7, #24]
 80018f2:	69fb      	ldr	r3, [r7, #28]
 80018f4:	3304      	adds	r3, #4
 80018f6:	2b06      	cmp	r3, #6
 80018f8:	d902      	bls.n	8001900 <NVIC_EncodePriority+0x30>
 80018fa:	69fb      	ldr	r3, [r7, #28]
 80018fc:	3b03      	subs	r3, #3
 80018fe:	e000      	b.n	8001902 <NVIC_EncodePriority+0x32>
 8001900:	2300      	movs	r3, #0
 8001902:	617b      	str	r3, [r7, #20]
 8001904:	f04f 32ff 	mov.w	r2, #4294967295
 8001908:	69bb      	ldr	r3, [r7, #24]
 800190a:	fa02 f303 	lsl.w	r3, r2, r3
 800190e:	43da      	mvns	r2, r3
 8001910:	68bb      	ldr	r3, [r7, #8]
 8001912:	401a      	ands	r2, r3
 8001914:	697b      	ldr	r3, [r7, #20]
 8001916:	409a      	lsls	r2, r3
 8001918:	f04f 31ff 	mov.w	r1, #4294967295
 800191c:	697b      	ldr	r3, [r7, #20]
 800191e:	fa01 f303 	lsl.w	r3, r1, r3
 8001922:	43d9      	mvns	r1, r3
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	400b      	ands	r3, r1
 8001928:	4313      	orrs	r3, r2
 800192a:	4618      	mov	r0, r3
 800192c:	3724      	adds	r7, #36	; 0x24
 800192e:	46bd      	mov	sp, r7
 8001930:	bc80      	pop	{r7}
 8001932:	4770      	bx	lr

08001934 <SysTick_Config>:
 8001934:	b580      	push	{r7, lr}
 8001936:	b082      	sub	sp, #8
 8001938:	af00      	add	r7, sp, #0
 800193a:	6078      	str	r0, [r7, #4]
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	3b01      	subs	r3, #1
 8001940:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001944:	d301      	bcc.n	800194a <SysTick_Config+0x16>
 8001946:	2301      	movs	r3, #1
 8001948:	e00f      	b.n	800196a <SysTick_Config+0x36>
 800194a:	4a0a      	ldr	r2, [pc, #40]	; (8001974 <SysTick_Config+0x40>)
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	3b01      	subs	r3, #1
 8001950:	6053      	str	r3, [r2, #4]
 8001952:	210f      	movs	r1, #15
 8001954:	f04f 30ff 	mov.w	r0, #4294967295
 8001958:	f7ff ff90 	bl	800187c <__NVIC_SetPriority>
 800195c:	4b05      	ldr	r3, [pc, #20]	; (8001974 <SysTick_Config+0x40>)
 800195e:	2200      	movs	r2, #0
 8001960:	609a      	str	r2, [r3, #8]
 8001962:	4b04      	ldr	r3, [pc, #16]	; (8001974 <SysTick_Config+0x40>)
 8001964:	2207      	movs	r2, #7
 8001966:	601a      	str	r2, [r3, #0]
 8001968:	2300      	movs	r3, #0
 800196a:	4618      	mov	r0, r3
 800196c:	3708      	adds	r7, #8
 800196e:	46bd      	mov	sp, r7
 8001970:	bd80      	pop	{r7, pc}
 8001972:	bf00      	nop
 8001974:	e000e010 	.word	0xe000e010

08001978 <HAL_NVIC_SetPriorityGrouping>:
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6878      	ldr	r0, [r7, #4]
 8001982:	f7ff ff49 	bl	8001818 <__NVIC_SetPriorityGrouping>
 8001986:	bf00      	nop
 8001988:	3708      	adds	r7, #8
 800198a:	46bd      	mov	sp, r7
 800198c:	bd80      	pop	{r7, pc}

0800198e <HAL_NVIC_SetPriority>:
 800198e:	b580      	push	{r7, lr}
 8001990:	b086      	sub	sp, #24
 8001992:	af00      	add	r7, sp, #0
 8001994:	4603      	mov	r3, r0
 8001996:	60b9      	str	r1, [r7, #8]
 8001998:	607a      	str	r2, [r7, #4]
 800199a:	73fb      	strb	r3, [r7, #15]
 800199c:	2300      	movs	r3, #0
 800199e:	617b      	str	r3, [r7, #20]
 80019a0:	f7ff ff5e 	bl	8001860 <__NVIC_GetPriorityGrouping>
 80019a4:	6178      	str	r0, [r7, #20]
 80019a6:	687a      	ldr	r2, [r7, #4]
 80019a8:	68b9      	ldr	r1, [r7, #8]
 80019aa:	6978      	ldr	r0, [r7, #20]
 80019ac:	f7ff ff90 	bl	80018d0 <NVIC_EncodePriority>
 80019b0:	4602      	mov	r2, r0
 80019b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019b6:	4611      	mov	r1, r2
 80019b8:	4618      	mov	r0, r3
 80019ba:	f7ff ff5f 	bl	800187c <__NVIC_SetPriority>
 80019be:	bf00      	nop
 80019c0:	3718      	adds	r7, #24
 80019c2:	46bd      	mov	sp, r7
 80019c4:	bd80      	pop	{r7, pc}

080019c6 <HAL_SYSTICK_Config>:
 80019c6:	b580      	push	{r7, lr}
 80019c8:	b082      	sub	sp, #8
 80019ca:	af00      	add	r7, sp, #0
 80019cc:	6078      	str	r0, [r7, #4]
 80019ce:	6878      	ldr	r0, [r7, #4]
 80019d0:	f7ff ffb0 	bl	8001934 <SysTick_Config>
 80019d4:	4603      	mov	r3, r0
 80019d6:	4618      	mov	r0, r3
 80019d8:	3708      	adds	r7, #8
 80019da:	46bd      	mov	sp, r7
 80019dc:	bd80      	pop	{r7, pc}
	...

080019e0 <HAL_GPIO_Init>:
 80019e0:	b480      	push	{r7}
 80019e2:	b087      	sub	sp, #28
 80019e4:	af00      	add	r7, sp, #0
 80019e6:	6078      	str	r0, [r7, #4]
 80019e8:	6039      	str	r1, [r7, #0]
 80019ea:	2300      	movs	r3, #0
 80019ec:	617b      	str	r3, [r7, #20]
 80019ee:	2300      	movs	r3, #0
 80019f0:	60fb      	str	r3, [r7, #12]
 80019f2:	2300      	movs	r3, #0
 80019f4:	613b      	str	r3, [r7, #16]
 80019f6:	e154      	b.n	8001ca2 <HAL_GPIO_Init+0x2c2>
 80019f8:	683b      	ldr	r3, [r7, #0]
 80019fa:	681a      	ldr	r2, [r3, #0]
 80019fc:	2101      	movs	r1, #1
 80019fe:	697b      	ldr	r3, [r7, #20]
 8001a00:	fa01 f303 	lsl.w	r3, r1, r3
 8001a04:	4013      	ands	r3, r2
 8001a06:	60fb      	str	r3, [r7, #12]
 8001a08:	68fb      	ldr	r3, [r7, #12]
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	f000 8146 	beq.w	8001c9c <HAL_GPIO_Init+0x2bc>
 8001a10:	683b      	ldr	r3, [r7, #0]
 8001a12:	685b      	ldr	r3, [r3, #4]
 8001a14:	f003 0303 	and.w	r3, r3, #3
 8001a18:	2b01      	cmp	r3, #1
 8001a1a:	d005      	beq.n	8001a28 <HAL_GPIO_Init+0x48>
 8001a1c:	683b      	ldr	r3, [r7, #0]
 8001a1e:	685b      	ldr	r3, [r3, #4]
 8001a20:	f003 0303 	and.w	r3, r3, #3
 8001a24:	2b02      	cmp	r3, #2
 8001a26:	d130      	bne.n	8001a8a <HAL_GPIO_Init+0xaa>
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	689b      	ldr	r3, [r3, #8]
 8001a2c:	613b      	str	r3, [r7, #16]
 8001a2e:	697b      	ldr	r3, [r7, #20]
 8001a30:	005b      	lsls	r3, r3, #1
 8001a32:	2203      	movs	r2, #3
 8001a34:	fa02 f303 	lsl.w	r3, r2, r3
 8001a38:	43db      	mvns	r3, r3
 8001a3a:	693a      	ldr	r2, [r7, #16]
 8001a3c:	4013      	ands	r3, r2
 8001a3e:	613b      	str	r3, [r7, #16]
 8001a40:	683b      	ldr	r3, [r7, #0]
 8001a42:	68da      	ldr	r2, [r3, #12]
 8001a44:	697b      	ldr	r3, [r7, #20]
 8001a46:	005b      	lsls	r3, r3, #1
 8001a48:	fa02 f303 	lsl.w	r3, r2, r3
 8001a4c:	693a      	ldr	r2, [r7, #16]
 8001a4e:	4313      	orrs	r3, r2
 8001a50:	613b      	str	r3, [r7, #16]
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	693a      	ldr	r2, [r7, #16]
 8001a56:	609a      	str	r2, [r3, #8]
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	685b      	ldr	r3, [r3, #4]
 8001a5c:	613b      	str	r3, [r7, #16]
 8001a5e:	2201      	movs	r2, #1
 8001a60:	697b      	ldr	r3, [r7, #20]
 8001a62:	fa02 f303 	lsl.w	r3, r2, r3
 8001a66:	43db      	mvns	r3, r3
 8001a68:	693a      	ldr	r2, [r7, #16]
 8001a6a:	4013      	ands	r3, r2
 8001a6c:	613b      	str	r3, [r7, #16]
 8001a6e:	683b      	ldr	r3, [r7, #0]
 8001a70:	685b      	ldr	r3, [r3, #4]
 8001a72:	091b      	lsrs	r3, r3, #4
 8001a74:	f003 0201 	and.w	r2, r3, #1
 8001a78:	697b      	ldr	r3, [r7, #20]
 8001a7a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a7e:	693a      	ldr	r2, [r7, #16]
 8001a80:	4313      	orrs	r3, r2
 8001a82:	613b      	str	r3, [r7, #16]
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	693a      	ldr	r2, [r7, #16]
 8001a88:	605a      	str	r2, [r3, #4]
 8001a8a:	683b      	ldr	r3, [r7, #0]
 8001a8c:	685b      	ldr	r3, [r3, #4]
 8001a8e:	f003 0303 	and.w	r3, r3, #3
 8001a92:	2b03      	cmp	r3, #3
 8001a94:	d017      	beq.n	8001ac6 <HAL_GPIO_Init+0xe6>
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	68db      	ldr	r3, [r3, #12]
 8001a9a:	613b      	str	r3, [r7, #16]
 8001a9c:	697b      	ldr	r3, [r7, #20]
 8001a9e:	005b      	lsls	r3, r3, #1
 8001aa0:	2203      	movs	r2, #3
 8001aa2:	fa02 f303 	lsl.w	r3, r2, r3
 8001aa6:	43db      	mvns	r3, r3
 8001aa8:	693a      	ldr	r2, [r7, #16]
 8001aaa:	4013      	ands	r3, r2
 8001aac:	613b      	str	r3, [r7, #16]
 8001aae:	683b      	ldr	r3, [r7, #0]
 8001ab0:	689a      	ldr	r2, [r3, #8]
 8001ab2:	697b      	ldr	r3, [r7, #20]
 8001ab4:	005b      	lsls	r3, r3, #1
 8001ab6:	fa02 f303 	lsl.w	r3, r2, r3
 8001aba:	693a      	ldr	r2, [r7, #16]
 8001abc:	4313      	orrs	r3, r2
 8001abe:	613b      	str	r3, [r7, #16]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	693a      	ldr	r2, [r7, #16]
 8001ac4:	60da      	str	r2, [r3, #12]
 8001ac6:	683b      	ldr	r3, [r7, #0]
 8001ac8:	685b      	ldr	r3, [r3, #4]
 8001aca:	f003 0303 	and.w	r3, r3, #3
 8001ace:	2b02      	cmp	r3, #2
 8001ad0:	d123      	bne.n	8001b1a <HAL_GPIO_Init+0x13a>
 8001ad2:	697b      	ldr	r3, [r7, #20]
 8001ad4:	08da      	lsrs	r2, r3, #3
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	3208      	adds	r2, #8
 8001ada:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ade:	613b      	str	r3, [r7, #16]
 8001ae0:	697b      	ldr	r3, [r7, #20]
 8001ae2:	f003 0307 	and.w	r3, r3, #7
 8001ae6:	009b      	lsls	r3, r3, #2
 8001ae8:	220f      	movs	r2, #15
 8001aea:	fa02 f303 	lsl.w	r3, r2, r3
 8001aee:	43db      	mvns	r3, r3
 8001af0:	693a      	ldr	r2, [r7, #16]
 8001af2:	4013      	ands	r3, r2
 8001af4:	613b      	str	r3, [r7, #16]
 8001af6:	683b      	ldr	r3, [r7, #0]
 8001af8:	691a      	ldr	r2, [r3, #16]
 8001afa:	697b      	ldr	r3, [r7, #20]
 8001afc:	f003 0307 	and.w	r3, r3, #7
 8001b00:	009b      	lsls	r3, r3, #2
 8001b02:	fa02 f303 	lsl.w	r3, r2, r3
 8001b06:	693a      	ldr	r2, [r7, #16]
 8001b08:	4313      	orrs	r3, r2
 8001b0a:	613b      	str	r3, [r7, #16]
 8001b0c:	697b      	ldr	r3, [r7, #20]
 8001b0e:	08da      	lsrs	r2, r3, #3
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	3208      	adds	r2, #8
 8001b14:	6939      	ldr	r1, [r7, #16]
 8001b16:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	613b      	str	r3, [r7, #16]
 8001b20:	697b      	ldr	r3, [r7, #20]
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	2203      	movs	r2, #3
 8001b26:	fa02 f303 	lsl.w	r3, r2, r3
 8001b2a:	43db      	mvns	r3, r3
 8001b2c:	693a      	ldr	r2, [r7, #16]
 8001b2e:	4013      	ands	r3, r2
 8001b30:	613b      	str	r3, [r7, #16]
 8001b32:	683b      	ldr	r3, [r7, #0]
 8001b34:	685b      	ldr	r3, [r3, #4]
 8001b36:	f003 0203 	and.w	r2, r3, #3
 8001b3a:	697b      	ldr	r3, [r7, #20]
 8001b3c:	005b      	lsls	r3, r3, #1
 8001b3e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b42:	693a      	ldr	r2, [r7, #16]
 8001b44:	4313      	orrs	r3, r2
 8001b46:	613b      	str	r3, [r7, #16]
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	693a      	ldr	r2, [r7, #16]
 8001b4c:	601a      	str	r2, [r3, #0]
 8001b4e:	683b      	ldr	r3, [r7, #0]
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001b56:	2b00      	cmp	r3, #0
 8001b58:	f000 80a0 	beq.w	8001c9c <HAL_GPIO_Init+0x2bc>
 8001b5c:	4b58      	ldr	r3, [pc, #352]	; (8001cc0 <HAL_GPIO_Init+0x2e0>)
 8001b5e:	6a1b      	ldr	r3, [r3, #32]
 8001b60:	4a57      	ldr	r2, [pc, #348]	; (8001cc0 <HAL_GPIO_Init+0x2e0>)
 8001b62:	f043 0301 	orr.w	r3, r3, #1
 8001b66:	6213      	str	r3, [r2, #32]
 8001b68:	4b55      	ldr	r3, [pc, #340]	; (8001cc0 <HAL_GPIO_Init+0x2e0>)
 8001b6a:	6a1b      	ldr	r3, [r3, #32]
 8001b6c:	f003 0301 	and.w	r3, r3, #1
 8001b70:	60bb      	str	r3, [r7, #8]
 8001b72:	68bb      	ldr	r3, [r7, #8]
 8001b74:	4a53      	ldr	r2, [pc, #332]	; (8001cc4 <HAL_GPIO_Init+0x2e4>)
 8001b76:	697b      	ldr	r3, [r7, #20]
 8001b78:	089b      	lsrs	r3, r3, #2
 8001b7a:	3302      	adds	r3, #2
 8001b7c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001b80:	613b      	str	r3, [r7, #16]
 8001b82:	697b      	ldr	r3, [r7, #20]
 8001b84:	f003 0303 	and.w	r3, r3, #3
 8001b88:	009b      	lsls	r3, r3, #2
 8001b8a:	220f      	movs	r2, #15
 8001b8c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b90:	43db      	mvns	r3, r3
 8001b92:	693a      	ldr	r2, [r7, #16]
 8001b94:	4013      	ands	r3, r2
 8001b96:	613b      	str	r3, [r7, #16]
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	4a4b      	ldr	r2, [pc, #300]	; (8001cc8 <HAL_GPIO_Init+0x2e8>)
 8001b9c:	4293      	cmp	r3, r2
 8001b9e:	d019      	beq.n	8001bd4 <HAL_GPIO_Init+0x1f4>
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	4a4a      	ldr	r2, [pc, #296]	; (8001ccc <HAL_GPIO_Init+0x2ec>)
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d013      	beq.n	8001bd0 <HAL_GPIO_Init+0x1f0>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	4a49      	ldr	r2, [pc, #292]	; (8001cd0 <HAL_GPIO_Init+0x2f0>)
 8001bac:	4293      	cmp	r3, r2
 8001bae:	d00d      	beq.n	8001bcc <HAL_GPIO_Init+0x1ec>
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	4a48      	ldr	r2, [pc, #288]	; (8001cd4 <HAL_GPIO_Init+0x2f4>)
 8001bb4:	4293      	cmp	r3, r2
 8001bb6:	d007      	beq.n	8001bc8 <HAL_GPIO_Init+0x1e8>
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	4a47      	ldr	r2, [pc, #284]	; (8001cd8 <HAL_GPIO_Init+0x2f8>)
 8001bbc:	4293      	cmp	r3, r2
 8001bbe:	d101      	bne.n	8001bc4 <HAL_GPIO_Init+0x1e4>
 8001bc0:	2304      	movs	r3, #4
 8001bc2:	e008      	b.n	8001bd6 <HAL_GPIO_Init+0x1f6>
 8001bc4:	2305      	movs	r3, #5
 8001bc6:	e006      	b.n	8001bd6 <HAL_GPIO_Init+0x1f6>
 8001bc8:	2303      	movs	r3, #3
 8001bca:	e004      	b.n	8001bd6 <HAL_GPIO_Init+0x1f6>
 8001bcc:	2302      	movs	r3, #2
 8001bce:	e002      	b.n	8001bd6 <HAL_GPIO_Init+0x1f6>
 8001bd0:	2301      	movs	r3, #1
 8001bd2:	e000      	b.n	8001bd6 <HAL_GPIO_Init+0x1f6>
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	697a      	ldr	r2, [r7, #20]
 8001bd8:	f002 0203 	and.w	r2, r2, #3
 8001bdc:	0092      	lsls	r2, r2, #2
 8001bde:	4093      	lsls	r3, r2
 8001be0:	693a      	ldr	r2, [r7, #16]
 8001be2:	4313      	orrs	r3, r2
 8001be4:	613b      	str	r3, [r7, #16]
 8001be6:	4937      	ldr	r1, [pc, #220]	; (8001cc4 <HAL_GPIO_Init+0x2e4>)
 8001be8:	697b      	ldr	r3, [r7, #20]
 8001bea:	089b      	lsrs	r3, r3, #2
 8001bec:	3302      	adds	r3, #2
 8001bee:	693a      	ldr	r2, [r7, #16]
 8001bf0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001bf4:	4b39      	ldr	r3, [pc, #228]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001bf6:	689b      	ldr	r3, [r3, #8]
 8001bf8:	613b      	str	r3, [r7, #16]
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	43db      	mvns	r3, r3
 8001bfe:	693a      	ldr	r2, [r7, #16]
 8001c00:	4013      	ands	r3, r2
 8001c02:	613b      	str	r3, [r7, #16]
 8001c04:	683b      	ldr	r3, [r7, #0]
 8001c06:	685b      	ldr	r3, [r3, #4]
 8001c08:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001c0c:	2b00      	cmp	r3, #0
 8001c0e:	d003      	beq.n	8001c18 <HAL_GPIO_Init+0x238>
 8001c10:	693a      	ldr	r2, [r7, #16]
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	4313      	orrs	r3, r2
 8001c16:	613b      	str	r3, [r7, #16]
 8001c18:	4a30      	ldr	r2, [pc, #192]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c1a:	693b      	ldr	r3, [r7, #16]
 8001c1c:	6093      	str	r3, [r2, #8]
 8001c1e:	4b2f      	ldr	r3, [pc, #188]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c20:	68db      	ldr	r3, [r3, #12]
 8001c22:	613b      	str	r3, [r7, #16]
 8001c24:	68fb      	ldr	r3, [r7, #12]
 8001c26:	43db      	mvns	r3, r3
 8001c28:	693a      	ldr	r2, [r7, #16]
 8001c2a:	4013      	ands	r3, r2
 8001c2c:	613b      	str	r3, [r7, #16]
 8001c2e:	683b      	ldr	r3, [r7, #0]
 8001c30:	685b      	ldr	r3, [r3, #4]
 8001c32:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001c36:	2b00      	cmp	r3, #0
 8001c38:	d003      	beq.n	8001c42 <HAL_GPIO_Init+0x262>
 8001c3a:	693a      	ldr	r2, [r7, #16]
 8001c3c:	68fb      	ldr	r3, [r7, #12]
 8001c3e:	4313      	orrs	r3, r2
 8001c40:	613b      	str	r3, [r7, #16]
 8001c42:	4a26      	ldr	r2, [pc, #152]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c44:	693b      	ldr	r3, [r7, #16]
 8001c46:	60d3      	str	r3, [r2, #12]
 8001c48:	4b24      	ldr	r3, [pc, #144]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c4a:	685b      	ldr	r3, [r3, #4]
 8001c4c:	613b      	str	r3, [r7, #16]
 8001c4e:	68fb      	ldr	r3, [r7, #12]
 8001c50:	43db      	mvns	r3, r3
 8001c52:	693a      	ldr	r2, [r7, #16]
 8001c54:	4013      	ands	r3, r2
 8001c56:	613b      	str	r3, [r7, #16]
 8001c58:	683b      	ldr	r3, [r7, #0]
 8001c5a:	685b      	ldr	r3, [r3, #4]
 8001c5c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	d003      	beq.n	8001c6c <HAL_GPIO_Init+0x28c>
 8001c64:	693a      	ldr	r2, [r7, #16]
 8001c66:	68fb      	ldr	r3, [r7, #12]
 8001c68:	4313      	orrs	r3, r2
 8001c6a:	613b      	str	r3, [r7, #16]
 8001c6c:	4a1b      	ldr	r2, [pc, #108]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c6e:	693b      	ldr	r3, [r7, #16]
 8001c70:	6053      	str	r3, [r2, #4]
 8001c72:	4b1a      	ldr	r3, [pc, #104]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c74:	681b      	ldr	r3, [r3, #0]
 8001c76:	613b      	str	r3, [r7, #16]
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	43db      	mvns	r3, r3
 8001c7c:	693a      	ldr	r2, [r7, #16]
 8001c7e:	4013      	ands	r3, r2
 8001c80:	613b      	str	r3, [r7, #16]
 8001c82:	683b      	ldr	r3, [r7, #0]
 8001c84:	685b      	ldr	r3, [r3, #4]
 8001c86:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d003      	beq.n	8001c96 <HAL_GPIO_Init+0x2b6>
 8001c8e:	693a      	ldr	r2, [r7, #16]
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	4313      	orrs	r3, r2
 8001c94:	613b      	str	r3, [r7, #16]
 8001c96:	4a11      	ldr	r2, [pc, #68]	; (8001cdc <HAL_GPIO_Init+0x2fc>)
 8001c98:	693b      	ldr	r3, [r7, #16]
 8001c9a:	6013      	str	r3, [r2, #0]
 8001c9c:	697b      	ldr	r3, [r7, #20]
 8001c9e:	3301      	adds	r3, #1
 8001ca0:	617b      	str	r3, [r7, #20]
 8001ca2:	683b      	ldr	r3, [r7, #0]
 8001ca4:	681a      	ldr	r2, [r3, #0]
 8001ca6:	697b      	ldr	r3, [r7, #20]
 8001ca8:	fa22 f303 	lsr.w	r3, r2, r3
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	f47f aea3 	bne.w	80019f8 <HAL_GPIO_Init+0x18>
 8001cb2:	bf00      	nop
 8001cb4:	bf00      	nop
 8001cb6:	371c      	adds	r7, #28
 8001cb8:	46bd      	mov	sp, r7
 8001cba:	bc80      	pop	{r7}
 8001cbc:	4770      	bx	lr
 8001cbe:	bf00      	nop
 8001cc0:	40023800 	.word	0x40023800
 8001cc4:	40010000 	.word	0x40010000
 8001cc8:	40020000 	.word	0x40020000
 8001ccc:	40020400 	.word	0x40020400
 8001cd0:	40020800 	.word	0x40020800
 8001cd4:	40020c00 	.word	0x40020c00
 8001cd8:	40021000 	.word	0x40021000
 8001cdc:	40010400 	.word	0x40010400

08001ce0 <HAL_LCD_Init>:
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b084      	sub	sp, #16
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
 8001ce8:	2300      	movs	r3, #0
 8001cea:	60bb      	str	r3, [r7, #8]
 8001cec:	2300      	movs	r3, #0
 8001cee:	73fb      	strb	r3, [r7, #15]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	d101      	bne.n	8001cfa <HAL_LCD_Init+0x1a>
 8001cf6:	2301      	movs	r3, #1
 8001cf8:	e0a8      	b.n	8001e4c <HAL_LCD_Init+0x16c>
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001d00:	b2db      	uxtb	r3, r3
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d106      	bne.n	8001d14 <HAL_LCD_Init+0x34>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	2200      	movs	r2, #0
 8001d0a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001d0e:	6878      	ldr	r0, [r7, #4]
 8001d10:	f7ff f932 	bl	8000f78 <HAL_LCD_MspInit>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	2202      	movs	r2, #2
 8001d18:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	681a      	ldr	r2, [r3, #0]
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	f022 0201 	bic.w	r2, r2, #1
 8001d2a:	601a      	str	r2, [r3, #0]
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	73fb      	strb	r3, [r7, #15]
 8001d30:	e00a      	b.n	8001d48 <HAL_LCD_Init+0x68>
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	681a      	ldr	r2, [r3, #0]
 8001d36:	7bfb      	ldrb	r3, [r7, #15]
 8001d38:	3304      	adds	r3, #4
 8001d3a:	009b      	lsls	r3, r3, #2
 8001d3c:	4413      	add	r3, r2
 8001d3e:	2200      	movs	r2, #0
 8001d40:	605a      	str	r2, [r3, #4]
 8001d42:	7bfb      	ldrb	r3, [r7, #15]
 8001d44:	3301      	adds	r3, #1
 8001d46:	73fb      	strb	r3, [r7, #15]
 8001d48:	7bfb      	ldrb	r3, [r7, #15]
 8001d4a:	2b0f      	cmp	r3, #15
 8001d4c:	d9f1      	bls.n	8001d32 <HAL_LCD_Init+0x52>
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	689a      	ldr	r2, [r3, #8]
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	f042 0204 	orr.w	r2, r2, #4
 8001d5c:	609a      	str	r2, [r3, #8]
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	685a      	ldr	r2, [r3, #4]
 8001d64:	4b3b      	ldr	r3, [pc, #236]	; (8001e54 <HAL_LCD_Init+0x174>)
 8001d66:	4013      	ands	r3, r2
 8001d68:	687a      	ldr	r2, [r7, #4]
 8001d6a:	6851      	ldr	r1, [r2, #4]
 8001d6c:	687a      	ldr	r2, [r7, #4]
 8001d6e:	6892      	ldr	r2, [r2, #8]
 8001d70:	4311      	orrs	r1, r2
 8001d72:	687a      	ldr	r2, [r7, #4]
 8001d74:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8001d76:	4311      	orrs	r1, r2
 8001d78:	687a      	ldr	r2, [r7, #4]
 8001d7a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001d7c:	4311      	orrs	r1, r2
 8001d7e:	687a      	ldr	r2, [r7, #4]
 8001d80:	69d2      	ldr	r2, [r2, #28]
 8001d82:	4311      	orrs	r1, r2
 8001d84:	687a      	ldr	r2, [r7, #4]
 8001d86:	6a12      	ldr	r2, [r2, #32]
 8001d88:	4311      	orrs	r1, r2
 8001d8a:	687a      	ldr	r2, [r7, #4]
 8001d8c:	6992      	ldr	r2, [r2, #24]
 8001d8e:	4311      	orrs	r1, r2
 8001d90:	687a      	ldr	r2, [r7, #4]
 8001d92:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001d94:	4311      	orrs	r1, r2
 8001d96:	687a      	ldr	r2, [r7, #4]
 8001d98:	6812      	ldr	r2, [r2, #0]
 8001d9a:	430b      	orrs	r3, r1
 8001d9c:	6053      	str	r3, [r2, #4]
 8001d9e:	6878      	ldr	r0, [r7, #4]
 8001da0:	f000 f85a 	bl	8001e58 <LCD_WaitForSynchro>
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	f023 01fe 	bic.w	r1, r3, #254	; 0xfe
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	68da      	ldr	r2, [r3, #12]
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	691b      	ldr	r3, [r3, #16]
 8001db6:	431a      	orrs	r2, r3
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	695b      	ldr	r3, [r3, #20]
 8001dbc:	431a      	orrs	r2, r3
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc2:	431a      	orrs	r2, r3
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	430a      	orrs	r2, r1
 8001dca:	601a      	str	r2, [r3, #0]
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	681a      	ldr	r2, [r3, #0]
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f042 0201 	orr.w	r2, r2, #1
 8001dda:	601a      	str	r2, [r3, #0]
 8001ddc:	f7ff fa7c 	bl	80012d8 <HAL_GetTick>
 8001de0:	60b8      	str	r0, [r7, #8]
 8001de2:	e00c      	b.n	8001dfe <HAL_LCD_Init+0x11e>
 8001de4:	f7ff fa78 	bl	80012d8 <HAL_GetTick>
 8001de8:	4602      	mov	r2, r0
 8001dea:	68bb      	ldr	r3, [r7, #8]
 8001dec:	1ad3      	subs	r3, r2, r3
 8001dee:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001df2:	d904      	bls.n	8001dfe <HAL_LCD_Init+0x11e>
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	2208      	movs	r2, #8
 8001df8:	639a      	str	r2, [r3, #56]	; 0x38
 8001dfa:	2303      	movs	r3, #3
 8001dfc:	e026      	b.n	8001e4c <HAL_LCD_Init+0x16c>
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	689b      	ldr	r3, [r3, #8]
 8001e04:	f003 0301 	and.w	r3, r3, #1
 8001e08:	2b01      	cmp	r3, #1
 8001e0a:	d1eb      	bne.n	8001de4 <HAL_LCD_Init+0x104>
 8001e0c:	f7ff fa64 	bl	80012d8 <HAL_GetTick>
 8001e10:	60b8      	str	r0, [r7, #8]
 8001e12:	e00c      	b.n	8001e2e <HAL_LCD_Init+0x14e>
 8001e14:	f7ff fa60 	bl	80012d8 <HAL_GetTick>
 8001e18:	4602      	mov	r2, r0
 8001e1a:	68bb      	ldr	r3, [r7, #8]
 8001e1c:	1ad3      	subs	r3, r2, r3
 8001e1e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001e22:	d904      	bls.n	8001e2e <HAL_LCD_Init+0x14e>
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	2210      	movs	r2, #16
 8001e28:	639a      	str	r2, [r3, #56]	; 0x38
 8001e2a:	2303      	movs	r3, #3
 8001e2c:	e00e      	b.n	8001e4c <HAL_LCD_Init+0x16c>
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	689b      	ldr	r3, [r3, #8]
 8001e34:	f003 0310 	and.w	r3, r3, #16
 8001e38:	2b10      	cmp	r3, #16
 8001e3a:	d1eb      	bne.n	8001e14 <HAL_LCD_Init+0x134>
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	2200      	movs	r2, #0
 8001e40:	639a      	str	r2, [r3, #56]	; 0x38
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	2201      	movs	r2, #1
 8001e46:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	3710      	adds	r7, #16
 8001e50:	46bd      	mov	sp, r7
 8001e52:	bd80      	pop	{r7, pc}
 8001e54:	fc00000f 	.word	0xfc00000f

08001e58 <LCD_WaitForSynchro>:
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b084      	sub	sp, #16
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	6078      	str	r0, [r7, #4]
 8001e60:	2300      	movs	r3, #0
 8001e62:	60fb      	str	r3, [r7, #12]
 8001e64:	f7ff fa38 	bl	80012d8 <HAL_GetTick>
 8001e68:	60f8      	str	r0, [r7, #12]
 8001e6a:	e00c      	b.n	8001e86 <LCD_WaitForSynchro+0x2e>
 8001e6c:	f7ff fa34 	bl	80012d8 <HAL_GetTick>
 8001e70:	4602      	mov	r2, r0
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	1ad3      	subs	r3, r2, r3
 8001e76:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001e7a:	d904      	bls.n	8001e86 <LCD_WaitForSynchro+0x2e>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	2201      	movs	r2, #1
 8001e80:	639a      	str	r2, [r3, #56]	; 0x38
 8001e82:	2303      	movs	r3, #3
 8001e84:	e007      	b.n	8001e96 <LCD_WaitForSynchro+0x3e>
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	689b      	ldr	r3, [r3, #8]
 8001e8c:	f003 0320 	and.w	r3, r3, #32
 8001e90:	2b20      	cmp	r3, #32
 8001e92:	d1eb      	bne.n	8001e6c <LCD_WaitForSynchro+0x14>
 8001e94:	2300      	movs	r3, #0
 8001e96:	4618      	mov	r0, r3
 8001e98:	3710      	adds	r7, #16
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}
	...

08001ea0 <HAL_RCC_OscConfig>:
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b088      	sub	sp, #32
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d101      	bne.n	8001eb2 <HAL_RCC_OscConfig+0x12>
 8001eae:	2301      	movs	r3, #1
 8001eb0:	e31d      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8001eb2:	4b94      	ldr	r3, [pc, #592]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001eb4:	689b      	ldr	r3, [r3, #8]
 8001eb6:	f003 030c 	and.w	r3, r3, #12
 8001eba:	61bb      	str	r3, [r7, #24]
 8001ebc:	4b91      	ldr	r3, [pc, #580]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001ebe:	689b      	ldr	r3, [r3, #8]
 8001ec0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ec4:	617b      	str	r3, [r7, #20]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f003 0301 	and.w	r3, r3, #1
 8001ece:	2b00      	cmp	r3, #0
 8001ed0:	d07b      	beq.n	8001fca <HAL_RCC_OscConfig+0x12a>
 8001ed2:	69bb      	ldr	r3, [r7, #24]
 8001ed4:	2b08      	cmp	r3, #8
 8001ed6:	d006      	beq.n	8001ee6 <HAL_RCC_OscConfig+0x46>
 8001ed8:	69bb      	ldr	r3, [r7, #24]
 8001eda:	2b0c      	cmp	r3, #12
 8001edc:	d10f      	bne.n	8001efe <HAL_RCC_OscConfig+0x5e>
 8001ede:	697b      	ldr	r3, [r7, #20]
 8001ee0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ee4:	d10b      	bne.n	8001efe <HAL_RCC_OscConfig+0x5e>
 8001ee6:	4b87      	ldr	r3, [pc, #540]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d06a      	beq.n	8001fc8 <HAL_RCC_OscConfig+0x128>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	685b      	ldr	r3, [r3, #4]
 8001ef6:	2b00      	cmp	r3, #0
 8001ef8:	d166      	bne.n	8001fc8 <HAL_RCC_OscConfig+0x128>
 8001efa:	2301      	movs	r3, #1
 8001efc:	e2f7      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	685b      	ldr	r3, [r3, #4]
 8001f02:	2b01      	cmp	r3, #1
 8001f04:	d106      	bne.n	8001f14 <HAL_RCC_OscConfig+0x74>
 8001f06:	4b7f      	ldr	r3, [pc, #508]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	4a7e      	ldr	r2, [pc, #504]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f0c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f10:	6013      	str	r3, [r2, #0]
 8001f12:	e02d      	b.n	8001f70 <HAL_RCC_OscConfig+0xd0>
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	685b      	ldr	r3, [r3, #4]
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d10c      	bne.n	8001f36 <HAL_RCC_OscConfig+0x96>
 8001f1c:	4b79      	ldr	r3, [pc, #484]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	4a78      	ldr	r2, [pc, #480]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f26:	6013      	str	r3, [r2, #0]
 8001f28:	4b76      	ldr	r3, [pc, #472]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	4a75      	ldr	r2, [pc, #468]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f2e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f32:	6013      	str	r3, [r2, #0]
 8001f34:	e01c      	b.n	8001f70 <HAL_RCC_OscConfig+0xd0>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	685b      	ldr	r3, [r3, #4]
 8001f3a:	2b05      	cmp	r3, #5
 8001f3c:	d10c      	bne.n	8001f58 <HAL_RCC_OscConfig+0xb8>
 8001f3e:	4b71      	ldr	r3, [pc, #452]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	4a70      	ldr	r2, [pc, #448]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f44:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f48:	6013      	str	r3, [r2, #0]
 8001f4a:	4b6e      	ldr	r3, [pc, #440]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	4a6d      	ldr	r2, [pc, #436]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f50:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f54:	6013      	str	r3, [r2, #0]
 8001f56:	e00b      	b.n	8001f70 <HAL_RCC_OscConfig+0xd0>
 8001f58:	4b6a      	ldr	r3, [pc, #424]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	4a69      	ldr	r2, [pc, #420]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f5e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f62:	6013      	str	r3, [r2, #0]
 8001f64:	4b67      	ldr	r3, [pc, #412]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	4a66      	ldr	r2, [pc, #408]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f6a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f6e:	6013      	str	r3, [r2, #0]
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	685b      	ldr	r3, [r3, #4]
 8001f74:	2b00      	cmp	r3, #0
 8001f76:	d013      	beq.n	8001fa0 <HAL_RCC_OscConfig+0x100>
 8001f78:	f7ff f9ae 	bl	80012d8 <HAL_GetTick>
 8001f7c:	6138      	str	r0, [r7, #16]
 8001f7e:	e008      	b.n	8001f92 <HAL_RCC_OscConfig+0xf2>
 8001f80:	f7ff f9aa 	bl	80012d8 <HAL_GetTick>
 8001f84:	4602      	mov	r2, r0
 8001f86:	693b      	ldr	r3, [r7, #16]
 8001f88:	1ad3      	subs	r3, r2, r3
 8001f8a:	2b64      	cmp	r3, #100	; 0x64
 8001f8c:	d901      	bls.n	8001f92 <HAL_RCC_OscConfig+0xf2>
 8001f8e:	2303      	movs	r3, #3
 8001f90:	e2ad      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8001f92:	4b5c      	ldr	r3, [pc, #368]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001f94:	681b      	ldr	r3, [r3, #0]
 8001f96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d0f0      	beq.n	8001f80 <HAL_RCC_OscConfig+0xe0>
 8001f9e:	e014      	b.n	8001fca <HAL_RCC_OscConfig+0x12a>
 8001fa0:	f7ff f99a 	bl	80012d8 <HAL_GetTick>
 8001fa4:	6138      	str	r0, [r7, #16]
 8001fa6:	e008      	b.n	8001fba <HAL_RCC_OscConfig+0x11a>
 8001fa8:	f7ff f996 	bl	80012d8 <HAL_GetTick>
 8001fac:	4602      	mov	r2, r0
 8001fae:	693b      	ldr	r3, [r7, #16]
 8001fb0:	1ad3      	subs	r3, r2, r3
 8001fb2:	2b64      	cmp	r3, #100	; 0x64
 8001fb4:	d901      	bls.n	8001fba <HAL_RCC_OscConfig+0x11a>
 8001fb6:	2303      	movs	r3, #3
 8001fb8:	e299      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8001fba:	4b52      	ldr	r3, [pc, #328]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d1f0      	bne.n	8001fa8 <HAL_RCC_OscConfig+0x108>
 8001fc6:	e000      	b.n	8001fca <HAL_RCC_OscConfig+0x12a>
 8001fc8:	bf00      	nop
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f003 0302 	and.w	r3, r3, #2
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d05a      	beq.n	800208c <HAL_RCC_OscConfig+0x1ec>
 8001fd6:	69bb      	ldr	r3, [r7, #24]
 8001fd8:	2b04      	cmp	r3, #4
 8001fda:	d005      	beq.n	8001fe8 <HAL_RCC_OscConfig+0x148>
 8001fdc:	69bb      	ldr	r3, [r7, #24]
 8001fde:	2b0c      	cmp	r3, #12
 8001fe0:	d119      	bne.n	8002016 <HAL_RCC_OscConfig+0x176>
 8001fe2:	697b      	ldr	r3, [r7, #20]
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d116      	bne.n	8002016 <HAL_RCC_OscConfig+0x176>
 8001fe8:	4b46      	ldr	r3, [pc, #280]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	f003 0302 	and.w	r3, r3, #2
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d005      	beq.n	8002000 <HAL_RCC_OscConfig+0x160>
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	68db      	ldr	r3, [r3, #12]
 8001ff8:	2b01      	cmp	r3, #1
 8001ffa:	d001      	beq.n	8002000 <HAL_RCC_OscConfig+0x160>
 8001ffc:	2301      	movs	r3, #1
 8001ffe:	e276      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002000:	4b40      	ldr	r3, [pc, #256]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8002002:	685b      	ldr	r3, [r3, #4]
 8002004:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	691b      	ldr	r3, [r3, #16]
 800200c:	021b      	lsls	r3, r3, #8
 800200e:	493d      	ldr	r1, [pc, #244]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8002010:	4313      	orrs	r3, r2
 8002012:	604b      	str	r3, [r1, #4]
 8002014:	e03a      	b.n	800208c <HAL_RCC_OscConfig+0x1ec>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	68db      	ldr	r3, [r3, #12]
 800201a:	2b00      	cmp	r3, #0
 800201c:	d020      	beq.n	8002060 <HAL_RCC_OscConfig+0x1c0>
 800201e:	4b3a      	ldr	r3, [pc, #232]	; (8002108 <HAL_RCC_OscConfig+0x268>)
 8002020:	2201      	movs	r2, #1
 8002022:	601a      	str	r2, [r3, #0]
 8002024:	f7ff f958 	bl	80012d8 <HAL_GetTick>
 8002028:	6138      	str	r0, [r7, #16]
 800202a:	e008      	b.n	800203e <HAL_RCC_OscConfig+0x19e>
 800202c:	f7ff f954 	bl	80012d8 <HAL_GetTick>
 8002030:	4602      	mov	r2, r0
 8002032:	693b      	ldr	r3, [r7, #16]
 8002034:	1ad3      	subs	r3, r2, r3
 8002036:	2b02      	cmp	r3, #2
 8002038:	d901      	bls.n	800203e <HAL_RCC_OscConfig+0x19e>
 800203a:	2303      	movs	r3, #3
 800203c:	e257      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 800203e:	4b31      	ldr	r3, [pc, #196]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	f003 0302 	and.w	r3, r3, #2
 8002046:	2b00      	cmp	r3, #0
 8002048:	d0f0      	beq.n	800202c <HAL_RCC_OscConfig+0x18c>
 800204a:	4b2e      	ldr	r3, [pc, #184]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 800204c:	685b      	ldr	r3, [r3, #4]
 800204e:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	691b      	ldr	r3, [r3, #16]
 8002056:	021b      	lsls	r3, r3, #8
 8002058:	492a      	ldr	r1, [pc, #168]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 800205a:	4313      	orrs	r3, r2
 800205c:	604b      	str	r3, [r1, #4]
 800205e:	e015      	b.n	800208c <HAL_RCC_OscConfig+0x1ec>
 8002060:	4b29      	ldr	r3, [pc, #164]	; (8002108 <HAL_RCC_OscConfig+0x268>)
 8002062:	2200      	movs	r2, #0
 8002064:	601a      	str	r2, [r3, #0]
 8002066:	f7ff f937 	bl	80012d8 <HAL_GetTick>
 800206a:	6138      	str	r0, [r7, #16]
 800206c:	e008      	b.n	8002080 <HAL_RCC_OscConfig+0x1e0>
 800206e:	f7ff f933 	bl	80012d8 <HAL_GetTick>
 8002072:	4602      	mov	r2, r0
 8002074:	693b      	ldr	r3, [r7, #16]
 8002076:	1ad3      	subs	r3, r2, r3
 8002078:	2b02      	cmp	r3, #2
 800207a:	d901      	bls.n	8002080 <HAL_RCC_OscConfig+0x1e0>
 800207c:	2303      	movs	r3, #3
 800207e:	e236      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002080:	4b20      	ldr	r3, [pc, #128]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f003 0302 	and.w	r3, r3, #2
 8002088:	2b00      	cmp	r3, #0
 800208a:	d1f0      	bne.n	800206e <HAL_RCC_OscConfig+0x1ce>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	f003 0310 	and.w	r3, r3, #16
 8002094:	2b00      	cmp	r3, #0
 8002096:	f000 80b8 	beq.w	800220a <HAL_RCC_OscConfig+0x36a>
 800209a:	69bb      	ldr	r3, [r7, #24]
 800209c:	2b00      	cmp	r3, #0
 800209e:	d170      	bne.n	8002182 <HAL_RCC_OscConfig+0x2e2>
 80020a0:	4b18      	ldr	r3, [pc, #96]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d005      	beq.n	80020b8 <HAL_RCC_OscConfig+0x218>
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	699b      	ldr	r3, [r3, #24]
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	d101      	bne.n	80020b8 <HAL_RCC_OscConfig+0x218>
 80020b4:	2301      	movs	r3, #1
 80020b6:	e21a      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	6a1a      	ldr	r2, [r3, #32]
 80020bc:	4b11      	ldr	r3, [pc, #68]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020be:	685b      	ldr	r3, [r3, #4]
 80020c0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80020c4:	429a      	cmp	r2, r3
 80020c6:	d921      	bls.n	800210c <HAL_RCC_OscConfig+0x26c>
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	6a1b      	ldr	r3, [r3, #32]
 80020cc:	4618      	mov	r0, r3
 80020ce:	f000 fc7d 	bl	80029cc <RCC_SetFlashLatencyFromMSIRange>
 80020d2:	4603      	mov	r3, r0
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d001      	beq.n	80020dc <HAL_RCC_OscConfig+0x23c>
 80020d8:	2301      	movs	r3, #1
 80020da:	e208      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80020dc:	4b09      	ldr	r3, [pc, #36]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020de:	685b      	ldr	r3, [r3, #4]
 80020e0:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	6a1b      	ldr	r3, [r3, #32]
 80020e8:	4906      	ldr	r1, [pc, #24]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020ea:	4313      	orrs	r3, r2
 80020ec:	604b      	str	r3, [r1, #4]
 80020ee:	4b05      	ldr	r3, [pc, #20]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020f0:	685b      	ldr	r3, [r3, #4]
 80020f2:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	69db      	ldr	r3, [r3, #28]
 80020fa:	061b      	lsls	r3, r3, #24
 80020fc:	4901      	ldr	r1, [pc, #4]	; (8002104 <HAL_RCC_OscConfig+0x264>)
 80020fe:	4313      	orrs	r3, r2
 8002100:	604b      	str	r3, [r1, #4]
 8002102:	e020      	b.n	8002146 <HAL_RCC_OscConfig+0x2a6>
 8002104:	40023800 	.word	0x40023800
 8002108:	42470000 	.word	0x42470000
 800210c:	4b99      	ldr	r3, [pc, #612]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	6a1b      	ldr	r3, [r3, #32]
 8002118:	4996      	ldr	r1, [pc, #600]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800211a:	4313      	orrs	r3, r2
 800211c:	604b      	str	r3, [r1, #4]
 800211e:	4b95      	ldr	r3, [pc, #596]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002120:	685b      	ldr	r3, [r3, #4]
 8002122:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	69db      	ldr	r3, [r3, #28]
 800212a:	061b      	lsls	r3, r3, #24
 800212c:	4991      	ldr	r1, [pc, #580]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800212e:	4313      	orrs	r3, r2
 8002130:	604b      	str	r3, [r1, #4]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	6a1b      	ldr	r3, [r3, #32]
 8002136:	4618      	mov	r0, r3
 8002138:	f000 fc48 	bl	80029cc <RCC_SetFlashLatencyFromMSIRange>
 800213c:	4603      	mov	r3, r0
 800213e:	2b00      	cmp	r3, #0
 8002140:	d001      	beq.n	8002146 <HAL_RCC_OscConfig+0x2a6>
 8002142:	2301      	movs	r3, #1
 8002144:	e1d3      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	6a1b      	ldr	r3, [r3, #32]
 800214a:	0b5b      	lsrs	r3, r3, #13
 800214c:	3301      	adds	r3, #1
 800214e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002152:	fa02 f303 	lsl.w	r3, r2, r3
 8002156:	4a87      	ldr	r2, [pc, #540]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002158:	6892      	ldr	r2, [r2, #8]
 800215a:	0912      	lsrs	r2, r2, #4
 800215c:	f002 020f 	and.w	r2, r2, #15
 8002160:	4985      	ldr	r1, [pc, #532]	; (8002378 <HAL_RCC_OscConfig+0x4d8>)
 8002162:	5c8a      	ldrb	r2, [r1, r2]
 8002164:	40d3      	lsrs	r3, r2
 8002166:	4a85      	ldr	r2, [pc, #532]	; (800237c <HAL_RCC_OscConfig+0x4dc>)
 8002168:	6013      	str	r3, [r2, #0]
 800216a:	4b85      	ldr	r3, [pc, #532]	; (8002380 <HAL_RCC_OscConfig+0x4e0>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	4618      	mov	r0, r3
 8002170:	f7ff f866 	bl	8001240 <HAL_InitTick>
 8002174:	4603      	mov	r3, r0
 8002176:	73fb      	strb	r3, [r7, #15]
 8002178:	7bfb      	ldrb	r3, [r7, #15]
 800217a:	2b00      	cmp	r3, #0
 800217c:	d045      	beq.n	800220a <HAL_RCC_OscConfig+0x36a>
 800217e:	7bfb      	ldrb	r3, [r7, #15]
 8002180:	e1b5      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	699b      	ldr	r3, [r3, #24]
 8002186:	2b00      	cmp	r3, #0
 8002188:	d029      	beq.n	80021de <HAL_RCC_OscConfig+0x33e>
 800218a:	4b7e      	ldr	r3, [pc, #504]	; (8002384 <HAL_RCC_OscConfig+0x4e4>)
 800218c:	2201      	movs	r2, #1
 800218e:	601a      	str	r2, [r3, #0]
 8002190:	f7ff f8a2 	bl	80012d8 <HAL_GetTick>
 8002194:	6138      	str	r0, [r7, #16]
 8002196:	e008      	b.n	80021aa <HAL_RCC_OscConfig+0x30a>
 8002198:	f7ff f89e 	bl	80012d8 <HAL_GetTick>
 800219c:	4602      	mov	r2, r0
 800219e:	693b      	ldr	r3, [r7, #16]
 80021a0:	1ad3      	subs	r3, r2, r3
 80021a2:	2b02      	cmp	r3, #2
 80021a4:	d901      	bls.n	80021aa <HAL_RCC_OscConfig+0x30a>
 80021a6:	2303      	movs	r3, #3
 80021a8:	e1a1      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80021aa:	4b72      	ldr	r3, [pc, #456]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d0f0      	beq.n	8002198 <HAL_RCC_OscConfig+0x2f8>
 80021b6:	4b6f      	ldr	r3, [pc, #444]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80021b8:	685b      	ldr	r3, [r3, #4]
 80021ba:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	6a1b      	ldr	r3, [r3, #32]
 80021c2:	496c      	ldr	r1, [pc, #432]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80021c4:	4313      	orrs	r3, r2
 80021c6:	604b      	str	r3, [r1, #4]
 80021c8:	4b6a      	ldr	r3, [pc, #424]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80021ca:	685b      	ldr	r3, [r3, #4]
 80021cc:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	69db      	ldr	r3, [r3, #28]
 80021d4:	061b      	lsls	r3, r3, #24
 80021d6:	4967      	ldr	r1, [pc, #412]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80021d8:	4313      	orrs	r3, r2
 80021da:	604b      	str	r3, [r1, #4]
 80021dc:	e015      	b.n	800220a <HAL_RCC_OscConfig+0x36a>
 80021de:	4b69      	ldr	r3, [pc, #420]	; (8002384 <HAL_RCC_OscConfig+0x4e4>)
 80021e0:	2200      	movs	r2, #0
 80021e2:	601a      	str	r2, [r3, #0]
 80021e4:	f7ff f878 	bl	80012d8 <HAL_GetTick>
 80021e8:	6138      	str	r0, [r7, #16]
 80021ea:	e008      	b.n	80021fe <HAL_RCC_OscConfig+0x35e>
 80021ec:	f7ff f874 	bl	80012d8 <HAL_GetTick>
 80021f0:	4602      	mov	r2, r0
 80021f2:	693b      	ldr	r3, [r7, #16]
 80021f4:	1ad3      	subs	r3, r2, r3
 80021f6:	2b02      	cmp	r3, #2
 80021f8:	d901      	bls.n	80021fe <HAL_RCC_OscConfig+0x35e>
 80021fa:	2303      	movs	r3, #3
 80021fc:	e177      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80021fe:	4b5d      	ldr	r3, [pc, #372]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002206:	2b00      	cmp	r3, #0
 8002208:	d1f0      	bne.n	80021ec <HAL_RCC_OscConfig+0x34c>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	f003 0308 	and.w	r3, r3, #8
 8002212:	2b00      	cmp	r3, #0
 8002214:	d030      	beq.n	8002278 <HAL_RCC_OscConfig+0x3d8>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	695b      	ldr	r3, [r3, #20]
 800221a:	2b00      	cmp	r3, #0
 800221c:	d016      	beq.n	800224c <HAL_RCC_OscConfig+0x3ac>
 800221e:	4b5a      	ldr	r3, [pc, #360]	; (8002388 <HAL_RCC_OscConfig+0x4e8>)
 8002220:	2201      	movs	r2, #1
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	f7ff f858 	bl	80012d8 <HAL_GetTick>
 8002228:	6138      	str	r0, [r7, #16]
 800222a:	e008      	b.n	800223e <HAL_RCC_OscConfig+0x39e>
 800222c:	f7ff f854 	bl	80012d8 <HAL_GetTick>
 8002230:	4602      	mov	r2, r0
 8002232:	693b      	ldr	r3, [r7, #16]
 8002234:	1ad3      	subs	r3, r2, r3
 8002236:	2b02      	cmp	r3, #2
 8002238:	d901      	bls.n	800223e <HAL_RCC_OscConfig+0x39e>
 800223a:	2303      	movs	r3, #3
 800223c:	e157      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 800223e:	4b4d      	ldr	r3, [pc, #308]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002240:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002242:	f003 0302 	and.w	r3, r3, #2
 8002246:	2b00      	cmp	r3, #0
 8002248:	d0f0      	beq.n	800222c <HAL_RCC_OscConfig+0x38c>
 800224a:	e015      	b.n	8002278 <HAL_RCC_OscConfig+0x3d8>
 800224c:	4b4e      	ldr	r3, [pc, #312]	; (8002388 <HAL_RCC_OscConfig+0x4e8>)
 800224e:	2200      	movs	r2, #0
 8002250:	601a      	str	r2, [r3, #0]
 8002252:	f7ff f841 	bl	80012d8 <HAL_GetTick>
 8002256:	6138      	str	r0, [r7, #16]
 8002258:	e008      	b.n	800226c <HAL_RCC_OscConfig+0x3cc>
 800225a:	f7ff f83d 	bl	80012d8 <HAL_GetTick>
 800225e:	4602      	mov	r2, r0
 8002260:	693b      	ldr	r3, [r7, #16]
 8002262:	1ad3      	subs	r3, r2, r3
 8002264:	2b02      	cmp	r3, #2
 8002266:	d901      	bls.n	800226c <HAL_RCC_OscConfig+0x3cc>
 8002268:	2303      	movs	r3, #3
 800226a:	e140      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 800226c:	4b41      	ldr	r3, [pc, #260]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800226e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002270:	f003 0302 	and.w	r3, r3, #2
 8002274:	2b00      	cmp	r3, #0
 8002276:	d1f0      	bne.n	800225a <HAL_RCC_OscConfig+0x3ba>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f003 0304 	and.w	r3, r3, #4
 8002280:	2b00      	cmp	r3, #0
 8002282:	f000 80b5 	beq.w	80023f0 <HAL_RCC_OscConfig+0x550>
 8002286:	2300      	movs	r3, #0
 8002288:	77fb      	strb	r3, [r7, #31]
 800228a:	4b3a      	ldr	r3, [pc, #232]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800228c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800228e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002292:	2b00      	cmp	r3, #0
 8002294:	d10d      	bne.n	80022b2 <HAL_RCC_OscConfig+0x412>
 8002296:	4b37      	ldr	r3, [pc, #220]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800229a:	4a36      	ldr	r2, [pc, #216]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800229c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80022a0:	6253      	str	r3, [r2, #36]	; 0x24
 80022a2:	4b34      	ldr	r3, [pc, #208]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80022a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80022aa:	60bb      	str	r3, [r7, #8]
 80022ac:	68bb      	ldr	r3, [r7, #8]
 80022ae:	2301      	movs	r3, #1
 80022b0:	77fb      	strb	r3, [r7, #31]
 80022b2:	4b36      	ldr	r3, [pc, #216]	; (800238c <HAL_RCC_OscConfig+0x4ec>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d118      	bne.n	80022f0 <HAL_RCC_OscConfig+0x450>
 80022be:	4b33      	ldr	r3, [pc, #204]	; (800238c <HAL_RCC_OscConfig+0x4ec>)
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	4a32      	ldr	r2, [pc, #200]	; (800238c <HAL_RCC_OscConfig+0x4ec>)
 80022c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80022c8:	6013      	str	r3, [r2, #0]
 80022ca:	f7ff f805 	bl	80012d8 <HAL_GetTick>
 80022ce:	6138      	str	r0, [r7, #16]
 80022d0:	e008      	b.n	80022e4 <HAL_RCC_OscConfig+0x444>
 80022d2:	f7ff f801 	bl	80012d8 <HAL_GetTick>
 80022d6:	4602      	mov	r2, r0
 80022d8:	693b      	ldr	r3, [r7, #16]
 80022da:	1ad3      	subs	r3, r2, r3
 80022dc:	2b64      	cmp	r3, #100	; 0x64
 80022de:	d901      	bls.n	80022e4 <HAL_RCC_OscConfig+0x444>
 80022e0:	2303      	movs	r3, #3
 80022e2:	e104      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80022e4:	4b29      	ldr	r3, [pc, #164]	; (800238c <HAL_RCC_OscConfig+0x4ec>)
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80022ec:	2b00      	cmp	r3, #0
 80022ee:	d0f0      	beq.n	80022d2 <HAL_RCC_OscConfig+0x432>
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	689b      	ldr	r3, [r3, #8]
 80022f4:	2b01      	cmp	r3, #1
 80022f6:	d106      	bne.n	8002306 <HAL_RCC_OscConfig+0x466>
 80022f8:	4b1e      	ldr	r3, [pc, #120]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80022fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80022fc:	4a1d      	ldr	r2, [pc, #116]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 80022fe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002302:	6353      	str	r3, [r2, #52]	; 0x34
 8002304:	e02d      	b.n	8002362 <HAL_RCC_OscConfig+0x4c2>
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	689b      	ldr	r3, [r3, #8]
 800230a:	2b00      	cmp	r3, #0
 800230c:	d10c      	bne.n	8002328 <HAL_RCC_OscConfig+0x488>
 800230e:	4b19      	ldr	r3, [pc, #100]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002310:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002312:	4a18      	ldr	r2, [pc, #96]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002314:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002318:	6353      	str	r3, [r2, #52]	; 0x34
 800231a:	4b16      	ldr	r3, [pc, #88]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800231c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800231e:	4a15      	ldr	r2, [pc, #84]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002320:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002324:	6353      	str	r3, [r2, #52]	; 0x34
 8002326:	e01c      	b.n	8002362 <HAL_RCC_OscConfig+0x4c2>
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	689b      	ldr	r3, [r3, #8]
 800232c:	2b05      	cmp	r3, #5
 800232e:	d10c      	bne.n	800234a <HAL_RCC_OscConfig+0x4aa>
 8002330:	4b10      	ldr	r3, [pc, #64]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002332:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002334:	4a0f      	ldr	r2, [pc, #60]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002336:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800233a:	6353      	str	r3, [r2, #52]	; 0x34
 800233c:	4b0d      	ldr	r3, [pc, #52]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800233e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002340:	4a0c      	ldr	r2, [pc, #48]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002342:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002346:	6353      	str	r3, [r2, #52]	; 0x34
 8002348:	e00b      	b.n	8002362 <HAL_RCC_OscConfig+0x4c2>
 800234a:	4b0a      	ldr	r3, [pc, #40]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800234c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800234e:	4a09      	ldr	r2, [pc, #36]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002350:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002354:	6353      	str	r3, [r2, #52]	; 0x34
 8002356:	4b07      	ldr	r3, [pc, #28]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 8002358:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800235a:	4a06      	ldr	r2, [pc, #24]	; (8002374 <HAL_RCC_OscConfig+0x4d4>)
 800235c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002360:	6353      	str	r3, [r2, #52]	; 0x34
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	689b      	ldr	r3, [r3, #8]
 8002366:	2b00      	cmp	r3, #0
 8002368:	d024      	beq.n	80023b4 <HAL_RCC_OscConfig+0x514>
 800236a:	f7fe ffb5 	bl	80012d8 <HAL_GetTick>
 800236e:	6138      	str	r0, [r7, #16]
 8002370:	e019      	b.n	80023a6 <HAL_RCC_OscConfig+0x506>
 8002372:	bf00      	nop
 8002374:	40023800 	.word	0x40023800
 8002378:	08003744 	.word	0x08003744
 800237c:	20000000 	.word	0x20000000
 8002380:	20000004 	.word	0x20000004
 8002384:	42470020 	.word	0x42470020
 8002388:	42470680 	.word	0x42470680
 800238c:	40007000 	.word	0x40007000
 8002390:	f7fe ffa2 	bl	80012d8 <HAL_GetTick>
 8002394:	4602      	mov	r2, r0
 8002396:	693b      	ldr	r3, [r7, #16]
 8002398:	1ad3      	subs	r3, r2, r3
 800239a:	f241 3288 	movw	r2, #5000	; 0x1388
 800239e:	4293      	cmp	r3, r2
 80023a0:	d901      	bls.n	80023a6 <HAL_RCC_OscConfig+0x506>
 80023a2:	2303      	movs	r3, #3
 80023a4:	e0a3      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80023a6:	4b54      	ldr	r3, [pc, #336]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80023a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80023aa:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	d0ee      	beq.n	8002390 <HAL_RCC_OscConfig+0x4f0>
 80023b2:	e014      	b.n	80023de <HAL_RCC_OscConfig+0x53e>
 80023b4:	f7fe ff90 	bl	80012d8 <HAL_GetTick>
 80023b8:	6138      	str	r0, [r7, #16]
 80023ba:	e00a      	b.n	80023d2 <HAL_RCC_OscConfig+0x532>
 80023bc:	f7fe ff8c 	bl	80012d8 <HAL_GetTick>
 80023c0:	4602      	mov	r2, r0
 80023c2:	693b      	ldr	r3, [r7, #16]
 80023c4:	1ad3      	subs	r3, r2, r3
 80023c6:	f241 3288 	movw	r2, #5000	; 0x1388
 80023ca:	4293      	cmp	r3, r2
 80023cc:	d901      	bls.n	80023d2 <HAL_RCC_OscConfig+0x532>
 80023ce:	2303      	movs	r3, #3
 80023d0:	e08d      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80023d2:	4b49      	ldr	r3, [pc, #292]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80023d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80023d6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d1ee      	bne.n	80023bc <HAL_RCC_OscConfig+0x51c>
 80023de:	7ffb      	ldrb	r3, [r7, #31]
 80023e0:	2b01      	cmp	r3, #1
 80023e2:	d105      	bne.n	80023f0 <HAL_RCC_OscConfig+0x550>
 80023e4:	4b44      	ldr	r3, [pc, #272]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80023e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023e8:	4a43      	ldr	r2, [pc, #268]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80023ea:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80023ee:	6253      	str	r3, [r2, #36]	; 0x24
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023f4:	2b00      	cmp	r3, #0
 80023f6:	d079      	beq.n	80024ec <HAL_RCC_OscConfig+0x64c>
 80023f8:	69bb      	ldr	r3, [r7, #24]
 80023fa:	2b0c      	cmp	r3, #12
 80023fc:	d056      	beq.n	80024ac <HAL_RCC_OscConfig+0x60c>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002402:	2b02      	cmp	r3, #2
 8002404:	d13b      	bne.n	800247e <HAL_RCC_OscConfig+0x5de>
 8002406:	4b3d      	ldr	r3, [pc, #244]	; (80024fc <HAL_RCC_OscConfig+0x65c>)
 8002408:	2200      	movs	r2, #0
 800240a:	601a      	str	r2, [r3, #0]
 800240c:	f7fe ff64 	bl	80012d8 <HAL_GetTick>
 8002410:	6138      	str	r0, [r7, #16]
 8002412:	e008      	b.n	8002426 <HAL_RCC_OscConfig+0x586>
 8002414:	f7fe ff60 	bl	80012d8 <HAL_GetTick>
 8002418:	4602      	mov	r2, r0
 800241a:	693b      	ldr	r3, [r7, #16]
 800241c:	1ad3      	subs	r3, r2, r3
 800241e:	2b02      	cmp	r3, #2
 8002420:	d901      	bls.n	8002426 <HAL_RCC_OscConfig+0x586>
 8002422:	2303      	movs	r3, #3
 8002424:	e063      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002426:	4b34      	ldr	r3, [pc, #208]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800242e:	2b00      	cmp	r3, #0
 8002430:	d1f0      	bne.n	8002414 <HAL_RCC_OscConfig+0x574>
 8002432:	4b31      	ldr	r3, [pc, #196]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 8002434:	689b      	ldr	r3, [r3, #8]
 8002436:	f423 027d 	bic.w	r2, r3, #16580608	; 0xfd0000
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002442:	4319      	orrs	r1, r3
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002448:	430b      	orrs	r3, r1
 800244a:	492b      	ldr	r1, [pc, #172]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 800244c:	4313      	orrs	r3, r2
 800244e:	608b      	str	r3, [r1, #8]
 8002450:	4b2a      	ldr	r3, [pc, #168]	; (80024fc <HAL_RCC_OscConfig+0x65c>)
 8002452:	2201      	movs	r2, #1
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	f7fe ff3f 	bl	80012d8 <HAL_GetTick>
 800245a:	6138      	str	r0, [r7, #16]
 800245c:	e008      	b.n	8002470 <HAL_RCC_OscConfig+0x5d0>
 800245e:	f7fe ff3b 	bl	80012d8 <HAL_GetTick>
 8002462:	4602      	mov	r2, r0
 8002464:	693b      	ldr	r3, [r7, #16]
 8002466:	1ad3      	subs	r3, r2, r3
 8002468:	2b02      	cmp	r3, #2
 800246a:	d901      	bls.n	8002470 <HAL_RCC_OscConfig+0x5d0>
 800246c:	2303      	movs	r3, #3
 800246e:	e03e      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 8002470:	4b21      	ldr	r3, [pc, #132]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002478:	2b00      	cmp	r3, #0
 800247a:	d0f0      	beq.n	800245e <HAL_RCC_OscConfig+0x5be>
 800247c:	e036      	b.n	80024ec <HAL_RCC_OscConfig+0x64c>
 800247e:	4b1f      	ldr	r3, [pc, #124]	; (80024fc <HAL_RCC_OscConfig+0x65c>)
 8002480:	2200      	movs	r2, #0
 8002482:	601a      	str	r2, [r3, #0]
 8002484:	f7fe ff28 	bl	80012d8 <HAL_GetTick>
 8002488:	6138      	str	r0, [r7, #16]
 800248a:	e008      	b.n	800249e <HAL_RCC_OscConfig+0x5fe>
 800248c:	f7fe ff24 	bl	80012d8 <HAL_GetTick>
 8002490:	4602      	mov	r2, r0
 8002492:	693b      	ldr	r3, [r7, #16]
 8002494:	1ad3      	subs	r3, r2, r3
 8002496:	2b02      	cmp	r3, #2
 8002498:	d901      	bls.n	800249e <HAL_RCC_OscConfig+0x5fe>
 800249a:	2303      	movs	r3, #3
 800249c:	e027      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 800249e:	4b16      	ldr	r3, [pc, #88]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024a6:	2b00      	cmp	r3, #0
 80024a8:	d1f0      	bne.n	800248c <HAL_RCC_OscConfig+0x5ec>
 80024aa:	e01f      	b.n	80024ec <HAL_RCC_OscConfig+0x64c>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024b0:	2b01      	cmp	r3, #1
 80024b2:	d101      	bne.n	80024b8 <HAL_RCC_OscConfig+0x618>
 80024b4:	2301      	movs	r3, #1
 80024b6:	e01a      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80024b8:	4b0f      	ldr	r3, [pc, #60]	; (80024f8 <HAL_RCC_OscConfig+0x658>)
 80024ba:	689b      	ldr	r3, [r3, #8]
 80024bc:	617b      	str	r3, [r7, #20]
 80024be:	697b      	ldr	r3, [r7, #20]
 80024c0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d10d      	bne.n	80024e8 <HAL_RCC_OscConfig+0x648>
 80024cc:	697b      	ldr	r3, [r7, #20]
 80024ce:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024d6:	429a      	cmp	r2, r3
 80024d8:	d106      	bne.n	80024e8 <HAL_RCC_OscConfig+0x648>
 80024da:	697b      	ldr	r3, [r7, #20]
 80024dc:	f403 0240 	and.w	r2, r3, #12582912	; 0xc00000
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024e4:	429a      	cmp	r2, r3
 80024e6:	d001      	beq.n	80024ec <HAL_RCC_OscConfig+0x64c>
 80024e8:	2301      	movs	r3, #1
 80024ea:	e000      	b.n	80024ee <HAL_RCC_OscConfig+0x64e>
 80024ec:	2300      	movs	r3, #0
 80024ee:	4618      	mov	r0, r3
 80024f0:	3720      	adds	r7, #32
 80024f2:	46bd      	mov	sp, r7
 80024f4:	bd80      	pop	{r7, pc}
 80024f6:	bf00      	nop
 80024f8:	40023800 	.word	0x40023800
 80024fc:	42470060 	.word	0x42470060

08002500 <HAL_RCC_ClockConfig>:
 8002500:	b580      	push	{r7, lr}
 8002502:	b084      	sub	sp, #16
 8002504:	af00      	add	r7, sp, #0
 8002506:	6078      	str	r0, [r7, #4]
 8002508:	6039      	str	r1, [r7, #0]
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	2b00      	cmp	r3, #0
 800250e:	d101      	bne.n	8002514 <HAL_RCC_ClockConfig+0x14>
 8002510:	2301      	movs	r3, #1
 8002512:	e11a      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 8002514:	4b8f      	ldr	r3, [pc, #572]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 8002516:	681b      	ldr	r3, [r3, #0]
 8002518:	f003 0301 	and.w	r3, r3, #1
 800251c:	683a      	ldr	r2, [r7, #0]
 800251e:	429a      	cmp	r2, r3
 8002520:	d919      	bls.n	8002556 <HAL_RCC_ClockConfig+0x56>
 8002522:	683b      	ldr	r3, [r7, #0]
 8002524:	2b01      	cmp	r3, #1
 8002526:	d105      	bne.n	8002534 <HAL_RCC_ClockConfig+0x34>
 8002528:	4b8a      	ldr	r3, [pc, #552]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	4a89      	ldr	r2, [pc, #548]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 800252e:	f043 0304 	orr.w	r3, r3, #4
 8002532:	6013      	str	r3, [r2, #0]
 8002534:	4b87      	ldr	r3, [pc, #540]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	f023 0201 	bic.w	r2, r3, #1
 800253c:	4985      	ldr	r1, [pc, #532]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 800253e:	683b      	ldr	r3, [r7, #0]
 8002540:	4313      	orrs	r3, r2
 8002542:	600b      	str	r3, [r1, #0]
 8002544:	4b83      	ldr	r3, [pc, #524]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	f003 0301 	and.w	r3, r3, #1
 800254c:	683a      	ldr	r2, [r7, #0]
 800254e:	429a      	cmp	r2, r3
 8002550:	d001      	beq.n	8002556 <HAL_RCC_ClockConfig+0x56>
 8002552:	2301      	movs	r3, #1
 8002554:	e0f9      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	f003 0302 	and.w	r3, r3, #2
 800255e:	2b00      	cmp	r3, #0
 8002560:	d008      	beq.n	8002574 <HAL_RCC_ClockConfig+0x74>
 8002562:	4b7d      	ldr	r3, [pc, #500]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002564:	689b      	ldr	r3, [r3, #8]
 8002566:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	689b      	ldr	r3, [r3, #8]
 800256e:	497a      	ldr	r1, [pc, #488]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002570:	4313      	orrs	r3, r2
 8002572:	608b      	str	r3, [r1, #8]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	f003 0301 	and.w	r3, r3, #1
 800257c:	2b00      	cmp	r3, #0
 800257e:	f000 808e 	beq.w	800269e <HAL_RCC_ClockConfig+0x19e>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	685b      	ldr	r3, [r3, #4]
 8002586:	2b02      	cmp	r3, #2
 8002588:	d107      	bne.n	800259a <HAL_RCC_ClockConfig+0x9a>
 800258a:	4b73      	ldr	r3, [pc, #460]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002592:	2b00      	cmp	r3, #0
 8002594:	d121      	bne.n	80025da <HAL_RCC_ClockConfig+0xda>
 8002596:	2301      	movs	r3, #1
 8002598:	e0d7      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	685b      	ldr	r3, [r3, #4]
 800259e:	2b03      	cmp	r3, #3
 80025a0:	d107      	bne.n	80025b2 <HAL_RCC_ClockConfig+0xb2>
 80025a2:	4b6d      	ldr	r3, [pc, #436]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d115      	bne.n	80025da <HAL_RCC_ClockConfig+0xda>
 80025ae:	2301      	movs	r3, #1
 80025b0:	e0cb      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	685b      	ldr	r3, [r3, #4]
 80025b6:	2b01      	cmp	r3, #1
 80025b8:	d107      	bne.n	80025ca <HAL_RCC_ClockConfig+0xca>
 80025ba:	4b67      	ldr	r3, [pc, #412]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	f003 0302 	and.w	r3, r3, #2
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d109      	bne.n	80025da <HAL_RCC_ClockConfig+0xda>
 80025c6:	2301      	movs	r3, #1
 80025c8:	e0bf      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 80025ca:	4b63      	ldr	r3, [pc, #396]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d101      	bne.n	80025da <HAL_RCC_ClockConfig+0xda>
 80025d6:	2301      	movs	r3, #1
 80025d8:	e0b7      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 80025da:	4b5f      	ldr	r3, [pc, #380]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80025dc:	689b      	ldr	r3, [r3, #8]
 80025de:	f023 0203 	bic.w	r2, r3, #3
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	685b      	ldr	r3, [r3, #4]
 80025e6:	495c      	ldr	r1, [pc, #368]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80025e8:	4313      	orrs	r3, r2
 80025ea:	608b      	str	r3, [r1, #8]
 80025ec:	f7fe fe74 	bl	80012d8 <HAL_GetTick>
 80025f0:	60f8      	str	r0, [r7, #12]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	685b      	ldr	r3, [r3, #4]
 80025f6:	2b02      	cmp	r3, #2
 80025f8:	d112      	bne.n	8002620 <HAL_RCC_ClockConfig+0x120>
 80025fa:	e00a      	b.n	8002612 <HAL_RCC_ClockConfig+0x112>
 80025fc:	f7fe fe6c 	bl	80012d8 <HAL_GetTick>
 8002600:	4602      	mov	r2, r0
 8002602:	68fb      	ldr	r3, [r7, #12]
 8002604:	1ad3      	subs	r3, r2, r3
 8002606:	f241 3288 	movw	r2, #5000	; 0x1388
 800260a:	4293      	cmp	r3, r2
 800260c:	d901      	bls.n	8002612 <HAL_RCC_ClockConfig+0x112>
 800260e:	2303      	movs	r3, #3
 8002610:	e09b      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 8002612:	4b51      	ldr	r3, [pc, #324]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002614:	689b      	ldr	r3, [r3, #8]
 8002616:	f003 030c 	and.w	r3, r3, #12
 800261a:	2b08      	cmp	r3, #8
 800261c:	d1ee      	bne.n	80025fc <HAL_RCC_ClockConfig+0xfc>
 800261e:	e03e      	b.n	800269e <HAL_RCC_ClockConfig+0x19e>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	685b      	ldr	r3, [r3, #4]
 8002624:	2b03      	cmp	r3, #3
 8002626:	d112      	bne.n	800264e <HAL_RCC_ClockConfig+0x14e>
 8002628:	e00a      	b.n	8002640 <HAL_RCC_ClockConfig+0x140>
 800262a:	f7fe fe55 	bl	80012d8 <HAL_GetTick>
 800262e:	4602      	mov	r2, r0
 8002630:	68fb      	ldr	r3, [r7, #12]
 8002632:	1ad3      	subs	r3, r2, r3
 8002634:	f241 3288 	movw	r2, #5000	; 0x1388
 8002638:	4293      	cmp	r3, r2
 800263a:	d901      	bls.n	8002640 <HAL_RCC_ClockConfig+0x140>
 800263c:	2303      	movs	r3, #3
 800263e:	e084      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 8002640:	4b45      	ldr	r3, [pc, #276]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002642:	689b      	ldr	r3, [r3, #8]
 8002644:	f003 030c 	and.w	r3, r3, #12
 8002648:	2b0c      	cmp	r3, #12
 800264a:	d1ee      	bne.n	800262a <HAL_RCC_ClockConfig+0x12a>
 800264c:	e027      	b.n	800269e <HAL_RCC_ClockConfig+0x19e>
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	685b      	ldr	r3, [r3, #4]
 8002652:	2b01      	cmp	r3, #1
 8002654:	d11d      	bne.n	8002692 <HAL_RCC_ClockConfig+0x192>
 8002656:	e00a      	b.n	800266e <HAL_RCC_ClockConfig+0x16e>
 8002658:	f7fe fe3e 	bl	80012d8 <HAL_GetTick>
 800265c:	4602      	mov	r2, r0
 800265e:	68fb      	ldr	r3, [r7, #12]
 8002660:	1ad3      	subs	r3, r2, r3
 8002662:	f241 3288 	movw	r2, #5000	; 0x1388
 8002666:	4293      	cmp	r3, r2
 8002668:	d901      	bls.n	800266e <HAL_RCC_ClockConfig+0x16e>
 800266a:	2303      	movs	r3, #3
 800266c:	e06d      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 800266e:	4b3a      	ldr	r3, [pc, #232]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002670:	689b      	ldr	r3, [r3, #8]
 8002672:	f003 030c 	and.w	r3, r3, #12
 8002676:	2b04      	cmp	r3, #4
 8002678:	d1ee      	bne.n	8002658 <HAL_RCC_ClockConfig+0x158>
 800267a:	e010      	b.n	800269e <HAL_RCC_ClockConfig+0x19e>
 800267c:	f7fe fe2c 	bl	80012d8 <HAL_GetTick>
 8002680:	4602      	mov	r2, r0
 8002682:	68fb      	ldr	r3, [r7, #12]
 8002684:	1ad3      	subs	r3, r2, r3
 8002686:	f241 3288 	movw	r2, #5000	; 0x1388
 800268a:	4293      	cmp	r3, r2
 800268c:	d901      	bls.n	8002692 <HAL_RCC_ClockConfig+0x192>
 800268e:	2303      	movs	r3, #3
 8002690:	e05b      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 8002692:	4b31      	ldr	r3, [pc, #196]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002694:	689b      	ldr	r3, [r3, #8]
 8002696:	f003 030c 	and.w	r3, r3, #12
 800269a:	2b00      	cmp	r3, #0
 800269c:	d1ee      	bne.n	800267c <HAL_RCC_ClockConfig+0x17c>
 800269e:	4b2d      	ldr	r3, [pc, #180]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f003 0301 	and.w	r3, r3, #1
 80026a6:	683a      	ldr	r2, [r7, #0]
 80026a8:	429a      	cmp	r2, r3
 80026aa:	d219      	bcs.n	80026e0 <HAL_RCC_ClockConfig+0x1e0>
 80026ac:	683b      	ldr	r3, [r7, #0]
 80026ae:	2b01      	cmp	r3, #1
 80026b0:	d105      	bne.n	80026be <HAL_RCC_ClockConfig+0x1be>
 80026b2:	4b28      	ldr	r3, [pc, #160]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	4a27      	ldr	r2, [pc, #156]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026b8:	f043 0304 	orr.w	r3, r3, #4
 80026bc:	6013      	str	r3, [r2, #0]
 80026be:	4b25      	ldr	r3, [pc, #148]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	f023 0201 	bic.w	r2, r3, #1
 80026c6:	4923      	ldr	r1, [pc, #140]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026c8:	683b      	ldr	r3, [r7, #0]
 80026ca:	4313      	orrs	r3, r2
 80026cc:	600b      	str	r3, [r1, #0]
 80026ce:	4b21      	ldr	r3, [pc, #132]	; (8002754 <HAL_RCC_ClockConfig+0x254>)
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	f003 0301 	and.w	r3, r3, #1
 80026d6:	683a      	ldr	r2, [r7, #0]
 80026d8:	429a      	cmp	r2, r3
 80026da:	d001      	beq.n	80026e0 <HAL_RCC_ClockConfig+0x1e0>
 80026dc:	2301      	movs	r3, #1
 80026de:	e034      	b.n	800274a <HAL_RCC_ClockConfig+0x24a>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	f003 0304 	and.w	r3, r3, #4
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	d008      	beq.n	80026fe <HAL_RCC_ClockConfig+0x1fe>
 80026ec:	4b1a      	ldr	r3, [pc, #104]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80026ee:	689b      	ldr	r3, [r3, #8]
 80026f0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	68db      	ldr	r3, [r3, #12]
 80026f8:	4917      	ldr	r1, [pc, #92]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 80026fa:	4313      	orrs	r3, r2
 80026fc:	608b      	str	r3, [r1, #8]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	f003 0308 	and.w	r3, r3, #8
 8002706:	2b00      	cmp	r3, #0
 8002708:	d009      	beq.n	800271e <HAL_RCC_ClockConfig+0x21e>
 800270a:	4b13      	ldr	r3, [pc, #76]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 800270c:	689b      	ldr	r3, [r3, #8]
 800270e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	691b      	ldr	r3, [r3, #16]
 8002716:	00db      	lsls	r3, r3, #3
 8002718:	490f      	ldr	r1, [pc, #60]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 800271a:	4313      	orrs	r3, r2
 800271c:	608b      	str	r3, [r1, #8]
 800271e:	f000 f823 	bl	8002768 <HAL_RCC_GetSysClockFreq>
 8002722:	4602      	mov	r2, r0
 8002724:	4b0c      	ldr	r3, [pc, #48]	; (8002758 <HAL_RCC_ClockConfig+0x258>)
 8002726:	689b      	ldr	r3, [r3, #8]
 8002728:	091b      	lsrs	r3, r3, #4
 800272a:	f003 030f 	and.w	r3, r3, #15
 800272e:	490b      	ldr	r1, [pc, #44]	; (800275c <HAL_RCC_ClockConfig+0x25c>)
 8002730:	5ccb      	ldrb	r3, [r1, r3]
 8002732:	fa22 f303 	lsr.w	r3, r2, r3
 8002736:	4a0a      	ldr	r2, [pc, #40]	; (8002760 <HAL_RCC_ClockConfig+0x260>)
 8002738:	6013      	str	r3, [r2, #0]
 800273a:	4b0a      	ldr	r3, [pc, #40]	; (8002764 <HAL_RCC_ClockConfig+0x264>)
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	4618      	mov	r0, r3
 8002740:	f7fe fd7e 	bl	8001240 <HAL_InitTick>
 8002744:	4603      	mov	r3, r0
 8002746:	72fb      	strb	r3, [r7, #11]
 8002748:	7afb      	ldrb	r3, [r7, #11]
 800274a:	4618      	mov	r0, r3
 800274c:	3710      	adds	r7, #16
 800274e:	46bd      	mov	sp, r7
 8002750:	bd80      	pop	{r7, pc}
 8002752:	bf00      	nop
 8002754:	40023c00 	.word	0x40023c00
 8002758:	40023800 	.word	0x40023800
 800275c:	08003744 	.word	0x08003744
 8002760:	20000000 	.word	0x20000000
 8002764:	20000004 	.word	0x20000004

08002768 <HAL_RCC_GetSysClockFreq>:
 8002768:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800276c:	b092      	sub	sp, #72	; 0x48
 800276e:	af00      	add	r7, sp, #0
 8002770:	4b79      	ldr	r3, [pc, #484]	; (8002958 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8002772:	689b      	ldr	r3, [r3, #8]
 8002774:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002776:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002778:	f003 030c 	and.w	r3, r3, #12
 800277c:	2b0c      	cmp	r3, #12
 800277e:	d00d      	beq.n	800279c <HAL_RCC_GetSysClockFreq+0x34>
 8002780:	2b0c      	cmp	r3, #12
 8002782:	f200 80d5 	bhi.w	8002930 <HAL_RCC_GetSysClockFreq+0x1c8>
 8002786:	2b04      	cmp	r3, #4
 8002788:	d002      	beq.n	8002790 <HAL_RCC_GetSysClockFreq+0x28>
 800278a:	2b08      	cmp	r3, #8
 800278c:	d003      	beq.n	8002796 <HAL_RCC_GetSysClockFreq+0x2e>
 800278e:	e0cf      	b.n	8002930 <HAL_RCC_GetSysClockFreq+0x1c8>
 8002790:	4b72      	ldr	r3, [pc, #456]	; (800295c <HAL_RCC_GetSysClockFreq+0x1f4>)
 8002792:	643b      	str	r3, [r7, #64]	; 0x40
 8002794:	e0da      	b.n	800294c <HAL_RCC_GetSysClockFreq+0x1e4>
 8002796:	4b72      	ldr	r3, [pc, #456]	; (8002960 <HAL_RCC_GetSysClockFreq+0x1f8>)
 8002798:	643b      	str	r3, [r7, #64]	; 0x40
 800279a:	e0d7      	b.n	800294c <HAL_RCC_GetSysClockFreq+0x1e4>
 800279c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800279e:	0c9b      	lsrs	r3, r3, #18
 80027a0:	f003 020f 	and.w	r2, r3, #15
 80027a4:	4b6f      	ldr	r3, [pc, #444]	; (8002964 <HAL_RCC_GetSysClockFreq+0x1fc>)
 80027a6:	5c9b      	ldrb	r3, [r3, r2]
 80027a8:	63bb      	str	r3, [r7, #56]	; 0x38
 80027aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80027ac:	0d9b      	lsrs	r3, r3, #22
 80027ae:	f003 0303 	and.w	r3, r3, #3
 80027b2:	3301      	adds	r3, #1
 80027b4:	637b      	str	r3, [r7, #52]	; 0x34
 80027b6:	4b68      	ldr	r3, [pc, #416]	; (8002958 <HAL_RCC_GetSysClockFreq+0x1f0>)
 80027b8:	689b      	ldr	r3, [r3, #8]
 80027ba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80027be:	2b00      	cmp	r3, #0
 80027c0:	d05d      	beq.n	800287e <HAL_RCC_GetSysClockFreq+0x116>
 80027c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80027c4:	2200      	movs	r2, #0
 80027c6:	4618      	mov	r0, r3
 80027c8:	4611      	mov	r1, r2
 80027ca:	4604      	mov	r4, r0
 80027cc:	460d      	mov	r5, r1
 80027ce:	4622      	mov	r2, r4
 80027d0:	462b      	mov	r3, r5
 80027d2:	f04f 0000 	mov.w	r0, #0
 80027d6:	f04f 0100 	mov.w	r1, #0
 80027da:	0159      	lsls	r1, r3, #5
 80027dc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80027e0:	0150      	lsls	r0, r2, #5
 80027e2:	4602      	mov	r2, r0
 80027e4:	460b      	mov	r3, r1
 80027e6:	4621      	mov	r1, r4
 80027e8:	1a51      	subs	r1, r2, r1
 80027ea:	6139      	str	r1, [r7, #16]
 80027ec:	4629      	mov	r1, r5
 80027ee:	eb63 0301 	sbc.w	r3, r3, r1
 80027f2:	617b      	str	r3, [r7, #20]
 80027f4:	f04f 0200 	mov.w	r2, #0
 80027f8:	f04f 0300 	mov.w	r3, #0
 80027fc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002800:	4659      	mov	r1, fp
 8002802:	018b      	lsls	r3, r1, #6
 8002804:	4651      	mov	r1, sl
 8002806:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800280a:	4651      	mov	r1, sl
 800280c:	018a      	lsls	r2, r1, #6
 800280e:	46d4      	mov	ip, sl
 8002810:	ebb2 080c 	subs.w	r8, r2, ip
 8002814:	4659      	mov	r1, fp
 8002816:	eb63 0901 	sbc.w	r9, r3, r1
 800281a:	f04f 0200 	mov.w	r2, #0
 800281e:	f04f 0300 	mov.w	r3, #0
 8002822:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002826:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800282a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800282e:	4690      	mov	r8, r2
 8002830:	4699      	mov	r9, r3
 8002832:	4623      	mov	r3, r4
 8002834:	eb18 0303 	adds.w	r3, r8, r3
 8002838:	60bb      	str	r3, [r7, #8]
 800283a:	462b      	mov	r3, r5
 800283c:	eb49 0303 	adc.w	r3, r9, r3
 8002840:	60fb      	str	r3, [r7, #12]
 8002842:	f04f 0200 	mov.w	r2, #0
 8002846:	f04f 0300 	mov.w	r3, #0
 800284a:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800284e:	4629      	mov	r1, r5
 8002850:	024b      	lsls	r3, r1, #9
 8002852:	4620      	mov	r0, r4
 8002854:	4629      	mov	r1, r5
 8002856:	4604      	mov	r4, r0
 8002858:	ea43 53d4 	orr.w	r3, r3, r4, lsr #23
 800285c:	4601      	mov	r1, r0
 800285e:	024a      	lsls	r2, r1, #9
 8002860:	4610      	mov	r0, r2
 8002862:	4619      	mov	r1, r3
 8002864:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002866:	2200      	movs	r2, #0
 8002868:	62bb      	str	r3, [r7, #40]	; 0x28
 800286a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800286c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002870:	f7fd fc84 	bl	800017c <__aeabi_uldivmod>
 8002874:	4602      	mov	r2, r0
 8002876:	460b      	mov	r3, r1
 8002878:	4613      	mov	r3, r2
 800287a:	647b      	str	r3, [r7, #68]	; 0x44
 800287c:	e055      	b.n	800292a <HAL_RCC_GetSysClockFreq+0x1c2>
 800287e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002880:	2200      	movs	r2, #0
 8002882:	623b      	str	r3, [r7, #32]
 8002884:	627a      	str	r2, [r7, #36]	; 0x24
 8002886:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800288a:	4642      	mov	r2, r8
 800288c:	464b      	mov	r3, r9
 800288e:	f04f 0000 	mov.w	r0, #0
 8002892:	f04f 0100 	mov.w	r1, #0
 8002896:	0159      	lsls	r1, r3, #5
 8002898:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800289c:	0150      	lsls	r0, r2, #5
 800289e:	4602      	mov	r2, r0
 80028a0:	460b      	mov	r3, r1
 80028a2:	46c4      	mov	ip, r8
 80028a4:	ebb2 0a0c 	subs.w	sl, r2, ip
 80028a8:	4640      	mov	r0, r8
 80028aa:	4649      	mov	r1, r9
 80028ac:	468c      	mov	ip, r1
 80028ae:	eb63 0b0c 	sbc.w	fp, r3, ip
 80028b2:	f04f 0200 	mov.w	r2, #0
 80028b6:	f04f 0300 	mov.w	r3, #0
 80028ba:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80028be:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80028c2:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80028c6:	ebb2 040a 	subs.w	r4, r2, sl
 80028ca:	eb63 050b 	sbc.w	r5, r3, fp
 80028ce:	f04f 0200 	mov.w	r2, #0
 80028d2:	f04f 0300 	mov.w	r3, #0
 80028d6:	00eb      	lsls	r3, r5, #3
 80028d8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80028dc:	00e2      	lsls	r2, r4, #3
 80028de:	4614      	mov	r4, r2
 80028e0:	461d      	mov	r5, r3
 80028e2:	4603      	mov	r3, r0
 80028e4:	18e3      	adds	r3, r4, r3
 80028e6:	603b      	str	r3, [r7, #0]
 80028e8:	460b      	mov	r3, r1
 80028ea:	eb45 0303 	adc.w	r3, r5, r3
 80028ee:	607b      	str	r3, [r7, #4]
 80028f0:	f04f 0200 	mov.w	r2, #0
 80028f4:	f04f 0300 	mov.w	r3, #0
 80028f8:	e9d7 4500 	ldrd	r4, r5, [r7]
 80028fc:	4629      	mov	r1, r5
 80028fe:	028b      	lsls	r3, r1, #10
 8002900:	4620      	mov	r0, r4
 8002902:	4629      	mov	r1, r5
 8002904:	4604      	mov	r4, r0
 8002906:	ea43 5394 	orr.w	r3, r3, r4, lsr #22
 800290a:	4601      	mov	r1, r0
 800290c:	028a      	lsls	r2, r1, #10
 800290e:	4610      	mov	r0, r2
 8002910:	4619      	mov	r1, r3
 8002912:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002914:	2200      	movs	r2, #0
 8002916:	61bb      	str	r3, [r7, #24]
 8002918:	61fa      	str	r2, [r7, #28]
 800291a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800291e:	f7fd fc2d 	bl	800017c <__aeabi_uldivmod>
 8002922:	4602      	mov	r2, r0
 8002924:	460b      	mov	r3, r1
 8002926:	4613      	mov	r3, r2
 8002928:	647b      	str	r3, [r7, #68]	; 0x44
 800292a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800292c:	643b      	str	r3, [r7, #64]	; 0x40
 800292e:	e00d      	b.n	800294c <HAL_RCC_GetSysClockFreq+0x1e4>
 8002930:	4b09      	ldr	r3, [pc, #36]	; (8002958 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8002932:	685b      	ldr	r3, [r3, #4]
 8002934:	0b5b      	lsrs	r3, r3, #13
 8002936:	f003 0307 	and.w	r3, r3, #7
 800293a:	633b      	str	r3, [r7, #48]	; 0x30
 800293c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800293e:	3301      	adds	r3, #1
 8002940:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002944:	fa02 f303 	lsl.w	r3, r2, r3
 8002948:	643b      	str	r3, [r7, #64]	; 0x40
 800294a:	bf00      	nop
 800294c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800294e:	4618      	mov	r0, r3
 8002950:	3748      	adds	r7, #72	; 0x48
 8002952:	46bd      	mov	sp, r7
 8002954:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002958:	40023800 	.word	0x40023800
 800295c:	00f42400 	.word	0x00f42400
 8002960:	007a1200 	.word	0x007a1200
 8002964:	08003738 	.word	0x08003738

08002968 <HAL_RCC_GetHCLKFreq>:
 8002968:	b480      	push	{r7}
 800296a:	af00      	add	r7, sp, #0
 800296c:	4b02      	ldr	r3, [pc, #8]	; (8002978 <HAL_RCC_GetHCLKFreq+0x10>)
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4618      	mov	r0, r3
 8002972:	46bd      	mov	sp, r7
 8002974:	bc80      	pop	{r7}
 8002976:	4770      	bx	lr
 8002978:	20000000 	.word	0x20000000

0800297c <HAL_RCC_GetPCLK1Freq>:
 800297c:	b580      	push	{r7, lr}
 800297e:	af00      	add	r7, sp, #0
 8002980:	f7ff fff2 	bl	8002968 <HAL_RCC_GetHCLKFreq>
 8002984:	4602      	mov	r2, r0
 8002986:	4b05      	ldr	r3, [pc, #20]	; (800299c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002988:	689b      	ldr	r3, [r3, #8]
 800298a:	0a1b      	lsrs	r3, r3, #8
 800298c:	f003 0307 	and.w	r3, r3, #7
 8002990:	4903      	ldr	r1, [pc, #12]	; (80029a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002992:	5ccb      	ldrb	r3, [r1, r3]
 8002994:	fa22 f303 	lsr.w	r3, r2, r3
 8002998:	4618      	mov	r0, r3
 800299a:	bd80      	pop	{r7, pc}
 800299c:	40023800 	.word	0x40023800
 80029a0:	08003754 	.word	0x08003754

080029a4 <HAL_RCC_GetPCLK2Freq>:
 80029a4:	b580      	push	{r7, lr}
 80029a6:	af00      	add	r7, sp, #0
 80029a8:	f7ff ffde 	bl	8002968 <HAL_RCC_GetHCLKFreq>
 80029ac:	4602      	mov	r2, r0
 80029ae:	4b05      	ldr	r3, [pc, #20]	; (80029c4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80029b0:	689b      	ldr	r3, [r3, #8]
 80029b2:	0adb      	lsrs	r3, r3, #11
 80029b4:	f003 0307 	and.w	r3, r3, #7
 80029b8:	4903      	ldr	r1, [pc, #12]	; (80029c8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80029ba:	5ccb      	ldrb	r3, [r1, r3]
 80029bc:	fa22 f303 	lsr.w	r3, r2, r3
 80029c0:	4618      	mov	r0, r3
 80029c2:	bd80      	pop	{r7, pc}
 80029c4:	40023800 	.word	0x40023800
 80029c8:	08003754 	.word	0x08003754

080029cc <RCC_SetFlashLatencyFromMSIRange>:
 80029cc:	b480      	push	{r7}
 80029ce:	b087      	sub	sp, #28
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]
 80029d4:	2300      	movs	r3, #0
 80029d6:	613b      	str	r3, [r7, #16]
 80029d8:	4b29      	ldr	r3, [pc, #164]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80029da:	689b      	ldr	r3, [r3, #8]
 80029dc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d12c      	bne.n	8002a3e <RCC_SetFlashLatencyFromMSIRange+0x72>
 80029e4:	4b26      	ldr	r3, [pc, #152]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80029e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029e8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029ec:	2b00      	cmp	r3, #0
 80029ee:	d005      	beq.n	80029fc <RCC_SetFlashLatencyFromMSIRange+0x30>
 80029f0:	4b24      	ldr	r3, [pc, #144]	; (8002a84 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f403 53c0 	and.w	r3, r3, #6144	; 0x1800
 80029f8:	617b      	str	r3, [r7, #20]
 80029fa:	e016      	b.n	8002a2a <RCC_SetFlashLatencyFromMSIRange+0x5e>
 80029fc:	4b20      	ldr	r3, [pc, #128]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80029fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a00:	4a1f      	ldr	r2, [pc, #124]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8002a02:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002a06:	6253      	str	r3, [r2, #36]	; 0x24
 8002a08:	4b1d      	ldr	r3, [pc, #116]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8002a0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a0c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002a10:	60fb      	str	r3, [r7, #12]
 8002a12:	68fb      	ldr	r3, [r7, #12]
 8002a14:	4b1b      	ldr	r3, [pc, #108]	; (8002a84 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	f403 53c0 	and.w	r3, r3, #6144	; 0x1800
 8002a1c:	617b      	str	r3, [r7, #20]
 8002a1e:	4b18      	ldr	r3, [pc, #96]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8002a20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a22:	4a17      	ldr	r2, [pc, #92]	; (8002a80 <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8002a24:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002a28:	6253      	str	r3, [r2, #36]	; 0x24
 8002a2a:	697b      	ldr	r3, [r7, #20]
 8002a2c:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8002a30:	d105      	bne.n	8002a3e <RCC_SetFlashLatencyFromMSIRange+0x72>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8002a38:	d101      	bne.n	8002a3e <RCC_SetFlashLatencyFromMSIRange+0x72>
 8002a3a:	2301      	movs	r3, #1
 8002a3c:	613b      	str	r3, [r7, #16]
 8002a3e:	693b      	ldr	r3, [r7, #16]
 8002a40:	2b01      	cmp	r3, #1
 8002a42:	d105      	bne.n	8002a50 <RCC_SetFlashLatencyFromMSIRange+0x84>
 8002a44:	4b10      	ldr	r3, [pc, #64]	; (8002a88 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4a0f      	ldr	r2, [pc, #60]	; (8002a88 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8002a4a:	f043 0304 	orr.w	r3, r3, #4
 8002a4e:	6013      	str	r3, [r2, #0]
 8002a50:	4b0d      	ldr	r3, [pc, #52]	; (8002a88 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	f023 0201 	bic.w	r2, r3, #1
 8002a58:	490b      	ldr	r1, [pc, #44]	; (8002a88 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8002a5a:	693b      	ldr	r3, [r7, #16]
 8002a5c:	4313      	orrs	r3, r2
 8002a5e:	600b      	str	r3, [r1, #0]
 8002a60:	4b09      	ldr	r3, [pc, #36]	; (8002a88 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	f003 0301 	and.w	r3, r3, #1
 8002a68:	693a      	ldr	r2, [r7, #16]
 8002a6a:	429a      	cmp	r2, r3
 8002a6c:	d001      	beq.n	8002a72 <RCC_SetFlashLatencyFromMSIRange+0xa6>
 8002a6e:	2301      	movs	r3, #1
 8002a70:	e000      	b.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0xa8>
 8002a72:	2300      	movs	r3, #0
 8002a74:	4618      	mov	r0, r3
 8002a76:	371c      	adds	r7, #28
 8002a78:	46bd      	mov	sp, r7
 8002a7a:	bc80      	pop	{r7}
 8002a7c:	4770      	bx	lr
 8002a7e:	bf00      	nop
 8002a80:	40023800 	.word	0x40023800
 8002a84:	40007000 	.word	0x40007000
 8002a88:	40023c00 	.word	0x40023c00

08002a8c <HAL_RCCEx_PeriphCLKConfig>:
 8002a8c:	b580      	push	{r7, lr}
 8002a8e:	b086      	sub	sp, #24
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	6078      	str	r0, [r7, #4]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	f003 0301 	and.w	r3, r3, #1
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d106      	bne.n	8002aae <HAL_RCCEx_PeriphCLKConfig+0x22>
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	f003 0302 	and.w	r3, r3, #2
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	f000 80ed 	beq.w	8002c88 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
 8002aae:	2300      	movs	r3, #0
 8002ab0:	75fb      	strb	r3, [r7, #23]
 8002ab2:	4b78      	ldr	r3, [pc, #480]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002ab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ab6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002aba:	2b00      	cmp	r3, #0
 8002abc:	d10d      	bne.n	8002ada <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8002abe:	4b75      	ldr	r3, [pc, #468]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ac2:	4a74      	ldr	r2, [pc, #464]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002ac4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002ac8:	6253      	str	r3, [r2, #36]	; 0x24
 8002aca:	4b72      	ldr	r3, [pc, #456]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ace:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ad2:	60bb      	str	r3, [r7, #8]
 8002ad4:	68bb      	ldr	r3, [r7, #8]
 8002ad6:	2301      	movs	r3, #1
 8002ad8:	75fb      	strb	r3, [r7, #23]
 8002ada:	4b6f      	ldr	r3, [pc, #444]	; (8002c98 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d118      	bne.n	8002b18 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8002ae6:	4b6c      	ldr	r3, [pc, #432]	; (8002c98 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	4a6b      	ldr	r2, [pc, #428]	; (8002c98 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 8002aec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002af0:	6013      	str	r3, [r2, #0]
 8002af2:	f7fe fbf1 	bl	80012d8 <HAL_GetTick>
 8002af6:	6138      	str	r0, [r7, #16]
 8002af8:	e008      	b.n	8002b0c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8002afa:	f7fe fbed 	bl	80012d8 <HAL_GetTick>
 8002afe:	4602      	mov	r2, r0
 8002b00:	693b      	ldr	r3, [r7, #16]
 8002b02:	1ad3      	subs	r3, r2, r3
 8002b04:	2b64      	cmp	r3, #100	; 0x64
 8002b06:	d901      	bls.n	8002b0c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8002b08:	2303      	movs	r3, #3
 8002b0a:	e0be      	b.n	8002c8a <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 8002b0c:	4b62      	ldr	r3, [pc, #392]	; (8002c98 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d0f0      	beq.n	8002afa <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8002b18:	4b5e      	ldr	r3, [pc, #376]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8002b20:	60fb      	str	r3, [r7, #12]
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	685b      	ldr	r3, [r3, #4]
 8002b26:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8002b2a:	68fa      	ldr	r2, [r7, #12]
 8002b2c:	429a      	cmp	r2, r3
 8002b2e:	d106      	bne.n	8002b3e <HAL_RCCEx_PeriphCLKConfig+0xb2>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	689b      	ldr	r3, [r3, #8]
 8002b34:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8002b38:	68fa      	ldr	r2, [r7, #12]
 8002b3a:	429a      	cmp	r2, r3
 8002b3c:	d00f      	beq.n	8002b5e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002b46:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002b4a:	d108      	bne.n	8002b5e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8002b4c:	4b51      	ldr	r3, [pc, #324]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002b54:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8002b58:	d101      	bne.n	8002b5e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8002b5a:	2301      	movs	r3, #1
 8002b5c:	e095      	b.n	8002c8a <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 8002b5e:	4b4d      	ldr	r3, [pc, #308]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002b60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002b62:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002b66:	60fb      	str	r3, [r7, #12]
 8002b68:	68fb      	ldr	r3, [r7, #12]
 8002b6a:	2b00      	cmp	r3, #0
 8002b6c:	d041      	beq.n	8002bf2 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	685b      	ldr	r3, [r3, #4]
 8002b72:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002b76:	68fa      	ldr	r2, [r7, #12]
 8002b78:	429a      	cmp	r2, r3
 8002b7a:	d005      	beq.n	8002b88 <HAL_RCCEx_PeriphCLKConfig+0xfc>
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	f003 0301 	and.w	r3, r3, #1
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	d10c      	bne.n	8002ba2 <HAL_RCCEx_PeriphCLKConfig+0x116>
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	689b      	ldr	r3, [r3, #8]
 8002b8c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002b90:	68fa      	ldr	r2, [r7, #12]
 8002b92:	429a      	cmp	r2, r3
 8002b94:	d02d      	beq.n	8002bf2 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	f003 0302 	and.w	r3, r3, #2
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d027      	beq.n	8002bf2 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8002ba2:	4b3c      	ldr	r3, [pc, #240]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002ba4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ba6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8002baa:	60fb      	str	r3, [r7, #12]
 8002bac:	4b3b      	ldr	r3, [pc, #236]	; (8002c9c <HAL_RCCEx_PeriphCLKConfig+0x210>)
 8002bae:	2201      	movs	r2, #1
 8002bb0:	601a      	str	r2, [r3, #0]
 8002bb2:	4b3a      	ldr	r3, [pc, #232]	; (8002c9c <HAL_RCCEx_PeriphCLKConfig+0x210>)
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	601a      	str	r2, [r3, #0]
 8002bb8:	4a36      	ldr	r2, [pc, #216]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002bba:	68fb      	ldr	r3, [r7, #12]
 8002bbc:	6353      	str	r3, [r2, #52]	; 0x34
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d014      	beq.n	8002bf2 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8002bc8:	f7fe fb86 	bl	80012d8 <HAL_GetTick>
 8002bcc:	6138      	str	r0, [r7, #16]
 8002bce:	e00a      	b.n	8002be6 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8002bd0:	f7fe fb82 	bl	80012d8 <HAL_GetTick>
 8002bd4:	4602      	mov	r2, r0
 8002bd6:	693b      	ldr	r3, [r7, #16]
 8002bd8:	1ad3      	subs	r3, r2, r3
 8002bda:	f241 3288 	movw	r2, #5000	; 0x1388
 8002bde:	4293      	cmp	r3, r2
 8002be0:	d901      	bls.n	8002be6 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8002be2:	2303      	movs	r3, #3
 8002be4:	e051      	b.n	8002c8a <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 8002be6:	4b2b      	ldr	r3, [pc, #172]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002be8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002bea:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d0ee      	beq.n	8002bd0 <HAL_RCCEx_PeriphCLKConfig+0x144>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	f003 0302 	and.w	r3, r3, #2
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d01a      	beq.n	8002c34 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	689b      	ldr	r3, [r3, #8]
 8002c02:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c06:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002c0a:	d10a      	bne.n	8002c22 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8002c0c:	4b21      	ldr	r3, [pc, #132]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	689b      	ldr	r3, [r3, #8]
 8002c18:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8002c1c:	491d      	ldr	r1, [pc, #116]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c1e:	4313      	orrs	r3, r2
 8002c20:	600b      	str	r3, [r1, #0]
 8002c22:	4b1c      	ldr	r3, [pc, #112]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c24:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	689b      	ldr	r3, [r3, #8]
 8002c2a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c2e:	4919      	ldr	r1, [pc, #100]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c30:	4313      	orrs	r3, r2
 8002c32:	634b      	str	r3, [r1, #52]	; 0x34
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	f003 0301 	and.w	r3, r3, #1
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	d01a      	beq.n	8002c76 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	685b      	ldr	r3, [r3, #4]
 8002c44:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c48:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002c4c:	d10a      	bne.n	8002c64 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
 8002c4e:	4b11      	ldr	r3, [pc, #68]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	685b      	ldr	r3, [r3, #4]
 8002c5a:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8002c5e:	490d      	ldr	r1, [pc, #52]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c60:	4313      	orrs	r3, r2
 8002c62:	600b      	str	r3, [r1, #0]
 8002c64:	4b0b      	ldr	r3, [pc, #44]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	685b      	ldr	r3, [r3, #4]
 8002c6c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002c70:	4908      	ldr	r1, [pc, #32]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c72:	4313      	orrs	r3, r2
 8002c74:	634b      	str	r3, [r1, #52]	; 0x34
 8002c76:	7dfb      	ldrb	r3, [r7, #23]
 8002c78:	2b01      	cmp	r3, #1
 8002c7a:	d105      	bne.n	8002c88 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
 8002c7c:	4b05      	ldr	r3, [pc, #20]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c80:	4a04      	ldr	r2, [pc, #16]	; (8002c94 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8002c82:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002c86:	6253      	str	r3, [r2, #36]	; 0x24
 8002c88:	2300      	movs	r3, #0
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	3718      	adds	r7, #24
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	bd80      	pop	{r7, pc}
 8002c92:	bf00      	nop
 8002c94:	40023800 	.word	0x40023800
 8002c98:	40007000 	.word	0x40007000
 8002c9c:	424706dc 	.word	0x424706dc

08002ca0 <HAL_TIM_Base_Init>:
 8002ca0:	b580      	push	{r7, lr}
 8002ca2:	b082      	sub	sp, #8
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	6078      	str	r0, [r7, #4]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d101      	bne.n	8002cb2 <HAL_TIM_Base_Init+0x12>
 8002cae:	2301      	movs	r3, #1
 8002cb0:	e031      	b.n	8002d16 <HAL_TIM_Base_Init+0x76>
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002cb8:	b2db      	uxtb	r3, r3
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	d106      	bne.n	8002ccc <HAL_TIM_Base_Init+0x2c>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002cc6:	6878      	ldr	r0, [r7, #4]
 8002cc8:	f7fe f9d8 	bl	800107c <HAL_TIM_Base_MspInit>
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	2202      	movs	r2, #2
 8002cd0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681a      	ldr	r2, [r3, #0]
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	3304      	adds	r3, #4
 8002cdc:	4619      	mov	r1, r3
 8002cde:	4610      	mov	r0, r2
 8002ce0:	f000 f8e4 	bl	8002eac <TIM_Base_SetConfig>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	2201      	movs	r2, #1
 8002ce8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	2201      	movs	r2, #1
 8002cf0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	2201      	movs	r2, #1
 8002cf8:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	2201      	movs	r2, #1
 8002d00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	2201      	movs	r2, #1
 8002d08:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	2201      	movs	r2, #1
 8002d10:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002d14:	2300      	movs	r3, #0
 8002d16:	4618      	mov	r0, r3
 8002d18:	3708      	adds	r7, #8
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd80      	pop	{r7, pc}

08002d1e <HAL_TIM_ConfigClockSource>:
 8002d1e:	b580      	push	{r7, lr}
 8002d20:	b084      	sub	sp, #16
 8002d22:	af00      	add	r7, sp, #0
 8002d24:	6078      	str	r0, [r7, #4]
 8002d26:	6039      	str	r1, [r7, #0]
 8002d28:	2300      	movs	r3, #0
 8002d2a:	73fb      	strb	r3, [r7, #15]
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002d32:	2b01      	cmp	r3, #1
 8002d34:	d101      	bne.n	8002d3a <HAL_TIM_ConfigClockSource+0x1c>
 8002d36:	2302      	movs	r3, #2
 8002d38:	e0b4      	b.n	8002ea4 <HAL_TIM_ConfigClockSource+0x186>
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	2201      	movs	r2, #1
 8002d3e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	2202      	movs	r2, #2
 8002d46:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	689b      	ldr	r3, [r3, #8]
 8002d50:	60bb      	str	r3, [r7, #8]
 8002d52:	68bb      	ldr	r3, [r7, #8]
 8002d54:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002d58:	60bb      	str	r3, [r7, #8]
 8002d5a:	68bb      	ldr	r3, [r7, #8]
 8002d5c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d60:	60bb      	str	r3, [r7, #8]
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	68ba      	ldr	r2, [r7, #8]
 8002d68:	609a      	str	r2, [r3, #8]
 8002d6a:	683b      	ldr	r3, [r7, #0]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d72:	d03e      	beq.n	8002df2 <HAL_TIM_ConfigClockSource+0xd4>
 8002d74:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d78:	f200 8087 	bhi.w	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002d7c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d80:	f000 8086 	beq.w	8002e90 <HAL_TIM_ConfigClockSource+0x172>
 8002d84:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d88:	d87f      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002d8a:	2b70      	cmp	r3, #112	; 0x70
 8002d8c:	d01a      	beq.n	8002dc4 <HAL_TIM_ConfigClockSource+0xa6>
 8002d8e:	2b70      	cmp	r3, #112	; 0x70
 8002d90:	d87b      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002d92:	2b60      	cmp	r3, #96	; 0x60
 8002d94:	d050      	beq.n	8002e38 <HAL_TIM_ConfigClockSource+0x11a>
 8002d96:	2b60      	cmp	r3, #96	; 0x60
 8002d98:	d877      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002d9a:	2b50      	cmp	r3, #80	; 0x50
 8002d9c:	d03c      	beq.n	8002e18 <HAL_TIM_ConfigClockSource+0xfa>
 8002d9e:	2b50      	cmp	r3, #80	; 0x50
 8002da0:	d873      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002da2:	2b40      	cmp	r3, #64	; 0x40
 8002da4:	d058      	beq.n	8002e58 <HAL_TIM_ConfigClockSource+0x13a>
 8002da6:	2b40      	cmp	r3, #64	; 0x40
 8002da8:	d86f      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002daa:	2b30      	cmp	r3, #48	; 0x30
 8002dac:	d064      	beq.n	8002e78 <HAL_TIM_ConfigClockSource+0x15a>
 8002dae:	2b30      	cmp	r3, #48	; 0x30
 8002db0:	d86b      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002db2:	2b20      	cmp	r3, #32
 8002db4:	d060      	beq.n	8002e78 <HAL_TIM_ConfigClockSource+0x15a>
 8002db6:	2b20      	cmp	r3, #32
 8002db8:	d867      	bhi.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d05c      	beq.n	8002e78 <HAL_TIM_ConfigClockSource+0x15a>
 8002dbe:	2b10      	cmp	r3, #16
 8002dc0:	d05a      	beq.n	8002e78 <HAL_TIM_ConfigClockSource+0x15a>
 8002dc2:	e062      	b.n	8002e8a <HAL_TIM_ConfigClockSource+0x16c>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	6818      	ldr	r0, [r3, #0]
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	6899      	ldr	r1, [r3, #8]
 8002dcc:	683b      	ldr	r3, [r7, #0]
 8002dce:	685a      	ldr	r2, [r3, #4]
 8002dd0:	683b      	ldr	r3, [r7, #0]
 8002dd2:	68db      	ldr	r3, [r3, #12]
 8002dd4:	f000 f943 	bl	800305e <TIM_ETR_SetConfig>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	689b      	ldr	r3, [r3, #8]
 8002dde:	60bb      	str	r3, [r7, #8]
 8002de0:	68bb      	ldr	r3, [r7, #8]
 8002de2:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002de6:	60bb      	str	r3, [r7, #8]
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	68ba      	ldr	r2, [r7, #8]
 8002dee:	609a      	str	r2, [r3, #8]
 8002df0:	e04f      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	6818      	ldr	r0, [r3, #0]
 8002df6:	683b      	ldr	r3, [r7, #0]
 8002df8:	6899      	ldr	r1, [r3, #8]
 8002dfa:	683b      	ldr	r3, [r7, #0]
 8002dfc:	685a      	ldr	r2, [r3, #4]
 8002dfe:	683b      	ldr	r3, [r7, #0]
 8002e00:	68db      	ldr	r3, [r3, #12]
 8002e02:	f000 f92c 	bl	800305e <TIM_ETR_SetConfig>
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	689a      	ldr	r2, [r3, #8]
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002e14:	609a      	str	r2, [r3, #8]
 8002e16:	e03c      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	6818      	ldr	r0, [r3, #0]
 8002e1c:	683b      	ldr	r3, [r7, #0]
 8002e1e:	6859      	ldr	r1, [r3, #4]
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	68db      	ldr	r3, [r3, #12]
 8002e24:	461a      	mov	r2, r3
 8002e26:	f000 f8a3 	bl	8002f70 <TIM_TI1_ConfigInputStage>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	2150      	movs	r1, #80	; 0x50
 8002e30:	4618      	mov	r0, r3
 8002e32:	f000 f8fa 	bl	800302a <TIM_ITRx_SetConfig>
 8002e36:	e02c      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	6818      	ldr	r0, [r3, #0]
 8002e3c:	683b      	ldr	r3, [r7, #0]
 8002e3e:	6859      	ldr	r1, [r3, #4]
 8002e40:	683b      	ldr	r3, [r7, #0]
 8002e42:	68db      	ldr	r3, [r3, #12]
 8002e44:	461a      	mov	r2, r3
 8002e46:	f000 f8c1 	bl	8002fcc <TIM_TI2_ConfigInputStage>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	681b      	ldr	r3, [r3, #0]
 8002e4e:	2160      	movs	r1, #96	; 0x60
 8002e50:	4618      	mov	r0, r3
 8002e52:	f000 f8ea 	bl	800302a <TIM_ITRx_SetConfig>
 8002e56:	e01c      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	6818      	ldr	r0, [r3, #0]
 8002e5c:	683b      	ldr	r3, [r7, #0]
 8002e5e:	6859      	ldr	r1, [r3, #4]
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	68db      	ldr	r3, [r3, #12]
 8002e64:	461a      	mov	r2, r3
 8002e66:	f000 f883 	bl	8002f70 <TIM_TI1_ConfigInputStage>
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	2140      	movs	r1, #64	; 0x40
 8002e70:	4618      	mov	r0, r3
 8002e72:	f000 f8da 	bl	800302a <TIM_ITRx_SetConfig>
 8002e76:	e00c      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681a      	ldr	r2, [r3, #0]
 8002e7c:	683b      	ldr	r3, [r7, #0]
 8002e7e:	681b      	ldr	r3, [r3, #0]
 8002e80:	4619      	mov	r1, r3
 8002e82:	4610      	mov	r0, r2
 8002e84:	f000 f8d1 	bl	800302a <TIM_ITRx_SetConfig>
 8002e88:	e003      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e8a:	2301      	movs	r3, #1
 8002e8c:	73fb      	strb	r3, [r7, #15]
 8002e8e:	e000      	b.n	8002e92 <HAL_TIM_ConfigClockSource+0x174>
 8002e90:	bf00      	nop
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	2201      	movs	r2, #1
 8002e96:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002ea2:	7bfb      	ldrb	r3, [r7, #15]
 8002ea4:	4618      	mov	r0, r3
 8002ea6:	3710      	adds	r7, #16
 8002ea8:	46bd      	mov	sp, r7
 8002eaa:	bd80      	pop	{r7, pc}

08002eac <TIM_Base_SetConfig>:
 8002eac:	b480      	push	{r7}
 8002eae:	b085      	sub	sp, #20
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	6078      	str	r0, [r7, #4]
 8002eb4:	6039      	str	r1, [r7, #0]
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	60fb      	str	r3, [r7, #12]
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ec2:	d007      	beq.n	8002ed4 <TIM_Base_SetConfig+0x28>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	4a25      	ldr	r2, [pc, #148]	; (8002f5c <TIM_Base_SetConfig+0xb0>)
 8002ec8:	4293      	cmp	r3, r2
 8002eca:	d003      	beq.n	8002ed4 <TIM_Base_SetConfig+0x28>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	4a24      	ldr	r2, [pc, #144]	; (8002f60 <TIM_Base_SetConfig+0xb4>)
 8002ed0:	4293      	cmp	r3, r2
 8002ed2:	d108      	bne.n	8002ee6 <TIM_Base_SetConfig+0x3a>
 8002ed4:	68fb      	ldr	r3, [r7, #12]
 8002ed6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002eda:	60fb      	str	r3, [r7, #12]
 8002edc:	683b      	ldr	r3, [r7, #0]
 8002ede:	685b      	ldr	r3, [r3, #4]
 8002ee0:	68fa      	ldr	r2, [r7, #12]
 8002ee2:	4313      	orrs	r3, r2
 8002ee4:	60fb      	str	r3, [r7, #12]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002eec:	d013      	beq.n	8002f16 <TIM_Base_SetConfig+0x6a>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	4a1a      	ldr	r2, [pc, #104]	; (8002f5c <TIM_Base_SetConfig+0xb0>)
 8002ef2:	4293      	cmp	r3, r2
 8002ef4:	d00f      	beq.n	8002f16 <TIM_Base_SetConfig+0x6a>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	4a19      	ldr	r2, [pc, #100]	; (8002f60 <TIM_Base_SetConfig+0xb4>)
 8002efa:	4293      	cmp	r3, r2
 8002efc:	d00b      	beq.n	8002f16 <TIM_Base_SetConfig+0x6a>
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	4a18      	ldr	r2, [pc, #96]	; (8002f64 <TIM_Base_SetConfig+0xb8>)
 8002f02:	4293      	cmp	r3, r2
 8002f04:	d007      	beq.n	8002f16 <TIM_Base_SetConfig+0x6a>
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	4a17      	ldr	r2, [pc, #92]	; (8002f68 <TIM_Base_SetConfig+0xbc>)
 8002f0a:	4293      	cmp	r3, r2
 8002f0c:	d003      	beq.n	8002f16 <TIM_Base_SetConfig+0x6a>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	4a16      	ldr	r2, [pc, #88]	; (8002f6c <TIM_Base_SetConfig+0xc0>)
 8002f12:	4293      	cmp	r3, r2
 8002f14:	d108      	bne.n	8002f28 <TIM_Base_SetConfig+0x7c>
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	683b      	ldr	r3, [r7, #0]
 8002f20:	68db      	ldr	r3, [r3, #12]
 8002f22:	68fa      	ldr	r2, [r7, #12]
 8002f24:	4313      	orrs	r3, r2
 8002f26:	60fb      	str	r3, [r7, #12]
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f2e:	683b      	ldr	r3, [r7, #0]
 8002f30:	691b      	ldr	r3, [r3, #16]
 8002f32:	4313      	orrs	r3, r2
 8002f34:	60fb      	str	r3, [r7, #12]
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	68fa      	ldr	r2, [r7, #12]
 8002f3a:	601a      	str	r2, [r3, #0]
 8002f3c:	683b      	ldr	r3, [r7, #0]
 8002f3e:	689a      	ldr	r2, [r3, #8]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f44:	683b      	ldr	r3, [r7, #0]
 8002f46:	681a      	ldr	r2, [r3, #0]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	629a      	str	r2, [r3, #40]	; 0x28
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	2201      	movs	r2, #1
 8002f50:	615a      	str	r2, [r3, #20]
 8002f52:	bf00      	nop
 8002f54:	3714      	adds	r7, #20
 8002f56:	46bd      	mov	sp, r7
 8002f58:	bc80      	pop	{r7}
 8002f5a:	4770      	bx	lr
 8002f5c:	40000400 	.word	0x40000400
 8002f60:	40000800 	.word	0x40000800
 8002f64:	40010800 	.word	0x40010800
 8002f68:	40010c00 	.word	0x40010c00
 8002f6c:	40011000 	.word	0x40011000

08002f70 <TIM_TI1_ConfigInputStage>:
 8002f70:	b480      	push	{r7}
 8002f72:	b087      	sub	sp, #28
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	60f8      	str	r0, [r7, #12]
 8002f78:	60b9      	str	r1, [r7, #8]
 8002f7a:	607a      	str	r2, [r7, #4]
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	6a1b      	ldr	r3, [r3, #32]
 8002f80:	617b      	str	r3, [r7, #20]
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	6a1b      	ldr	r3, [r3, #32]
 8002f86:	f023 0201 	bic.w	r2, r3, #1
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	621a      	str	r2, [r3, #32]
 8002f8e:	68fb      	ldr	r3, [r7, #12]
 8002f90:	699b      	ldr	r3, [r3, #24]
 8002f92:	613b      	str	r3, [r7, #16]
 8002f94:	693b      	ldr	r3, [r7, #16]
 8002f96:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002f9a:	613b      	str	r3, [r7, #16]
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	011b      	lsls	r3, r3, #4
 8002fa0:	693a      	ldr	r2, [r7, #16]
 8002fa2:	4313      	orrs	r3, r2
 8002fa4:	613b      	str	r3, [r7, #16]
 8002fa6:	697b      	ldr	r3, [r7, #20]
 8002fa8:	f023 030a 	bic.w	r3, r3, #10
 8002fac:	617b      	str	r3, [r7, #20]
 8002fae:	697a      	ldr	r2, [r7, #20]
 8002fb0:	68bb      	ldr	r3, [r7, #8]
 8002fb2:	4313      	orrs	r3, r2
 8002fb4:	617b      	str	r3, [r7, #20]
 8002fb6:	68fb      	ldr	r3, [r7, #12]
 8002fb8:	693a      	ldr	r2, [r7, #16]
 8002fba:	619a      	str	r2, [r3, #24]
 8002fbc:	68fb      	ldr	r3, [r7, #12]
 8002fbe:	697a      	ldr	r2, [r7, #20]
 8002fc0:	621a      	str	r2, [r3, #32]
 8002fc2:	bf00      	nop
 8002fc4:	371c      	adds	r7, #28
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	bc80      	pop	{r7}
 8002fca:	4770      	bx	lr

08002fcc <TIM_TI2_ConfigInputStage>:
 8002fcc:	b480      	push	{r7}
 8002fce:	b087      	sub	sp, #28
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	60f8      	str	r0, [r7, #12]
 8002fd4:	60b9      	str	r1, [r7, #8]
 8002fd6:	607a      	str	r2, [r7, #4]
 8002fd8:	68fb      	ldr	r3, [r7, #12]
 8002fda:	6a1b      	ldr	r3, [r3, #32]
 8002fdc:	617b      	str	r3, [r7, #20]
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	6a1b      	ldr	r3, [r3, #32]
 8002fe2:	f023 0210 	bic.w	r2, r3, #16
 8002fe6:	68fb      	ldr	r3, [r7, #12]
 8002fe8:	621a      	str	r2, [r3, #32]
 8002fea:	68fb      	ldr	r3, [r7, #12]
 8002fec:	699b      	ldr	r3, [r3, #24]
 8002fee:	613b      	str	r3, [r7, #16]
 8002ff0:	693b      	ldr	r3, [r7, #16]
 8002ff2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002ff6:	613b      	str	r3, [r7, #16]
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	031b      	lsls	r3, r3, #12
 8002ffc:	693a      	ldr	r2, [r7, #16]
 8002ffe:	4313      	orrs	r3, r2
 8003000:	613b      	str	r3, [r7, #16]
 8003002:	697b      	ldr	r3, [r7, #20]
 8003004:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003008:	617b      	str	r3, [r7, #20]
 800300a:	68bb      	ldr	r3, [r7, #8]
 800300c:	011b      	lsls	r3, r3, #4
 800300e:	697a      	ldr	r2, [r7, #20]
 8003010:	4313      	orrs	r3, r2
 8003012:	617b      	str	r3, [r7, #20]
 8003014:	68fb      	ldr	r3, [r7, #12]
 8003016:	693a      	ldr	r2, [r7, #16]
 8003018:	619a      	str	r2, [r3, #24]
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	697a      	ldr	r2, [r7, #20]
 800301e:	621a      	str	r2, [r3, #32]
 8003020:	bf00      	nop
 8003022:	371c      	adds	r7, #28
 8003024:	46bd      	mov	sp, r7
 8003026:	bc80      	pop	{r7}
 8003028:	4770      	bx	lr

0800302a <TIM_ITRx_SetConfig>:
 800302a:	b480      	push	{r7}
 800302c:	b085      	sub	sp, #20
 800302e:	af00      	add	r7, sp, #0
 8003030:	6078      	str	r0, [r7, #4]
 8003032:	6039      	str	r1, [r7, #0]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	689b      	ldr	r3, [r3, #8]
 8003038:	60fb      	str	r3, [r7, #12]
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003040:	60fb      	str	r3, [r7, #12]
 8003042:	683a      	ldr	r2, [r7, #0]
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	4313      	orrs	r3, r2
 8003048:	f043 0307 	orr.w	r3, r3, #7
 800304c:	60fb      	str	r3, [r7, #12]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	68fa      	ldr	r2, [r7, #12]
 8003052:	609a      	str	r2, [r3, #8]
 8003054:	bf00      	nop
 8003056:	3714      	adds	r7, #20
 8003058:	46bd      	mov	sp, r7
 800305a:	bc80      	pop	{r7}
 800305c:	4770      	bx	lr

0800305e <TIM_ETR_SetConfig>:
 800305e:	b480      	push	{r7}
 8003060:	b087      	sub	sp, #28
 8003062:	af00      	add	r7, sp, #0
 8003064:	60f8      	str	r0, [r7, #12]
 8003066:	60b9      	str	r1, [r7, #8]
 8003068:	607a      	str	r2, [r7, #4]
 800306a:	603b      	str	r3, [r7, #0]
 800306c:	68fb      	ldr	r3, [r7, #12]
 800306e:	689b      	ldr	r3, [r3, #8]
 8003070:	617b      	str	r3, [r7, #20]
 8003072:	697b      	ldr	r3, [r7, #20]
 8003074:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003078:	617b      	str	r3, [r7, #20]
 800307a:	683b      	ldr	r3, [r7, #0]
 800307c:	021a      	lsls	r2, r3, #8
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	431a      	orrs	r2, r3
 8003082:	68bb      	ldr	r3, [r7, #8]
 8003084:	4313      	orrs	r3, r2
 8003086:	697a      	ldr	r2, [r7, #20]
 8003088:	4313      	orrs	r3, r2
 800308a:	617b      	str	r3, [r7, #20]
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	697a      	ldr	r2, [r7, #20]
 8003090:	609a      	str	r2, [r3, #8]
 8003092:	bf00      	nop
 8003094:	371c      	adds	r7, #28
 8003096:	46bd      	mov	sp, r7
 8003098:	bc80      	pop	{r7}
 800309a:	4770      	bx	lr

0800309c <HAL_TIMEx_MasterConfigSynchronization>:
 800309c:	b480      	push	{r7}
 800309e:	b085      	sub	sp, #20
 80030a0:	af00      	add	r7, sp, #0
 80030a2:	6078      	str	r0, [r7, #4]
 80030a4:	6039      	str	r1, [r7, #0]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80030ac:	2b01      	cmp	r3, #1
 80030ae:	d101      	bne.n	80030b4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80030b0:	2302      	movs	r3, #2
 80030b2:	e046      	b.n	8003142 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	2201      	movs	r2, #1
 80030b8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	2202      	movs	r2, #2
 80030c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	685b      	ldr	r3, [r3, #4]
 80030ca:	60fb      	str	r3, [r7, #12]
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	689b      	ldr	r3, [r3, #8]
 80030d2:	60bb      	str	r3, [r7, #8]
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80030da:	60fb      	str	r3, [r7, #12]
 80030dc:	683b      	ldr	r3, [r7, #0]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	68fa      	ldr	r2, [r7, #12]
 80030e2:	4313      	orrs	r3, r2
 80030e4:	60fb      	str	r3, [r7, #12]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	68fa      	ldr	r2, [r7, #12]
 80030ec:	605a      	str	r2, [r3, #4]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80030f6:	d00e      	beq.n	8003116 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	4a13      	ldr	r2, [pc, #76]	; (800314c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80030fe:	4293      	cmp	r3, r2
 8003100:	d009      	beq.n	8003116 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	4a12      	ldr	r2, [pc, #72]	; (8003150 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003108:	4293      	cmp	r3, r2
 800310a:	d004      	beq.n	8003116 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	4a10      	ldr	r2, [pc, #64]	; (8003154 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003112:	4293      	cmp	r3, r2
 8003114:	d10c      	bne.n	8003130 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003116:	68bb      	ldr	r3, [r7, #8]
 8003118:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800311c:	60bb      	str	r3, [r7, #8]
 800311e:	683b      	ldr	r3, [r7, #0]
 8003120:	685b      	ldr	r3, [r3, #4]
 8003122:	68ba      	ldr	r2, [r7, #8]
 8003124:	4313      	orrs	r3, r2
 8003126:	60bb      	str	r3, [r7, #8]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	68ba      	ldr	r2, [r7, #8]
 800312e:	609a      	str	r2, [r3, #8]
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	2201      	movs	r2, #1
 8003134:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	2200      	movs	r2, #0
 800313c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003140:	2300      	movs	r3, #0
 8003142:	4618      	mov	r0, r3
 8003144:	3714      	adds	r7, #20
 8003146:	46bd      	mov	sp, r7
 8003148:	bc80      	pop	{r7}
 800314a:	4770      	bx	lr
 800314c:	40000400 	.word	0x40000400
 8003150:	40000800 	.word	0x40000800
 8003154:	40010800 	.word	0x40010800

08003158 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8003158:	b580      	push	{r7, lr}
 800315a:	b082      	sub	sp, #8
 800315c:	af00      	add	r7, sp, #0
 800315e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	2b00      	cmp	r3, #0
 8003164:	d101      	bne.n	800316a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8003166:	2301      	movs	r3, #1
 8003168:	e042      	b.n	80031f0 <HAL_UART_Init+0x98>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003170:	b2db      	uxtb	r3, r3
 8003172:	2b00      	cmp	r3, #0
 8003174:	d106      	bne.n	8003184 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	2200      	movs	r2, #0
 800317a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800317e:	6878      	ldr	r0, [r7, #4]
 8003180:	f7fd ffae 	bl	80010e0 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	2224      	movs	r2, #36	; 0x24
 8003188:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	68da      	ldr	r2, [r3, #12]
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800319a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 800319c:	6878      	ldr	r0, [r7, #4]
 800319e:	f000 f9af 	bl	8003500 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	691a      	ldr	r2, [r3, #16]
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80031b0:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	695a      	ldr	r2, [r3, #20]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80031c0:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	68da      	ldr	r2, [r3, #12]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80031d0:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	2200      	movs	r2, #0
 80031d6:	645a      	str	r2, [r3, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	2220      	movs	r2, #32
 80031dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	2220      	movs	r2, #32
 80031e4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2200      	movs	r2, #0
 80031ec:	635a      	str	r2, [r3, #52]	; 0x34

  return HAL_OK;
 80031ee:	2300      	movs	r3, #0
}
 80031f0:	4618      	mov	r0, r3
 80031f2:	3708      	adds	r7, #8
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bd80      	pop	{r7, pc}

080031f8 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80031f8:	b580      	push	{r7, lr}
 80031fa:	b08a      	sub	sp, #40	; 0x28
 80031fc:	af02      	add	r7, sp, #8
 80031fe:	60f8      	str	r0, [r7, #12]
 8003200:	60b9      	str	r1, [r7, #8]
 8003202:	603b      	str	r3, [r7, #0]
 8003204:	4613      	mov	r3, r2
 8003206:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 8003208:	2300      	movs	r3, #0
 800320a:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800320c:	68fb      	ldr	r3, [r7, #12]
 800320e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003212:	b2db      	uxtb	r3, r3
 8003214:	2b20      	cmp	r3, #32
 8003216:	d16d      	bne.n	80032f4 <HAL_UART_Transmit+0xfc>
  {
    if ((pData == NULL) || (Size == 0U))
 8003218:	68bb      	ldr	r3, [r7, #8]
 800321a:	2b00      	cmp	r3, #0
 800321c:	d002      	beq.n	8003224 <HAL_UART_Transmit+0x2c>
 800321e:	88fb      	ldrh	r3, [r7, #6]
 8003220:	2b00      	cmp	r3, #0
 8003222:	d101      	bne.n	8003228 <HAL_UART_Transmit+0x30>
    {
      return  HAL_ERROR;
 8003224:	2301      	movs	r3, #1
 8003226:	e066      	b.n	80032f6 <HAL_UART_Transmit+0xfe>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	2200      	movs	r2, #0
 800322c:	645a      	str	r2, [r3, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	2221      	movs	r2, #33	; 0x21
 8003232:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8003236:	f7fe f84f 	bl	80012d8 <HAL_GetTick>
 800323a:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	88fa      	ldrh	r2, [r7, #6]
 8003240:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8003242:	68fb      	ldr	r3, [r7, #12]
 8003244:	88fa      	ldrh	r2, [r7, #6]
 8003246:	84da      	strh	r2, [r3, #38]	; 0x26

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	689b      	ldr	r3, [r3, #8]
 800324c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003250:	d108      	bne.n	8003264 <HAL_UART_Transmit+0x6c>
 8003252:	68fb      	ldr	r3, [r7, #12]
 8003254:	691b      	ldr	r3, [r3, #16]
 8003256:	2b00      	cmp	r3, #0
 8003258:	d104      	bne.n	8003264 <HAL_UART_Transmit+0x6c>
    {
      pdata8bits  = NULL;
 800325a:	2300      	movs	r3, #0
 800325c:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 800325e:	68bb      	ldr	r3, [r7, #8]
 8003260:	61bb      	str	r3, [r7, #24]
 8003262:	e003      	b.n	800326c <HAL_UART_Transmit+0x74>
    }
    else
    {
      pdata8bits  = pData;
 8003264:	68bb      	ldr	r3, [r7, #8]
 8003266:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8003268:	2300      	movs	r3, #0
 800326a:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 800326c:	e02a      	b.n	80032c4 <HAL_UART_Transmit+0xcc>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800326e:	683b      	ldr	r3, [r7, #0]
 8003270:	9300      	str	r3, [sp, #0]
 8003272:	697b      	ldr	r3, [r7, #20]
 8003274:	2200      	movs	r2, #0
 8003276:	2180      	movs	r1, #128	; 0x80
 8003278:	68f8      	ldr	r0, [r7, #12]
 800327a:	f000 f8d2 	bl	8003422 <UART_WaitOnFlagUntilTimeout>
 800327e:	4603      	mov	r3, r0
 8003280:	2b00      	cmp	r3, #0
 8003282:	d001      	beq.n	8003288 <HAL_UART_Transmit+0x90>
      {
        return HAL_TIMEOUT;
 8003284:	2303      	movs	r3, #3
 8003286:	e036      	b.n	80032f6 <HAL_UART_Transmit+0xfe>
      }
      if (pdata8bits == NULL)
 8003288:	69fb      	ldr	r3, [r7, #28]
 800328a:	2b00      	cmp	r3, #0
 800328c:	d10b      	bne.n	80032a6 <HAL_UART_Transmit+0xae>
      {
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 800328e:	69bb      	ldr	r3, [r7, #24]
 8003290:	881b      	ldrh	r3, [r3, #0]
 8003292:	461a      	mov	r2, r3
 8003294:	68fb      	ldr	r3, [r7, #12]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800329c:	605a      	str	r2, [r3, #4]
        pdata16bits++;
 800329e:	69bb      	ldr	r3, [r7, #24]
 80032a0:	3302      	adds	r3, #2
 80032a2:	61bb      	str	r3, [r7, #24]
 80032a4:	e007      	b.n	80032b6 <HAL_UART_Transmit+0xbe>
      }
      else
      {
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 80032a6:	69fb      	ldr	r3, [r7, #28]
 80032a8:	781a      	ldrb	r2, [r3, #0]
 80032aa:	68fb      	ldr	r3, [r7, #12]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 80032b0:	69fb      	ldr	r3, [r7, #28]
 80032b2:	3301      	adds	r3, #1
 80032b4:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80032b6:	68fb      	ldr	r3, [r7, #12]
 80032b8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80032ba:	b29b      	uxth	r3, r3
 80032bc:	3b01      	subs	r3, #1
 80032be:	b29a      	uxth	r2, r3
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	84da      	strh	r2, [r3, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80032c8:	b29b      	uxth	r3, r3
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	d1cf      	bne.n	800326e <HAL_UART_Transmit+0x76>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80032ce:	683b      	ldr	r3, [r7, #0]
 80032d0:	9300      	str	r3, [sp, #0]
 80032d2:	697b      	ldr	r3, [r7, #20]
 80032d4:	2200      	movs	r2, #0
 80032d6:	2140      	movs	r1, #64	; 0x40
 80032d8:	68f8      	ldr	r0, [r7, #12]
 80032da:	f000 f8a2 	bl	8003422 <UART_WaitOnFlagUntilTimeout>
 80032de:	4603      	mov	r3, r0
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	d001      	beq.n	80032e8 <HAL_UART_Transmit+0xf0>
    {
      return HAL_TIMEOUT;
 80032e4:	2303      	movs	r3, #3
 80032e6:	e006      	b.n	80032f6 <HAL_UART_Transmit+0xfe>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80032e8:	68fb      	ldr	r3, [r7, #12]
 80032ea:	2220      	movs	r2, #32
 80032ec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    return HAL_OK;
 80032f0:	2300      	movs	r3, #0
 80032f2:	e000      	b.n	80032f6 <HAL_UART_Transmit+0xfe>
  }
  else
  {
    return HAL_BUSY;
 80032f4:	2302      	movs	r3, #2
  }
}
 80032f6:	4618      	mov	r0, r3
 80032f8:	3720      	adds	r7, #32
 80032fa:	46bd      	mov	sp, r7
 80032fc:	bd80      	pop	{r7, pc}

080032fe <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80032fe:	b580      	push	{r7, lr}
 8003300:	b08a      	sub	sp, #40	; 0x28
 8003302:	af02      	add	r7, sp, #8
 8003304:	60f8      	str	r0, [r7, #12]
 8003306:	60b9      	str	r1, [r7, #8]
 8003308:	603b      	str	r3, [r7, #0]
 800330a:	4613      	mov	r3, r2
 800330c:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart = 0U;
 800330e:	2300      	movs	r3, #0
 8003310:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8003318:	b2db      	uxtb	r3, r3
 800331a:	2b20      	cmp	r3, #32
 800331c:	d17c      	bne.n	8003418 <HAL_UART_Receive+0x11a>
  {
    if ((pData == NULL) || (Size == 0U))
 800331e:	68bb      	ldr	r3, [r7, #8]
 8003320:	2b00      	cmp	r3, #0
 8003322:	d002      	beq.n	800332a <HAL_UART_Receive+0x2c>
 8003324:	88fb      	ldrh	r3, [r7, #6]
 8003326:	2b00      	cmp	r3, #0
 8003328:	d101      	bne.n	800332e <HAL_UART_Receive+0x30>
    {
      return  HAL_ERROR;
 800332a:	2301      	movs	r3, #1
 800332c:	e075      	b.n	800341a <HAL_UART_Receive+0x11c>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	2200      	movs	r2, #0
 8003332:	645a      	str	r2, [r3, #68]	; 0x44
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	2222      	movs	r2, #34	; 0x22
 8003338:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	2200      	movs	r2, #0
 8003340:	631a      	str	r2, [r3, #48]	; 0x30

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8003342:	f7fd ffc9 	bl	80012d8 <HAL_GetTick>
 8003346:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	88fa      	ldrh	r2, [r7, #6]
 800334c:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	88fa      	ldrh	r2, [r7, #6]
 8003352:	85da      	strh	r2, [r3, #46]	; 0x2e

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	689b      	ldr	r3, [r3, #8]
 8003358:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800335c:	d108      	bne.n	8003370 <HAL_UART_Receive+0x72>
 800335e:	68fb      	ldr	r3, [r7, #12]
 8003360:	691b      	ldr	r3, [r3, #16]
 8003362:	2b00      	cmp	r3, #0
 8003364:	d104      	bne.n	8003370 <HAL_UART_Receive+0x72>
    {
      pdata8bits  = NULL;
 8003366:	2300      	movs	r3, #0
 8003368:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 800336a:	68bb      	ldr	r3, [r7, #8]
 800336c:	61bb      	str	r3, [r7, #24]
 800336e:	e003      	b.n	8003378 <HAL_UART_Receive+0x7a>
    }
    else
    {
      pdata8bits  = pData;
 8003370:	68bb      	ldr	r3, [r7, #8]
 8003372:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8003374:	2300      	movs	r3, #0
 8003376:	61bb      	str	r3, [r7, #24]
    }

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 8003378:	e043      	b.n	8003402 <HAL_UART_Receive+0x104>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 800337a:	683b      	ldr	r3, [r7, #0]
 800337c:	9300      	str	r3, [sp, #0]
 800337e:	697b      	ldr	r3, [r7, #20]
 8003380:	2200      	movs	r2, #0
 8003382:	2120      	movs	r1, #32
 8003384:	68f8      	ldr	r0, [r7, #12]
 8003386:	f000 f84c 	bl	8003422 <UART_WaitOnFlagUntilTimeout>
 800338a:	4603      	mov	r3, r0
 800338c:	2b00      	cmp	r3, #0
 800338e:	d001      	beq.n	8003394 <HAL_UART_Receive+0x96>
      {
        return HAL_TIMEOUT;
 8003390:	2303      	movs	r3, #3
 8003392:	e042      	b.n	800341a <HAL_UART_Receive+0x11c>
      }
      if (pdata8bits == NULL)
 8003394:	69fb      	ldr	r3, [r7, #28]
 8003396:	2b00      	cmp	r3, #0
 8003398:	d10c      	bne.n	80033b4 <HAL_UART_Receive+0xb6>
      {
        *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	685b      	ldr	r3, [r3, #4]
 80033a0:	b29b      	uxth	r3, r3
 80033a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80033a6:	b29a      	uxth	r2, r3
 80033a8:	69bb      	ldr	r3, [r7, #24]
 80033aa:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 80033ac:	69bb      	ldr	r3, [r7, #24]
 80033ae:	3302      	adds	r3, #2
 80033b0:	61bb      	str	r3, [r7, #24]
 80033b2:	e01f      	b.n	80033f4 <HAL_UART_Receive+0xf6>
      }
      else
      {
        if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	689b      	ldr	r3, [r3, #8]
 80033b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80033bc:	d007      	beq.n	80033ce <HAL_UART_Receive+0xd0>
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	689b      	ldr	r3, [r3, #8]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d10a      	bne.n	80033dc <HAL_UART_Receive+0xde>
 80033c6:	68fb      	ldr	r3, [r7, #12]
 80033c8:	691b      	ldr	r3, [r3, #16]
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d106      	bne.n	80033dc <HAL_UART_Receive+0xde>
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 80033ce:	68fb      	ldr	r3, [r7, #12]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	685b      	ldr	r3, [r3, #4]
 80033d4:	b2da      	uxtb	r2, r3
 80033d6:	69fb      	ldr	r3, [r7, #28]
 80033d8:	701a      	strb	r2, [r3, #0]
 80033da:	e008      	b.n	80033ee <HAL_UART_Receive+0xf0>
        }
        else
        {
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	685b      	ldr	r3, [r3, #4]
 80033e2:	b2db      	uxtb	r3, r3
 80033e4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80033e8:	b2da      	uxtb	r2, r3
 80033ea:	69fb      	ldr	r3, [r7, #28]
 80033ec:	701a      	strb	r2, [r3, #0]
        }
        pdata8bits++;
 80033ee:	69fb      	ldr	r3, [r7, #28]
 80033f0:	3301      	adds	r3, #1
 80033f2:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80033f8:	b29b      	uxth	r3, r3
 80033fa:	3b01      	subs	r3, #1
 80033fc:	b29a      	uxth	r2, r3
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	85da      	strh	r2, [r3, #46]	; 0x2e
    while (huart->RxXferCount > 0U)
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003406:	b29b      	uxth	r3, r3
 8003408:	2b00      	cmp	r3, #0
 800340a:	d1b6      	bne.n	800337a <HAL_UART_Receive+0x7c>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	2220      	movs	r2, #32
 8003410:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    return HAL_OK;
 8003414:	2300      	movs	r3, #0
 8003416:	e000      	b.n	800341a <HAL_UART_Receive+0x11c>
  }
  else
  {
    return HAL_BUSY;
 8003418:	2302      	movs	r3, #2
  }
}
 800341a:	4618      	mov	r0, r3
 800341c:	3720      	adds	r7, #32
 800341e:	46bd      	mov	sp, r7
 8003420:	bd80      	pop	{r7, pc}

08003422 <UART_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                                     uint32_t Tickstart, uint32_t Timeout)
{
 8003422:	b580      	push	{r7, lr}
 8003424:	b090      	sub	sp, #64	; 0x40
 8003426:	af00      	add	r7, sp, #0
 8003428:	60f8      	str	r0, [r7, #12]
 800342a:	60b9      	str	r1, [r7, #8]
 800342c:	603b      	str	r3, [r7, #0]
 800342e:	4613      	mov	r3, r2
 8003430:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003432:	e050      	b.n	80034d6 <UART_WaitOnFlagUntilTimeout+0xb4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003434:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003436:	f1b3 3fff 	cmp.w	r3, #4294967295
 800343a:	d04c      	beq.n	80034d6 <UART_WaitOnFlagUntilTimeout+0xb4>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800343c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800343e:	2b00      	cmp	r3, #0
 8003440:	d007      	beq.n	8003452 <UART_WaitOnFlagUntilTimeout+0x30>
 8003442:	f7fd ff49 	bl	80012d8 <HAL_GetTick>
 8003446:	4602      	mov	r2, r0
 8003448:	683b      	ldr	r3, [r7, #0]
 800344a:	1ad3      	subs	r3, r2, r3
 800344c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800344e:	429a      	cmp	r2, r3
 8003450:	d241      	bcs.n	80034d6 <UART_WaitOnFlagUntilTimeout+0xb4>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	330c      	adds	r3, #12
 8003458:	62bb      	str	r3, [r7, #40]	; 0x28
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800345a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800345c:	e853 3f00 	ldrex	r3, [r3]
 8003460:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8003462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003464:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8003468:	63fb      	str	r3, [r7, #60]	; 0x3c
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	330c      	adds	r3, #12
 8003470:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003472:	637a      	str	r2, [r7, #52]	; 0x34
 8003474:	633b      	str	r3, [r7, #48]	; 0x30
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003476:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003478:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800347a:	e841 2300 	strex	r3, r2, [r1]
 800347e:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 8003480:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003482:	2b00      	cmp	r3, #0
 8003484:	d1e5      	bne.n	8003452 <UART_WaitOnFlagUntilTimeout+0x30>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	3314      	adds	r3, #20
 800348c:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800348e:	697b      	ldr	r3, [r7, #20]
 8003490:	e853 3f00 	ldrex	r3, [r3]
 8003494:	613b      	str	r3, [r7, #16]
   return(result);
 8003496:	693b      	ldr	r3, [r7, #16]
 8003498:	f023 0301 	bic.w	r3, r3, #1
 800349c:	63bb      	str	r3, [r7, #56]	; 0x38
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	3314      	adds	r3, #20
 80034a4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80034a6:	623a      	str	r2, [r7, #32]
 80034a8:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80034aa:	69f9      	ldr	r1, [r7, #28]
 80034ac:	6a3a      	ldr	r2, [r7, #32]
 80034ae:	e841 2300 	strex	r3, r2, [r1]
 80034b2:	61bb      	str	r3, [r7, #24]
   return(result);
 80034b4:	69bb      	ldr	r3, [r7, #24]
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d1e5      	bne.n	8003486 <UART_WaitOnFlagUntilTimeout+0x64>

        huart->gState  = HAL_UART_STATE_READY;
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	2220      	movs	r2, #32
 80034be:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        huart->RxState = HAL_UART_STATE_READY;
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	2220      	movs	r2, #32
 80034c6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	2200      	movs	r2, #0
 80034ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_TIMEOUT;
 80034d2:	2303      	movs	r3, #3
 80034d4:	e00f      	b.n	80034f6 <UART_WaitOnFlagUntilTimeout+0xd4>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	681a      	ldr	r2, [r3, #0]
 80034dc:	68bb      	ldr	r3, [r7, #8]
 80034de:	4013      	ands	r3, r2
 80034e0:	68ba      	ldr	r2, [r7, #8]
 80034e2:	429a      	cmp	r2, r3
 80034e4:	bf0c      	ite	eq
 80034e6:	2301      	moveq	r3, #1
 80034e8:	2300      	movne	r3, #0
 80034ea:	b2db      	uxtb	r3, r3
 80034ec:	461a      	mov	r2, r3
 80034ee:	79fb      	ldrb	r3, [r7, #7]
 80034f0:	429a      	cmp	r2, r3
 80034f2:	d09f      	beq.n	8003434 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80034f4:	2300      	movs	r3, #0
}
 80034f6:	4618      	mov	r0, r3
 80034f8:	3740      	adds	r7, #64	; 0x40
 80034fa:	46bd      	mov	sp, r7
 80034fc:	bd80      	pop	{r7, pc}
	...

08003500 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003500:	b580      	push	{r7, lr}
 8003502:	b084      	sub	sp, #16
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	691b      	ldr	r3, [r3, #16]
 800350e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	68da      	ldr	r2, [r3, #12]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	430a      	orrs	r2, r1
 800351c:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	689a      	ldr	r2, [r3, #8]
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	691b      	ldr	r3, [r3, #16]
 8003526:	431a      	orrs	r2, r3
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	695b      	ldr	r3, [r3, #20]
 800352c:	431a      	orrs	r2, r3
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	69db      	ldr	r3, [r3, #28]
 8003532:	4313      	orrs	r3, r2
 8003534:	60bb      	str	r3, [r7, #8]
  MODIFY_REG(huart->Instance->CR1,
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	68db      	ldr	r3, [r3, #12]
 800353c:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8003540:	f023 030c 	bic.w	r3, r3, #12
 8003544:	687a      	ldr	r2, [r7, #4]
 8003546:	6812      	ldr	r2, [r2, #0]
 8003548:	68b9      	ldr	r1, [r7, #8]
 800354a:	430b      	orrs	r3, r1
 800354c:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	695b      	ldr	r3, [r3, #20]
 8003554:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	699a      	ldr	r2, [r3, #24]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	430a      	orrs	r2, r1
 8003562:	615a      	str	r2, [r3, #20]


  if((huart->Instance == USART1))
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	4a55      	ldr	r2, [pc, #340]	; (80036c0 <UART_SetConfig+0x1c0>)
 800356a:	4293      	cmp	r3, r2
 800356c:	d103      	bne.n	8003576 <UART_SetConfig+0x76>
  {
    pclk = HAL_RCC_GetPCLK2Freq();
 800356e:	f7ff fa19 	bl	80029a4 <HAL_RCC_GetPCLK2Freq>
 8003572:	60f8      	str	r0, [r7, #12]
 8003574:	e002      	b.n	800357c <UART_SetConfig+0x7c>
  }
  else
  {
    pclk = HAL_RCC_GetPCLK1Freq();
 8003576:	f7ff fa01 	bl	800297c <HAL_RCC_GetPCLK1Freq>
 800357a:	60f8      	str	r0, [r7, #12]
  }

  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	69db      	ldr	r3, [r3, #28]
 8003580:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003584:	d14c      	bne.n	8003620 <UART_SetConfig+0x120>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8003586:	68fa      	ldr	r2, [r7, #12]
 8003588:	4613      	mov	r3, r2
 800358a:	009b      	lsls	r3, r3, #2
 800358c:	4413      	add	r3, r2
 800358e:	009a      	lsls	r2, r3, #2
 8003590:	441a      	add	r2, r3
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	685b      	ldr	r3, [r3, #4]
 8003596:	005b      	lsls	r3, r3, #1
 8003598:	fbb2 f3f3 	udiv	r3, r2, r3
 800359c:	4a49      	ldr	r2, [pc, #292]	; (80036c4 <UART_SetConfig+0x1c4>)
 800359e:	fba2 2303 	umull	r2, r3, r2, r3
 80035a2:	095b      	lsrs	r3, r3, #5
 80035a4:	0119      	lsls	r1, r3, #4
 80035a6:	68fa      	ldr	r2, [r7, #12]
 80035a8:	4613      	mov	r3, r2
 80035aa:	009b      	lsls	r3, r3, #2
 80035ac:	4413      	add	r3, r2
 80035ae:	009a      	lsls	r2, r3, #2
 80035b0:	441a      	add	r2, r3
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	685b      	ldr	r3, [r3, #4]
 80035b6:	005b      	lsls	r3, r3, #1
 80035b8:	fbb2 f2f3 	udiv	r2, r2, r3
 80035bc:	4b41      	ldr	r3, [pc, #260]	; (80036c4 <UART_SetConfig+0x1c4>)
 80035be:	fba3 0302 	umull	r0, r3, r3, r2
 80035c2:	095b      	lsrs	r3, r3, #5
 80035c4:	2064      	movs	r0, #100	; 0x64
 80035c6:	fb00 f303 	mul.w	r3, r0, r3
 80035ca:	1ad3      	subs	r3, r2, r3
 80035cc:	00db      	lsls	r3, r3, #3
 80035ce:	3332      	adds	r3, #50	; 0x32
 80035d0:	4a3c      	ldr	r2, [pc, #240]	; (80036c4 <UART_SetConfig+0x1c4>)
 80035d2:	fba2 2303 	umull	r2, r3, r2, r3
 80035d6:	095b      	lsrs	r3, r3, #5
 80035d8:	005b      	lsls	r3, r3, #1
 80035da:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80035de:	4419      	add	r1, r3
 80035e0:	68fa      	ldr	r2, [r7, #12]
 80035e2:	4613      	mov	r3, r2
 80035e4:	009b      	lsls	r3, r3, #2
 80035e6:	4413      	add	r3, r2
 80035e8:	009a      	lsls	r2, r3, #2
 80035ea:	441a      	add	r2, r3
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	685b      	ldr	r3, [r3, #4]
 80035f0:	005b      	lsls	r3, r3, #1
 80035f2:	fbb2 f2f3 	udiv	r2, r2, r3
 80035f6:	4b33      	ldr	r3, [pc, #204]	; (80036c4 <UART_SetConfig+0x1c4>)
 80035f8:	fba3 0302 	umull	r0, r3, r3, r2
 80035fc:	095b      	lsrs	r3, r3, #5
 80035fe:	2064      	movs	r0, #100	; 0x64
 8003600:	fb00 f303 	mul.w	r3, r0, r3
 8003604:	1ad3      	subs	r3, r2, r3
 8003606:	00db      	lsls	r3, r3, #3
 8003608:	3332      	adds	r3, #50	; 0x32
 800360a:	4a2e      	ldr	r2, [pc, #184]	; (80036c4 <UART_SetConfig+0x1c4>)
 800360c:	fba2 2303 	umull	r2, r3, r2, r3
 8003610:	095b      	lsrs	r3, r3, #5
 8003612:	f003 0207 	and.w	r2, r3, #7
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	440a      	add	r2, r1
 800361c:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 800361e:	e04a      	b.n	80036b6 <UART_SetConfig+0x1b6>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8003620:	68fa      	ldr	r2, [r7, #12]
 8003622:	4613      	mov	r3, r2
 8003624:	009b      	lsls	r3, r3, #2
 8003626:	4413      	add	r3, r2
 8003628:	009a      	lsls	r2, r3, #2
 800362a:	441a      	add	r2, r3
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	685b      	ldr	r3, [r3, #4]
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	fbb2 f3f3 	udiv	r3, r2, r3
 8003636:	4a23      	ldr	r2, [pc, #140]	; (80036c4 <UART_SetConfig+0x1c4>)
 8003638:	fba2 2303 	umull	r2, r3, r2, r3
 800363c:	095b      	lsrs	r3, r3, #5
 800363e:	0119      	lsls	r1, r3, #4
 8003640:	68fa      	ldr	r2, [r7, #12]
 8003642:	4613      	mov	r3, r2
 8003644:	009b      	lsls	r3, r3, #2
 8003646:	4413      	add	r3, r2
 8003648:	009a      	lsls	r2, r3, #2
 800364a:	441a      	add	r2, r3
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	685b      	ldr	r3, [r3, #4]
 8003650:	009b      	lsls	r3, r3, #2
 8003652:	fbb2 f2f3 	udiv	r2, r2, r3
 8003656:	4b1b      	ldr	r3, [pc, #108]	; (80036c4 <UART_SetConfig+0x1c4>)
 8003658:	fba3 0302 	umull	r0, r3, r3, r2
 800365c:	095b      	lsrs	r3, r3, #5
 800365e:	2064      	movs	r0, #100	; 0x64
 8003660:	fb00 f303 	mul.w	r3, r0, r3
 8003664:	1ad3      	subs	r3, r2, r3
 8003666:	011b      	lsls	r3, r3, #4
 8003668:	3332      	adds	r3, #50	; 0x32
 800366a:	4a16      	ldr	r2, [pc, #88]	; (80036c4 <UART_SetConfig+0x1c4>)
 800366c:	fba2 2303 	umull	r2, r3, r2, r3
 8003670:	095b      	lsrs	r3, r3, #5
 8003672:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003676:	4419      	add	r1, r3
 8003678:	68fa      	ldr	r2, [r7, #12]
 800367a:	4613      	mov	r3, r2
 800367c:	009b      	lsls	r3, r3, #2
 800367e:	4413      	add	r3, r2
 8003680:	009a      	lsls	r2, r3, #2
 8003682:	441a      	add	r2, r3
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	685b      	ldr	r3, [r3, #4]
 8003688:	009b      	lsls	r3, r3, #2
 800368a:	fbb2 f2f3 	udiv	r2, r2, r3
 800368e:	4b0d      	ldr	r3, [pc, #52]	; (80036c4 <UART_SetConfig+0x1c4>)
 8003690:	fba3 0302 	umull	r0, r3, r3, r2
 8003694:	095b      	lsrs	r3, r3, #5
 8003696:	2064      	movs	r0, #100	; 0x64
 8003698:	fb00 f303 	mul.w	r3, r0, r3
 800369c:	1ad3      	subs	r3, r2, r3
 800369e:	011b      	lsls	r3, r3, #4
 80036a0:	3332      	adds	r3, #50	; 0x32
 80036a2:	4a08      	ldr	r2, [pc, #32]	; (80036c4 <UART_SetConfig+0x1c4>)
 80036a4:	fba2 2303 	umull	r2, r3, r2, r3
 80036a8:	095b      	lsrs	r3, r3, #5
 80036aa:	f003 020f 	and.w	r2, r3, #15
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	440a      	add	r2, r1
 80036b4:	609a      	str	r2, [r3, #8]
}
 80036b6:	bf00      	nop
 80036b8:	3710      	adds	r7, #16
 80036ba:	46bd      	mov	sp, r7
 80036bc:	bd80      	pop	{r7, pc}
 80036be:	bf00      	nop
 80036c0:	40013800 	.word	0x40013800
 80036c4:	51eb851f 	.word	0x51eb851f

080036c8 <memset>:
 80036c8:	4603      	mov	r3, r0
 80036ca:	4402      	add	r2, r0
 80036cc:	4293      	cmp	r3, r2
 80036ce:	d100      	bne.n	80036d2 <memset+0xa>
 80036d0:	4770      	bx	lr
 80036d2:	f803 1b01 	strb.w	r1, [r3], #1
 80036d6:	e7f9      	b.n	80036cc <memset+0x4>

080036d8 <__libc_init_array>:
 80036d8:	b570      	push	{r4, r5, r6, lr}
 80036da:	2600      	movs	r6, #0
 80036dc:	4d0c      	ldr	r5, [pc, #48]	; (8003710 <__libc_init_array+0x38>)
 80036de:	4c0d      	ldr	r4, [pc, #52]	; (8003714 <__libc_init_array+0x3c>)
 80036e0:	1b64      	subs	r4, r4, r5
 80036e2:	10a4      	asrs	r4, r4, #2
 80036e4:	42a6      	cmp	r6, r4
 80036e6:	d109      	bne.n	80036fc <__libc_init_array+0x24>
 80036e8:	f000 f81a 	bl	8003720 <_init>
 80036ec:	2600      	movs	r6, #0
 80036ee:	4d0a      	ldr	r5, [pc, #40]	; (8003718 <__libc_init_array+0x40>)
 80036f0:	4c0a      	ldr	r4, [pc, #40]	; (800371c <__libc_init_array+0x44>)
 80036f2:	1b64      	subs	r4, r4, r5
 80036f4:	10a4      	asrs	r4, r4, #2
 80036f6:	42a6      	cmp	r6, r4
 80036f8:	d105      	bne.n	8003706 <__libc_init_array+0x2e>
 80036fa:	bd70      	pop	{r4, r5, r6, pc}
 80036fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8003700:	4798      	blx	r3
 8003702:	3601      	adds	r6, #1
 8003704:	e7ee      	b.n	80036e4 <__libc_init_array+0xc>
 8003706:	f855 3b04 	ldr.w	r3, [r5], #4
 800370a:	4798      	blx	r3
 800370c:	3601      	adds	r6, #1
 800370e:	e7f2      	b.n	80036f6 <__libc_init_array+0x1e>
 8003710:	08003764 	.word	0x08003764
 8003714:	08003764 	.word	0x08003764
 8003718:	08003764 	.word	0x08003764
 800371c:	08003768 	.word	0x08003768

08003720 <_init>:
 8003720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003722:	bf00      	nop
 8003724:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003726:	bc08      	pop	{r3}
 8003728:	469e      	mov	lr, r3
 800372a:	4770      	bx	lr

0800372c <_fini>:
 800372c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800372e:	bf00      	nop
 8003730:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003732:	bc08      	pop	{r3}
 8003734:	469e      	mov	lr, r3
 8003736:	4770      	bx	lr
